<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="io.frame.dao.custom.mapper.CustomeRecommendMapper">
  <resultMap id="BaseResultMap" type="io.frame.dao.entity.Recommend">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="recommendId" jdbcType="BIGINT" property="recommendId" />
    <result column="userId" jdbcType="BIGINT" property="userId" />
    <result column="parentId" jdbcType="BIGINT" property="parentId" />
    <result column="groupUserIds" jdbcType="VARCHAR" property="groupUserIds" />
    <result column="recommendNumber" jdbcType="INTEGER" property="recommendNumber" />
    <result column="teamAchievement" jdbcType="DECIMAL" property="teamAchievement" />
    <result column="createTime" jdbcType="TIMESTAMP" property="createTime" />
    <result column="createUser" jdbcType="VARCHAR" property="createUser" />
    <result column="updateTime" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="updateUser" jdbcType="VARCHAR" property="updateUser" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    recommendId, userId, parentId, groupUserIds, recommendNumber, teamAchievement, createTime, 
    createUser, updateTime, updateUser
  </sql>
  <select id="selectByExample" parameterType="io.frame.dao.entity.RecommendExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from u_recommend
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExampleShowField" parameterType="map" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="example!=null and example.distinct">
      distinct
    </if>
    <foreach collection="showField" item="column" separator=",">
      ${column}
    </foreach>
    from u_recommend
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
    <if test="example.orderByClause != null">
      order by ${example.orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from u_recommend
    where recommendId = #{recommendId,jdbcType=BIGINT}
  </select>
  <select id="selectByPrimaryKeyShowField" parameterType="map" resultType="io.frame.dao.entity.Recommend">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <foreach collection="showField" item="column" separator=",">
      ${column}
    </foreach>
    from u_recommend
    where recommendId = #{recommendId,jdbcType=BIGINT}
    limit 1
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from u_recommend
    where recommendId = #{recommendId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="io.frame.dao.entity.RecommendExample">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from u_recommend
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="io.frame.dao.entity.Recommend">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into u_recommend (recommendId, userId, parentId, 
      groupUserIds, recommendNumber, teamAchievement, 
      createTime, createUser, updateTime, 
      updateUser)
    values (#{recommendId,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, #{parentId,jdbcType=BIGINT}, 
      #{groupUserIds,jdbcType=VARCHAR}, #{recommendNumber,jdbcType=INTEGER}, #{teamAchievement,jdbcType=DECIMAL}, 
      #{createTime,jdbcType=TIMESTAMP}, #{createUser,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{updateUser,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="io.frame.dao.entity.Recommend">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into u_recommend
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="recommendId != null">
        recommendId,
      </if>
      <if test="userId != null">
        userId,
      </if>
      <if test="parentId != null">
        parentId,
      </if>
      <if test="groupUserIds != null">
        groupUserIds,
      </if>
      <if test="recommendNumber != null">
        recommendNumber,
      </if>
      <if test="teamAchievement != null">
        teamAchievement,
      </if>
      <if test="createTime != null">
        createTime,
      </if>
      <if test="createUser != null">
        createUser,
      </if>
      <if test="updateTime != null">
        updateTime,
      </if>
      <if test="updateUser != null">
        updateUser,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="recommendId != null">
        #{recommendId,jdbcType=BIGINT},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="parentId != null">
        #{parentId,jdbcType=BIGINT},
      </if>
      <if test="groupUserIds != null">
        #{groupUserIds,jdbcType=VARCHAR},
      </if>
      <if test="recommendNumber != null">
        #{recommendNumber,jdbcType=INTEGER},
      </if>
      <if test="teamAchievement != null">
        #{teamAchievement,jdbcType=DECIMAL},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null">
        #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        #{updateUser,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="io.frame.dao.entity.RecommendExample" resultType="int">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from u_recommend
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update u_recommend
    <set>
      <if test="record.recommendId != null">
        recommendId = #{record.recommendId,jdbcType=BIGINT},
      </if>
      <if test="record.userId != null">
        userId = #{record.userId,jdbcType=BIGINT},
      </if>
      <if test="record.parentId != null">
        parentId = #{record.parentId,jdbcType=BIGINT},
      </if>
      <if test="record.groupUserIds != null">
        groupUserIds = #{record.groupUserIds,jdbcType=VARCHAR},
      </if>
      <if test="record.recommendNumber != null">
        recommendNumber = #{record.recommendNumber,jdbcType=INTEGER},
      </if>
      <if test="record.teamAchievement != null">
        teamAchievement = #{record.teamAchievement,jdbcType=DECIMAL},
      </if>
      <if test="record.createTime != null">
        createTime = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createUser != null">
        createUser = #{record.createUser,jdbcType=VARCHAR},
      </if>
      <if test="record.updateTime != null">
        updateTime = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateUser != null">
        updateUser = #{record.updateUser,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update u_recommend
    set recommendId = #{record.recommendId,jdbcType=BIGINT},
      userId = #{record.userId,jdbcType=BIGINT},
      parentId = #{record.parentId,jdbcType=BIGINT},
      groupUserIds = #{record.groupUserIds,jdbcType=VARCHAR},
      recommendNumber = #{record.recommendNumber,jdbcType=INTEGER},
      teamAchievement = #{record.teamAchievement,jdbcType=DECIMAL},
      createTime = #{record.createTime,jdbcType=TIMESTAMP},
      createUser = #{record.createUser,jdbcType=VARCHAR},
      updateTime = #{record.updateTime,jdbcType=TIMESTAMP},
      updateUser = #{record.updateUser,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleSelectiveSync" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update  u_recommend
    <set>
    <if test="record.recommendNumber != null">
       recommendNumber = (case when recommendNumber is null then #{record.recommendNumber,jdbcType=INTEGER} else recommendNumber + #{record.recommendNumber,jdbcType=INTEGER} end ),
    </if>
    <if test="record.teamAchievement != null">
       teamAchievement = (case when teamAchievement is null then #{record.teamAchievement,jdbcType=DECIMAL} else teamAchievement + #{record.teamAchievement,jdbcType=DECIMAL} end ),
    </if>
    </set>
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="io.frame.dao.entity.Recommend">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update u_recommend
    <set>
      <if test="userId != null">
        userId = #{userId,jdbcType=BIGINT},
      </if>
      <if test="parentId != null">
        parentId = #{parentId,jdbcType=BIGINT},
      </if>
      <if test="groupUserIds != null">
        groupUserIds = #{groupUserIds,jdbcType=VARCHAR},
      </if>
      <if test="recommendNumber != null">
        recommendNumber = #{recommendNumber,jdbcType=INTEGER},
      </if>
      <if test="teamAchievement != null">
        teamAchievement = #{teamAchievement,jdbcType=DECIMAL},
      </if>
      <if test="createTime != null">
        createTime = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null">
        createUser = #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        updateTime = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        updateUser = #{updateUser,jdbcType=VARCHAR},
      </if>
    </set>
    where recommendId = #{recommendId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="io.frame.dao.entity.Recommend">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update u_recommend
    set userId = #{userId,jdbcType=BIGINT},
      parentId = #{parentId,jdbcType=BIGINT},
      groupUserIds = #{groupUserIds,jdbcType=VARCHAR},
      recommendNumber = #{recommendNumber,jdbcType=INTEGER},
      teamAchievement = #{teamAchievement,jdbcType=DECIMAL},
      createTime = #{createTime,jdbcType=TIMESTAMP},
      createUser = #{createUser,jdbcType=VARCHAR},
      updateTime = #{updateTime,jdbcType=TIMESTAMP},
      updateUser = #{updateUser,jdbcType=VARCHAR}
    where recommendId = #{recommendId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeySelectiveSync" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update  u_recommend
    <set>
    <if test="recommendNumber != null">
       recommendNumber = (case when recommendNumber is null then #{recommendNumber,jdbcType=INTEGER} else recommendNumber + #{recommendNumber,jdbcType=INTEGER} end ),
    </if>
    <if test="teamAchievement != null">
       teamAchievement = (case when teamAchievement is null then #{teamAchievement,jdbcType=DECIMAL} else teamAchievement + #{teamAchievement,jdbcType=DECIMAL} end ),
    </if>
    </set>
    where recommendId = #{recommendId,jdbcType=BIGINT}
  </update>
  <insert id="insertBatch" parameterType="java.util.List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into u_recommend
    (recommendId, userId, parentId, groupUserIds, recommendNumber, teamAchievement, createTime, 
      createUser, updateTime, updateUser)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.recommendId,jdbcType=BIGINT}, #{item.userId,jdbcType=BIGINT}, #{item.parentId,jdbcType=BIGINT}, 
        #{item.groupUserIds,jdbcType=VARCHAR}, #{item.recommendNumber,jdbcType=INTEGER}, 
        #{item.teamAchievement,jdbcType=DECIMAL}, #{item.createTime,jdbcType=TIMESTAMP}, 
        #{item.createUser,jdbcType=VARCHAR}, #{item.updateTime,jdbcType=TIMESTAMP}, #{item.updateUser,jdbcType=VARCHAR}
        )
    </foreach>
  </insert>
  <insert id="insertBatchSelective" parameterType="java.util.List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into u_recommend (
    <foreach collection="showField" item="one" separator=",">
      ${one}
    </foreach>
    )
    values
    <foreach collection="list" item="item" separator=",">
      (
      <foreach collection="showField" item="column" separator=",">
        <if test="'recommendId' == column">
          #{item.recommendId,jdbcType=BIGINT}
        </if>
        <if test="'userId' == column">
          #{item.userId,jdbcType=BIGINT}
        </if>
        <if test="'parentId' == column">
          #{item.parentId,jdbcType=BIGINT}
        </if>
        <if test="'groupUserIds' == column">
          #{item.groupUserIds,jdbcType=VARCHAR}
        </if>
        <if test="'recommendNumber' == column">
          #{item.recommendNumber,jdbcType=INTEGER}
        </if>
        <if test="'teamAchievement' == column">
          #{item.teamAchievement,jdbcType=DECIMAL}
        </if>
        <if test="'createTime' == column">
          #{item.createTime,jdbcType=TIMESTAMP}
        </if>
        <if test="'createUser' == column">
          #{item.createUser,jdbcType=VARCHAR}
        </if>
        <if test="'updateTime' == column">
          #{item.updateTime,jdbcType=TIMESTAMP}
        </if>
        <if test="'updateUser' == column">
          #{item.updateUser,jdbcType=VARCHAR}
        </if>
      </foreach>
      )
    </foreach>
  </insert>
  <select id="selectOneByExample" parameterType="io.frame.dao.entity.RecommendExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <include refid="Base_Column_List" />
    from u_recommend
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    limit 1
  </select>
  <select id="selectOneByExampleShowField" parameterType="map" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <foreach collection="showField" item="column" separator=",">
      ${column}
    </foreach>
    from u_recommend
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
    <if test="example.orderByClause != null">
      order by ${example.orderByClause}
    </if>
    limit 1
  </select>
  <insert id="upsert" parameterType="io.frame.dao.entity.Recommend">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into u_recommend
    (recommendId, userId, parentId, groupUserIds, recommendNumber, teamAchievement, createTime, 
      createUser, updateTime, updateUser)
    values
    (#{recommendId,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, #{parentId,jdbcType=BIGINT}, 
      #{groupUserIds,jdbcType=VARCHAR}, #{recommendNumber,jdbcType=INTEGER}, #{teamAchievement,jdbcType=DECIMAL}, 
      #{createTime,jdbcType=TIMESTAMP}, #{createUser,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{updateUser,jdbcType=VARCHAR})
    on duplicate key update 
    recommendId =  #{recommendId,jdbcType=BIGINT},
    userId =  #{userId,jdbcType=BIGINT},
    parentId =  #{parentId,jdbcType=BIGINT},
    groupUserIds =  #{groupUserIds,jdbcType=VARCHAR},
    recommendNumber =  #{recommendNumber,jdbcType=INTEGER},
    teamAchievement = (case when teamAchievement is null then #{teamAchievement,jdbcType=DECIMAL} else teamAchievement + #{teamAchievement,jdbcType=DECIMAL} end ),
    createTime =  #{createTime,jdbcType=TIMESTAMP},
    createUser =  #{createUser,jdbcType=VARCHAR},
    updateTime =  #{updateTime,jdbcType=TIMESTAMP},
    updateUser =  #{updateUser,jdbcType=VARCHAR}
  </insert>
  <insert id="upsertSelective" parameterType="io.frame.dao.entity.Recommend">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into u_recommend
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="recommendId != null">
        recommendId,
      </if>
      <if test="userId != null">
        userId,
      </if>
      <if test="parentId != null">
        parentId,
      </if>
      <if test="groupUserIds != null">
        groupUserIds,
      </if>
      <if test="recommendNumber != null">
        recommendNumber,
      </if>
      <if test="teamAchievement != null">
        teamAchievement,
      </if>
      <if test="createTime != null">
        createTime,
      </if>
      <if test="createUser != null">
        createUser,
      </if>
      <if test="updateTime != null">
        updateTime,
      </if>
      <if test="updateUser != null">
        updateUser,
      </if>
    </trim>
    values
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="recommendId != null">
        #{recommendId,jdbcType=BIGINT},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="parentId != null">
        #{parentId,jdbcType=BIGINT},
      </if>
      <if test="groupUserIds != null">
        #{groupUserIds,jdbcType=VARCHAR},
      </if>
      <if test="recommendNumber != null">
        #{recommendNumber,jdbcType=INTEGER},
      </if>
      <if test="teamAchievement != null">
        #{teamAchievement,jdbcType=DECIMAL},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null">
        #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        #{updateUser,jdbcType=VARCHAR},
      </if>
    </trim>
    on duplicate key update 
    <trim suffixOverrides=",">
      <if test="recommendId != null">
        recommendId =  #{recommendId,jdbcType=BIGINT},
      </if>
      <if test="userId != null">
        userId =  #{userId,jdbcType=BIGINT},
      </if>
      <if test="parentId != null">
        parentId =  #{parentId,jdbcType=BIGINT},
      </if>
      <if test="groupUserIds != null">
        groupUserIds =  #{groupUserIds,jdbcType=VARCHAR},
      </if>
      <if test="recommendNumber != null">
        recommendNumber =  #{recommendNumber,jdbcType=INTEGER},
      </if>
      <if test="teamAchievement != null">
        teamAchievement = (case when teamAchievement is null then #{teamAchievement,jdbcType=DECIMAL} else teamAchievement + #{teamAchievement,jdbcType=DECIMAL} end ),
      </if>
      <if test="createTime != null">
        createTime =  #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null">
        createUser =  #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        updateTime =  #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        updateUser =  #{updateUser,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  
  
  
  <!-- 用于后台定时任务自定义查询 -->
  <select id="customSelectOneByExample" resultType="io.frame.dao.custom.entity.CustomeRecommendVo">
		SELECT 
		  userId,recommendNum,teamNum,teamAchievement
		FROM
		  (SELECT 
		    u.userId AS userId,
		    (SELECT 
		      SUM(a.recommendNumber) 
		    FROM
		      u_recommend a 
		    WHERE a.parentId = #{userId}) AS recommendNum,
		    SUM(u.recommendNumber) AS teamNum,
		    SUM(u.teamAchievement) AS teamAchievement 
		  FROM
		    u_recommend u 
		  WHERE u.groupUserIds LIKE concat(#{groupUserIds},'%')) a 
		WHERE a.recommendNum <![CDATA[>=]]> #{recommendNum} 
		  AND a.teamNum <![CDATA[>=]]> #{teamNum} 
		  AND a.teamAchievement <![CDATA[>=]]>  #{teamAchievement}
  </select>
  
  
  
  <!-- 用于前端界面显示自定义查询 -->
  <select id="customCountByExample" resultType="int">
    	<!-- 最终结果 -->
		SELECT COUNT(c.counts) FROM (
		<!-- 满足累计直推人数 -->
		SELECT COUNT(*) AS counts FROM u_recommend b WHERE b.parentId IN (
		<!-- 满足团队人数,团队累计业绩  -->
		SELECT a.userId FROM (
		<!-- 累加人数,累加团队业绩 -->
		SELECT u.userId, SUM(u.recommendNumber) AS recommendNumber,SUM(u.teamAchievement) AS teamAchievement 
		FROM u_recommend u GROUP BY u.userId
		
		) a WHERE <![CDATA[a.recommendNumber > #{teamsNum}]]>   AND <![CDATA[a.teamAchievement > #{teamsAchievement}]]> 
		
		)  GROUP BY b.parentId
		
		) c WHERE <![CDATA[c.counts > #{recommendNum}]]> 
		    
  </select>
  
</mapper>