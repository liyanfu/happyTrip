package io.frame.dao.entity;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class ScheduleJobLogExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table s_schedule_job_log
     *
     * @mbggenerated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table s_schedule_job_log
     *
     * @mbggenerated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table s_schedule_job_log
     *
     * @mbggenerated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table s_schedule_job_log
     *
     * @mbggenerated
     */
    public ScheduleJobLogExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table s_schedule_job_log
     *
     * @mbggenerated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table s_schedule_job_log
     *
     * @mbggenerated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table s_schedule_job_log
     *
     * @mbggenerated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table s_schedule_job_log
     *
     * @mbggenerated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table s_schedule_job_log
     *
     * @mbggenerated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table s_schedule_job_log
     *
     * @mbggenerated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table s_schedule_job_log
     *
     * @mbggenerated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table s_schedule_job_log
     *
     * @mbggenerated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table s_schedule_job_log
     *
     * @mbggenerated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table s_schedule_job_log
     *
     * @mbggenerated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table s_schedule_job_log
     *
     * @mbggenerated
     */
    public void setOrderByClauseIgnoreNull(String orderByClause) {
        String tmp = orderByClause.toLowerCase().replace("null", "").replace("asc", "").replace("desc", "").trim();
        if (orderByClause != null && tmp.length() > 0) {
            this.orderByClause = orderByClause;}
        }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table s_schedule_job_log
     *
     * @mbggenerated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andLogIdIsNull() {
            addCriterion("logId is null");
            return (Criteria) this;
        }

        public Criteria andLogIdIsNotNull() {
            addCriterion("logId is not null");
            return (Criteria) this;
        }

        public Criteria andLogIdEqualTo(Long value) {
            addCriterion("logId =", value, "logId");
            return (Criteria) this;
        }

        public Criteria andLogIdNotEqualTo(Long value) {
            addCriterion("logId <>", value, "logId");
            return (Criteria) this;
        }

        public Criteria andLogIdGreaterThan(Long value) {
            addCriterion("logId >", value, "logId");
            return (Criteria) this;
        }

        public Criteria andLogIdGreaterThanOrEqualTo(Long value) {
            addCriterion("logId >=", value, "logId");
            return (Criteria) this;
        }

        public Criteria andLogIdLessThan(Long value) {
            addCriterion("logId <", value, "logId");
            return (Criteria) this;
        }

        public Criteria andLogIdLessThanOrEqualTo(Long value) {
            addCriterion("logId <=", value, "logId");
            return (Criteria) this;
        }

        public Criteria andLogIdIn(List<Long> values) {
            addCriterion("logId in", values, "logId");
            return (Criteria) this;
        }

        public Criteria andLogIdNotIn(List<Long> values) {
            addCriterion("logId not in", values, "logId");
            return (Criteria) this;
        }

        public Criteria andLogIdBetween(Long value1, Long value2) {
            addCriterion("logId between", value1, value2, "logId");
            return (Criteria) this;
        }

        public Criteria andLogIdNotBetween(Long value1, Long value2) {
            addCriterion("logId not between", value1, value2, "logId");
            return (Criteria) this;
        }

        public Criteria andJobIdIsNull() {
            addCriterion("jobId is null");
            return (Criteria) this;
        }

        public Criteria andJobIdIsNotNull() {
            addCriterion("jobId is not null");
            return (Criteria) this;
        }

        public Criteria andJobIdEqualTo(Long value) {
            addCriterion("jobId =", value, "jobId");
            return (Criteria) this;
        }

        public Criteria andJobIdNotEqualTo(Long value) {
            addCriterion("jobId <>", value, "jobId");
            return (Criteria) this;
        }

        public Criteria andJobIdGreaterThan(Long value) {
            addCriterion("jobId >", value, "jobId");
            return (Criteria) this;
        }

        public Criteria andJobIdGreaterThanOrEqualTo(Long value) {
            addCriterion("jobId >=", value, "jobId");
            return (Criteria) this;
        }

        public Criteria andJobIdLessThan(Long value) {
            addCriterion("jobId <", value, "jobId");
            return (Criteria) this;
        }

        public Criteria andJobIdLessThanOrEqualTo(Long value) {
            addCriterion("jobId <=", value, "jobId");
            return (Criteria) this;
        }

        public Criteria andJobIdIn(List<Long> values) {
            addCriterion("jobId in", values, "jobId");
            return (Criteria) this;
        }

        public Criteria andJobIdNotIn(List<Long> values) {
            addCriterion("jobId not in", values, "jobId");
            return (Criteria) this;
        }

        public Criteria andJobIdBetween(Long value1, Long value2) {
            addCriterion("jobId between", value1, value2, "jobId");
            return (Criteria) this;
        }

        public Criteria andJobIdNotBetween(Long value1, Long value2) {
            addCriterion("jobId not between", value1, value2, "jobId");
            return (Criteria) this;
        }

        public Criteria andBeanNameIsNull() {
            addCriterion("beanName is null");
            return (Criteria) this;
        }

        public Criteria andBeanNameIsNotNull() {
            addCriterion("beanName is not null");
            return (Criteria) this;
        }

        public Criteria andBeanNameEqualTo(String value) {
            addCriterion("beanName =", value, "beanName");
            return (Criteria) this;
        }

        public Criteria andBeanNameNotEqualTo(String value) {
            addCriterion("beanName <>", value, "beanName");
            return (Criteria) this;
        }

        public Criteria andBeanNameGreaterThan(String value) {
            addCriterion("beanName >", value, "beanName");
            return (Criteria) this;
        }

        public Criteria andBeanNameGreaterThanOrEqualTo(String value) {
            addCriterion("beanName >=", value, "beanName");
            return (Criteria) this;
        }

        public Criteria andBeanNameLessThan(String value) {
            addCriterion("beanName <", value, "beanName");
            return (Criteria) this;
        }

        public Criteria andBeanNameLessThanOrEqualTo(String value) {
            addCriterion("beanName <=", value, "beanName");
            return (Criteria) this;
        }

        public Criteria andBeanNameLike(String value) {
            addCriterion("beanName like", value, "beanName");
            return (Criteria) this;
        }

        public Criteria andBeanNameNotLike(String value) {
            addCriterion("beanName not like", value, "beanName");
            return (Criteria) this;
        }

        public Criteria andBeanNameIn(List<String> values) {
            addCriterion("beanName in", values, "beanName");
            return (Criteria) this;
        }

        public Criteria andBeanNameNotIn(List<String> values) {
            addCriterion("beanName not in", values, "beanName");
            return (Criteria) this;
        }

        public Criteria andBeanNameBetween(String value1, String value2) {
            addCriterion("beanName between", value1, value2, "beanName");
            return (Criteria) this;
        }

        public Criteria andBeanNameNotBetween(String value1, String value2) {
            addCriterion("beanName not between", value1, value2, "beanName");
            return (Criteria) this;
        }

        public Criteria andMethodNameIsNull() {
            addCriterion("methodName is null");
            return (Criteria) this;
        }

        public Criteria andMethodNameIsNotNull() {
            addCriterion("methodName is not null");
            return (Criteria) this;
        }

        public Criteria andMethodNameEqualTo(String value) {
            addCriterion("methodName =", value, "methodName");
            return (Criteria) this;
        }

        public Criteria andMethodNameNotEqualTo(String value) {
            addCriterion("methodName <>", value, "methodName");
            return (Criteria) this;
        }

        public Criteria andMethodNameGreaterThan(String value) {
            addCriterion("methodName >", value, "methodName");
            return (Criteria) this;
        }

        public Criteria andMethodNameGreaterThanOrEqualTo(String value) {
            addCriterion("methodName >=", value, "methodName");
            return (Criteria) this;
        }

        public Criteria andMethodNameLessThan(String value) {
            addCriterion("methodName <", value, "methodName");
            return (Criteria) this;
        }

        public Criteria andMethodNameLessThanOrEqualTo(String value) {
            addCriterion("methodName <=", value, "methodName");
            return (Criteria) this;
        }

        public Criteria andMethodNameLike(String value) {
            addCriterion("methodName like", value, "methodName");
            return (Criteria) this;
        }

        public Criteria andMethodNameNotLike(String value) {
            addCriterion("methodName not like", value, "methodName");
            return (Criteria) this;
        }

        public Criteria andMethodNameIn(List<String> values) {
            addCriterion("methodName in", values, "methodName");
            return (Criteria) this;
        }

        public Criteria andMethodNameNotIn(List<String> values) {
            addCriterion("methodName not in", values, "methodName");
            return (Criteria) this;
        }

        public Criteria andMethodNameBetween(String value1, String value2) {
            addCriterion("methodName between", value1, value2, "methodName");
            return (Criteria) this;
        }

        public Criteria andMethodNameNotBetween(String value1, String value2) {
            addCriterion("methodName not between", value1, value2, "methodName");
            return (Criteria) this;
        }

        public Criteria andParamsIsNull() {
            addCriterion("params is null");
            return (Criteria) this;
        }

        public Criteria andParamsIsNotNull() {
            addCriterion("params is not null");
            return (Criteria) this;
        }

        public Criteria andParamsEqualTo(String value) {
            addCriterion("params =", value, "params");
            return (Criteria) this;
        }

        public Criteria andParamsNotEqualTo(String value) {
            addCriterion("params <>", value, "params");
            return (Criteria) this;
        }

        public Criteria andParamsGreaterThan(String value) {
            addCriterion("params >", value, "params");
            return (Criteria) this;
        }

        public Criteria andParamsGreaterThanOrEqualTo(String value) {
            addCriterion("params >=", value, "params");
            return (Criteria) this;
        }

        public Criteria andParamsLessThan(String value) {
            addCriterion("params <", value, "params");
            return (Criteria) this;
        }

        public Criteria andParamsLessThanOrEqualTo(String value) {
            addCriterion("params <=", value, "params");
            return (Criteria) this;
        }

        public Criteria andParamsLike(String value) {
            addCriterion("params like", value, "params");
            return (Criteria) this;
        }

        public Criteria andParamsNotLike(String value) {
            addCriterion("params not like", value, "params");
            return (Criteria) this;
        }

        public Criteria andParamsIn(List<String> values) {
            addCriterion("params in", values, "params");
            return (Criteria) this;
        }

        public Criteria andParamsNotIn(List<String> values) {
            addCriterion("params not in", values, "params");
            return (Criteria) this;
        }

        public Criteria andParamsBetween(String value1, String value2) {
            addCriterion("params between", value1, value2, "params");
            return (Criteria) this;
        }

        public Criteria andParamsNotBetween(String value1, String value2) {
            addCriterion("params not between", value1, value2, "params");
            return (Criteria) this;
        }

        public Criteria andStatusIsNull() {
            addCriterion("status is null");
            return (Criteria) this;
        }

        public Criteria andStatusIsNotNull() {
            addCriterion("status is not null");
            return (Criteria) this;
        }

        public Criteria andStatusEqualTo(Byte value) {
            addCriterion("status =", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusNotEqualTo(Byte value) {
            addCriterion("status <>", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusGreaterThan(Byte value) {
            addCriterion("status >", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusGreaterThanOrEqualTo(Byte value) {
            addCriterion("status >=", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusLessThan(Byte value) {
            addCriterion("status <", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusLessThanOrEqualTo(Byte value) {
            addCriterion("status <=", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusIn(List<Byte> values) {
            addCriterion("status in", values, "status");
            return (Criteria) this;
        }

        public Criteria andStatusNotIn(List<Byte> values) {
            addCriterion("status not in", values, "status");
            return (Criteria) this;
        }

        public Criteria andStatusBetween(Byte value1, Byte value2) {
            addCriterion("status between", value1, value2, "status");
            return (Criteria) this;
        }

        public Criteria andStatusNotBetween(Byte value1, Byte value2) {
            addCriterion("status not between", value1, value2, "status");
            return (Criteria) this;
        }

        public Criteria andErrorIsNull() {
            addCriterion("error is null");
            return (Criteria) this;
        }

        public Criteria andErrorIsNotNull() {
            addCriterion("error is not null");
            return (Criteria) this;
        }

        public Criteria andErrorEqualTo(String value) {
            addCriterion("error =", value, "error");
            return (Criteria) this;
        }

        public Criteria andErrorNotEqualTo(String value) {
            addCriterion("error <>", value, "error");
            return (Criteria) this;
        }

        public Criteria andErrorGreaterThan(String value) {
            addCriterion("error >", value, "error");
            return (Criteria) this;
        }

        public Criteria andErrorGreaterThanOrEqualTo(String value) {
            addCriterion("error >=", value, "error");
            return (Criteria) this;
        }

        public Criteria andErrorLessThan(String value) {
            addCriterion("error <", value, "error");
            return (Criteria) this;
        }

        public Criteria andErrorLessThanOrEqualTo(String value) {
            addCriterion("error <=", value, "error");
            return (Criteria) this;
        }

        public Criteria andErrorLike(String value) {
            addCriterion("error like", value, "error");
            return (Criteria) this;
        }

        public Criteria andErrorNotLike(String value) {
            addCriterion("error not like", value, "error");
            return (Criteria) this;
        }

        public Criteria andErrorIn(List<String> values) {
            addCriterion("error in", values, "error");
            return (Criteria) this;
        }

        public Criteria andErrorNotIn(List<String> values) {
            addCriterion("error not in", values, "error");
            return (Criteria) this;
        }

        public Criteria andErrorBetween(String value1, String value2) {
            addCriterion("error between", value1, value2, "error");
            return (Criteria) this;
        }

        public Criteria andErrorNotBetween(String value1, String value2) {
            addCriterion("error not between", value1, value2, "error");
            return (Criteria) this;
        }

        public Criteria andTimesIsNull() {
            addCriterion("times is null");
            return (Criteria) this;
        }

        public Criteria andTimesIsNotNull() {
            addCriterion("times is not null");
            return (Criteria) this;
        }

        public Criteria andTimesEqualTo(Integer value) {
            addCriterion("times =", value, "times");
            return (Criteria) this;
        }

        public Criteria andTimesNotEqualTo(Integer value) {
            addCriterion("times <>", value, "times");
            return (Criteria) this;
        }

        public Criteria andTimesGreaterThan(Integer value) {
            addCriterion("times >", value, "times");
            return (Criteria) this;
        }

        public Criteria andTimesGreaterThanOrEqualTo(Integer value) {
            addCriterion("times >=", value, "times");
            return (Criteria) this;
        }

        public Criteria andTimesLessThan(Integer value) {
            addCriterion("times <", value, "times");
            return (Criteria) this;
        }

        public Criteria andTimesLessThanOrEqualTo(Integer value) {
            addCriterion("times <=", value, "times");
            return (Criteria) this;
        }

        public Criteria andTimesIn(List<Integer> values) {
            addCriterion("times in", values, "times");
            return (Criteria) this;
        }

        public Criteria andTimesNotIn(List<Integer> values) {
            addCriterion("times not in", values, "times");
            return (Criteria) this;
        }

        public Criteria andTimesBetween(Integer value1, Integer value2) {
            addCriterion("times between", value1, value2, "times");
            return (Criteria) this;
        }

        public Criteria andTimesNotBetween(Integer value1, Integer value2) {
            addCriterion("times not between", value1, value2, "times");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIsNull() {
            addCriterion("createTime is null");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIsNotNull() {
            addCriterion("createTime is not null");
            return (Criteria) this;
        }

        public Criteria andCreateTimeEqualTo(Date value) {
            addCriterion("createTime =", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotEqualTo(Date value) {
            addCriterion("createTime <>", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeGreaterThan(Date value) {
            addCriterion("createTime >", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeGreaterThanOrEqualTo(Date value) {
            addCriterion("createTime >=", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeLessThan(Date value) {
            addCriterion("createTime <", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeLessThanOrEqualTo(Date value) {
            addCriterion("createTime <=", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIn(List<Date> values) {
            addCriterion("createTime in", values, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotIn(List<Date> values) {
            addCriterion("createTime not in", values, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeBetween(Date value1, Date value2) {
            addCriterion("createTime between", value1, value2, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotBetween(Date value1, Date value2) {
            addCriterion("createTime not between", value1, value2, "createTime");
            return (Criteria) this;
        }

        public Criteria andBeanNameLikeInsensitive(String value) {
            addCriterion("upper(beanName) like", value.toUpperCase(), "beanName");
            return (Criteria) this;
        }

        public Criteria andMethodNameLikeInsensitive(String value) {
            addCriterion("upper(methodName) like", value.toUpperCase(), "methodName");
            return (Criteria) this;
        }

        public Criteria andParamsLikeInsensitive(String value) {
            addCriterion("upper(params) like", value.toUpperCase(), "params");
            return (Criteria) this;
        }

        public Criteria andErrorLikeInsensitive(String value) {
            addCriterion("upper(error) like", value.toUpperCase(), "error");
            return (Criteria) this;
        }

        protected void addCriterionIgnoreNull(String condition, Object value, String property) {
            if (value != null) {
                if (value instanceof String) {
                    if (condition.toLowerCase().endsWith("like")) {
                        if (((String) value).replaceAll("%", "").length() > 0) {
                            criteria.add(new Criterion(condition, value));
                        }
                    } else if (((String) value).length() > 0) {
                        criteria.add(new Criterion(condition, value));
                    }
                } else if (value instanceof List<?>) {
                    if (((List<?>) value).size() > 0) {
                        criteria.add(new Criterion(condition, value));
                    }
                } else {
                    criteria.add(new Criterion(condition, value));
                }
            }
        }

        public Criteria andLogIdEqualToIgnoreNull(Long value) {
            addCriterionIgnoreNull("logId =", value, "logId");
            return (Criteria) this;
        }

        public Criteria andLogIdNotEqualToIgnoreNull(Long value) {
            addCriterionIgnoreNull("logId <>", value, "logId");
            return (Criteria) this;
        }

        public Criteria andLogIdGreaterThanIgnoreNull(Long value) {
            addCriterionIgnoreNull("logId >", value, "logId");
            return (Criteria) this;
        }

        public Criteria andLogIdGreaterThanOrEqualToIgnoreNull(Long value) {
            addCriterionIgnoreNull("logId >=", value, "logId");
            return (Criteria) this;
        }

        public Criteria andLogIdLessThanIgnoreNull(Long value) {
            addCriterionIgnoreNull("logId <", value, "logId");
            return (Criteria) this;
        }

        public Criteria andLogIdLessThanOrEqualToIgnoreNull(Long value) {
            addCriterionIgnoreNull("logId <=", value, "logId");
            return (Criteria) this;
        }

        public Criteria andLogIdInIgnoreNull(List<Long> value) {
            addCriterionIgnoreNull("logId in", value, "logId");
            return (Criteria) this;
        }

        public Criteria andLogIdNotInIgnoreNull(List<Long> value) {
            addCriterionIgnoreNull("logId not in", value, "logId");
            return (Criteria) this;
        }

        public Criteria andJobIdEqualToIgnoreNull(Long value) {
            addCriterionIgnoreNull("jobId =", value, "jobId");
            return (Criteria) this;
        }

        public Criteria andJobIdNotEqualToIgnoreNull(Long value) {
            addCriterionIgnoreNull("jobId <>", value, "jobId");
            return (Criteria) this;
        }

        public Criteria andJobIdGreaterThanIgnoreNull(Long value) {
            addCriterionIgnoreNull("jobId >", value, "jobId");
            return (Criteria) this;
        }

        public Criteria andJobIdGreaterThanOrEqualToIgnoreNull(Long value) {
            addCriterionIgnoreNull("jobId >=", value, "jobId");
            return (Criteria) this;
        }

        public Criteria andJobIdLessThanIgnoreNull(Long value) {
            addCriterionIgnoreNull("jobId <", value, "jobId");
            return (Criteria) this;
        }

        public Criteria andJobIdLessThanOrEqualToIgnoreNull(Long value) {
            addCriterionIgnoreNull("jobId <=", value, "jobId");
            return (Criteria) this;
        }

        public Criteria andJobIdInIgnoreNull(List<Long> value) {
            addCriterionIgnoreNull("jobId in", value, "jobId");
            return (Criteria) this;
        }

        public Criteria andJobIdNotInIgnoreNull(List<Long> value) {
            addCriterionIgnoreNull("jobId not in", value, "jobId");
            return (Criteria) this;
        }

        public Criteria andBeanNameEqualToIgnoreNull(String value) {
            addCriterionIgnoreNull("beanName =", value, "beanName");
            return (Criteria) this;
        }

        public Criteria andBeanNameNotEqualToIgnoreNull(String value) {
            addCriterionIgnoreNull("beanName <>", value, "beanName");
            return (Criteria) this;
        }

        public Criteria andBeanNameGreaterThanIgnoreNull(String value) {
            addCriterionIgnoreNull("beanName >", value, "beanName");
            return (Criteria) this;
        }

        public Criteria andBeanNameGreaterThanOrEqualToIgnoreNull(String value) {
            addCriterionIgnoreNull("beanName >=", value, "beanName");
            return (Criteria) this;
        }

        public Criteria andBeanNameLessThanIgnoreNull(String value) {
            addCriterionIgnoreNull("beanName <", value, "beanName");
            return (Criteria) this;
        }

        public Criteria andBeanNameLessThanOrEqualToIgnoreNull(String value) {
            addCriterionIgnoreNull("beanName <=", value, "beanName");
            return (Criteria) this;
        }

        public Criteria andBeanNameLikeIgnoreNull(String value) {
            addCriterionIgnoreNull("beanName like", value, "beanName");
            return (Criteria) this;
        }

        public Criteria andBeanNameNotLikeIgnoreNull(String value) {
            addCriterionIgnoreNull("beanName not like", value, "beanName");
            return (Criteria) this;
        }

        public Criteria andBeanNameInIgnoreNull(List<String> value) {
            addCriterionIgnoreNull("beanName in", value, "beanName");
            return (Criteria) this;
        }

        public Criteria andBeanNameNotInIgnoreNull(List<String> value) {
            addCriterionIgnoreNull("beanName not in", value, "beanName");
            return (Criteria) this;
        }

        public Criteria andMethodNameEqualToIgnoreNull(String value) {
            addCriterionIgnoreNull("methodName =", value, "methodName");
            return (Criteria) this;
        }

        public Criteria andMethodNameNotEqualToIgnoreNull(String value) {
            addCriterionIgnoreNull("methodName <>", value, "methodName");
            return (Criteria) this;
        }

        public Criteria andMethodNameGreaterThanIgnoreNull(String value) {
            addCriterionIgnoreNull("methodName >", value, "methodName");
            return (Criteria) this;
        }

        public Criteria andMethodNameGreaterThanOrEqualToIgnoreNull(String value) {
            addCriterionIgnoreNull("methodName >=", value, "methodName");
            return (Criteria) this;
        }

        public Criteria andMethodNameLessThanIgnoreNull(String value) {
            addCriterionIgnoreNull("methodName <", value, "methodName");
            return (Criteria) this;
        }

        public Criteria andMethodNameLessThanOrEqualToIgnoreNull(String value) {
            addCriterionIgnoreNull("methodName <=", value, "methodName");
            return (Criteria) this;
        }

        public Criteria andMethodNameLikeIgnoreNull(String value) {
            addCriterionIgnoreNull("methodName like", value, "methodName");
            return (Criteria) this;
        }

        public Criteria andMethodNameNotLikeIgnoreNull(String value) {
            addCriterionIgnoreNull("methodName not like", value, "methodName");
            return (Criteria) this;
        }

        public Criteria andMethodNameInIgnoreNull(List<String> value) {
            addCriterionIgnoreNull("methodName in", value, "methodName");
            return (Criteria) this;
        }

        public Criteria andMethodNameNotInIgnoreNull(List<String> value) {
            addCriterionIgnoreNull("methodName not in", value, "methodName");
            return (Criteria) this;
        }

        public Criteria andParamsEqualToIgnoreNull(String value) {
            addCriterionIgnoreNull("params =", value, "params");
            return (Criteria) this;
        }

        public Criteria andParamsNotEqualToIgnoreNull(String value) {
            addCriterionIgnoreNull("params <>", value, "params");
            return (Criteria) this;
        }

        public Criteria andParamsGreaterThanIgnoreNull(String value) {
            addCriterionIgnoreNull("params >", value, "params");
            return (Criteria) this;
        }

        public Criteria andParamsGreaterThanOrEqualToIgnoreNull(String value) {
            addCriterionIgnoreNull("params >=", value, "params");
            return (Criteria) this;
        }

        public Criteria andParamsLessThanIgnoreNull(String value) {
            addCriterionIgnoreNull("params <", value, "params");
            return (Criteria) this;
        }

        public Criteria andParamsLessThanOrEqualToIgnoreNull(String value) {
            addCriterionIgnoreNull("params <=", value, "params");
            return (Criteria) this;
        }

        public Criteria andParamsLikeIgnoreNull(String value) {
            addCriterionIgnoreNull("params like", value, "params");
            return (Criteria) this;
        }

        public Criteria andParamsNotLikeIgnoreNull(String value) {
            addCriterionIgnoreNull("params not like", value, "params");
            return (Criteria) this;
        }

        public Criteria andParamsInIgnoreNull(List<String> value) {
            addCriterionIgnoreNull("params in", value, "params");
            return (Criteria) this;
        }

        public Criteria andParamsNotInIgnoreNull(List<String> value) {
            addCriterionIgnoreNull("params not in", value, "params");
            return (Criteria) this;
        }

        public Criteria andStatusEqualToIgnoreNull(Byte value) {
            addCriterionIgnoreNull("status =", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusNotEqualToIgnoreNull(Byte value) {
            addCriterionIgnoreNull("status <>", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusGreaterThanIgnoreNull(Byte value) {
            addCriterionIgnoreNull("status >", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusGreaterThanOrEqualToIgnoreNull(Byte value) {
            addCriterionIgnoreNull("status >=", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusLessThanIgnoreNull(Byte value) {
            addCriterionIgnoreNull("status <", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusLessThanOrEqualToIgnoreNull(Byte value) {
            addCriterionIgnoreNull("status <=", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusInIgnoreNull(List<Byte> value) {
            addCriterionIgnoreNull("status in", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusNotInIgnoreNull(List<Byte> value) {
            addCriterionIgnoreNull("status not in", value, "status");
            return (Criteria) this;
        }

        public Criteria andErrorEqualToIgnoreNull(String value) {
            addCriterionIgnoreNull("error =", value, "error");
            return (Criteria) this;
        }

        public Criteria andErrorNotEqualToIgnoreNull(String value) {
            addCriterionIgnoreNull("error <>", value, "error");
            return (Criteria) this;
        }

        public Criteria andErrorGreaterThanIgnoreNull(String value) {
            addCriterionIgnoreNull("error >", value, "error");
            return (Criteria) this;
        }

        public Criteria andErrorGreaterThanOrEqualToIgnoreNull(String value) {
            addCriterionIgnoreNull("error >=", value, "error");
            return (Criteria) this;
        }

        public Criteria andErrorLessThanIgnoreNull(String value) {
            addCriterionIgnoreNull("error <", value, "error");
            return (Criteria) this;
        }

        public Criteria andErrorLessThanOrEqualToIgnoreNull(String value) {
            addCriterionIgnoreNull("error <=", value, "error");
            return (Criteria) this;
        }

        public Criteria andErrorLikeIgnoreNull(String value) {
            addCriterionIgnoreNull("error like", value, "error");
            return (Criteria) this;
        }

        public Criteria andErrorNotLikeIgnoreNull(String value) {
            addCriterionIgnoreNull("error not like", value, "error");
            return (Criteria) this;
        }

        public Criteria andErrorInIgnoreNull(List<String> value) {
            addCriterionIgnoreNull("error in", value, "error");
            return (Criteria) this;
        }

        public Criteria andErrorNotInIgnoreNull(List<String> value) {
            addCriterionIgnoreNull("error not in", value, "error");
            return (Criteria) this;
        }

        public Criteria andTimesEqualToIgnoreNull(Integer value) {
            addCriterionIgnoreNull("times =", value, "times");
            return (Criteria) this;
        }

        public Criteria andTimesNotEqualToIgnoreNull(Integer value) {
            addCriterionIgnoreNull("times <>", value, "times");
            return (Criteria) this;
        }

        public Criteria andTimesGreaterThanIgnoreNull(Integer value) {
            addCriterionIgnoreNull("times >", value, "times");
            return (Criteria) this;
        }

        public Criteria andTimesGreaterThanOrEqualToIgnoreNull(Integer value) {
            addCriterionIgnoreNull("times >=", value, "times");
            return (Criteria) this;
        }

        public Criteria andTimesLessThanIgnoreNull(Integer value) {
            addCriterionIgnoreNull("times <", value, "times");
            return (Criteria) this;
        }

        public Criteria andTimesLessThanOrEqualToIgnoreNull(Integer value) {
            addCriterionIgnoreNull("times <=", value, "times");
            return (Criteria) this;
        }

        public Criteria andTimesInIgnoreNull(List<Integer> value) {
            addCriterionIgnoreNull("times in", value, "times");
            return (Criteria) this;
        }

        public Criteria andTimesNotInIgnoreNull(List<Integer> value) {
            addCriterionIgnoreNull("times not in", value, "times");
            return (Criteria) this;
        }

        public Criteria andCreateTimeEqualToIgnoreNull(Date value) {
            addCriterionIgnoreNull("createTime =", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotEqualToIgnoreNull(Date value) {
            addCriterionIgnoreNull("createTime <>", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeGreaterThanIgnoreNull(Date value) {
            addCriterionIgnoreNull("createTime >", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeGreaterThanOrEqualToIgnoreNull(Date value) {
            addCriterionIgnoreNull("createTime >=", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeLessThanIgnoreNull(Date value) {
            addCriterionIgnoreNull("createTime <", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeLessThanOrEqualToIgnoreNull(Date value) {
            addCriterionIgnoreNull("createTime <=", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeInIgnoreNull(List<Date> value) {
            addCriterionIgnoreNull("createTime in", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotInIgnoreNull(List<Date> value) {
            addCriterionIgnoreNull("createTime not in", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andBeanNameLikeInsensitiveIgnoreNull(String value) {
            addCriterionIgnoreNull("upper(beanName) like", value.toUpperCase(), "beanName");
            return (Criteria) this;
        }

        public Criteria andMethodNameLikeInsensitiveIgnoreNull(String value) {
            addCriterionIgnoreNull("upper(methodName) like", value.toUpperCase(), "methodName");
            return (Criteria) this;
        }

        public Criteria andParamsLikeInsensitiveIgnoreNull(String value) {
            addCriterionIgnoreNull("upper(params) like", value.toUpperCase(), "params");
            return (Criteria) this;
        }

        public Criteria andErrorLikeInsensitiveIgnoreNull(String value) {
            addCriterionIgnoreNull("upper(error) like", value.toUpperCase(), "error");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table s_schedule_job_log
     *
     * @mbggenerated
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }

        public Criteria andLogIdLikeInsensitive(String value) {
            addCriterion("upper(logId) like", value.toUpperCase(), "logId");
            return this;
        }

        public Criteria andJobIdLikeInsensitive(String value) {
            addCriterion("upper(jobId) like", value.toUpperCase(), "jobId");
            return this;
        }

        public Criteria andBeanNameLikeInsensitive(String value) {
            addCriterion("upper(beanName) like", value.toUpperCase(), "beanName");
            return this;
        }

        public Criteria andMethodNameLikeInsensitive(String value) {
            addCriterion("upper(methodName) like", value.toUpperCase(), "methodName");
            return this;
        }

        public Criteria andParamsLikeInsensitive(String value) {
            addCriterion("upper(params) like", value.toUpperCase(), "params");
            return this;
        }

        public Criteria andStatusLikeInsensitive(String value) {
            addCriterion("upper(status) like", value.toUpperCase(), "status");
            return this;
        }

        public Criteria andErrorLikeInsensitive(String value) {
            addCriterion("upper(error) like", value.toUpperCase(), "error");
            return this;
        }

        public Criteria andTimesLikeInsensitive(String value) {
            addCriterion("upper(times) like", value.toUpperCase(), "times");
            return this;
        }

        public Criteria andCreateTimeLikeInsensitive(String value) {
            addCriterion("upper(createTime) like", value.toUpperCase(), "createTime");
            return this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table s_schedule_job_log
     *
     * @mbggenerated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}