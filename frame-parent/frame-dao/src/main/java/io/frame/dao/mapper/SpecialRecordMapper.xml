<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="io.frame.dao.mapper.SpecialRecordMapper">
  <resultMap id="BaseResultMap" type="io.frame.dao.entity.SpecialRecord">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="userId" jdbcType="BIGINT" property="userId" />
    <result column="userName" jdbcType="VARCHAR" property="userName" />
    <result column="userMobile" jdbcType="VARCHAR" property="userMobile" />
    <result column="userLevel" jdbcType="INTEGER" property="userLevel" />
    <result column="parentId" jdbcType="BIGINT" property="parentId" />
    <result column="groupUserIds" jdbcType="VARCHAR" property="groupUserIds" />
    <result column="money" jdbcType="DECIMAL" property="money" />
    <result column="totalsNum" jdbcType="INTEGER" property="totalsNum" />
    <result column="recommendNum" jdbcType="INTEGER" property="recommendNum" />
    <result column="teamNum" jdbcType="INTEGER" property="teamNum" />
    <result column="teamAchievement" jdbcType="DECIMAL" property="teamAchievement" />
    <result column="isGrant" jdbcType="INTEGER" property="isGrant" />
    <result column="generateTime" jdbcType="DATE" property="generateTime" />
    <result column="createTime" jdbcType="TIMESTAMP" property="createTime" />
    <result column="grantTime" jdbcType="TIMESTAMP" property="grantTime" />
    <result column="updateTime" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="updateUser" jdbcType="VARCHAR" property="updateUser" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, userId, userName, userMobile, userLevel, parentId, groupUserIds, money, totalsNum, 
    recommendNum, teamNum, teamAchievement, isGrant, generateTime, createTime, grantTime, 
    updateTime, updateUser
  </sql>
  <select id="selectByExample" parameterType="io.frame.dao.entity.SpecialRecordExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from b_special_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExampleShowField" parameterType="map" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="example!=null and example.distinct">
      distinct
    </if>
    <foreach collection="showField" item="column" separator=",">
      ${column}
    </foreach>
    from b_special_record
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
    <if test="example.orderByClause != null">
      order by ${example.orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from b_special_record
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="selectByPrimaryKeyShowField" parameterType="map" resultType="io.frame.dao.entity.SpecialRecord">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <foreach collection="showField" item="column" separator=",">
      ${column}
    </foreach>
    from b_special_record
    where id = #{id,jdbcType=BIGINT}
    limit 1
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from b_special_record
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="io.frame.dao.entity.SpecialRecordExample">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from b_special_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="io.frame.dao.entity.SpecialRecord">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into b_special_record (userId, userName, userMobile, 
      userLevel, parentId, groupUserIds, 
      money, totalsNum, recommendNum, 
      teamNum, teamAchievement, isGrant, 
      generateTime, createTime, grantTime, 
      updateTime, updateUser)
    values (#{userId,jdbcType=BIGINT}, #{userName,jdbcType=VARCHAR}, #{userMobile,jdbcType=VARCHAR}, 
      #{userLevel,jdbcType=INTEGER}, #{parentId,jdbcType=BIGINT}, #{groupUserIds,jdbcType=VARCHAR}, 
      #{money,jdbcType=DECIMAL}, #{totalsNum,jdbcType=INTEGER}, #{recommendNum,jdbcType=INTEGER}, 
      #{teamNum,jdbcType=INTEGER}, #{teamAchievement,jdbcType=DECIMAL}, #{isGrant,jdbcType=INTEGER}, 
      #{generateTime,jdbcType=DATE}, #{createTime,jdbcType=TIMESTAMP}, #{grantTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{updateUser,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="io.frame.dao.entity.SpecialRecord">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into b_special_record
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        userId,
      </if>
      <if test="userName != null">
        userName,
      </if>
      <if test="userMobile != null">
        userMobile,
      </if>
      <if test="userLevel != null">
        userLevel,
      </if>
      <if test="parentId != null">
        parentId,
      </if>
      <if test="groupUserIds != null">
        groupUserIds,
      </if>
      <if test="money != null">
        money,
      </if>
      <if test="totalsNum != null">
        totalsNum,
      </if>
      <if test="recommendNum != null">
        recommendNum,
      </if>
      <if test="teamNum != null">
        teamNum,
      </if>
      <if test="teamAchievement != null">
        teamAchievement,
      </if>
      <if test="isGrant != null">
        isGrant,
      </if>
      <if test="generateTime != null">
        generateTime,
      </if>
      <if test="createTime != null">
        createTime,
      </if>
      <if test="grantTime != null">
        grantTime,
      </if>
      <if test="updateTime != null">
        updateTime,
      </if>
      <if test="updateUser != null">
        updateUser,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userMobile != null">
        #{userMobile,jdbcType=VARCHAR},
      </if>
      <if test="userLevel != null">
        #{userLevel,jdbcType=INTEGER},
      </if>
      <if test="parentId != null">
        #{parentId,jdbcType=BIGINT},
      </if>
      <if test="groupUserIds != null">
        #{groupUserIds,jdbcType=VARCHAR},
      </if>
      <if test="money != null">
        #{money,jdbcType=DECIMAL},
      </if>
      <if test="totalsNum != null">
        #{totalsNum,jdbcType=INTEGER},
      </if>
      <if test="recommendNum != null">
        #{recommendNum,jdbcType=INTEGER},
      </if>
      <if test="teamNum != null">
        #{teamNum,jdbcType=INTEGER},
      </if>
      <if test="teamAchievement != null">
        #{teamAchievement,jdbcType=DECIMAL},
      </if>
      <if test="isGrant != null">
        #{isGrant,jdbcType=INTEGER},
      </if>
      <if test="generateTime != null">
        #{generateTime,jdbcType=DATE},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="grantTime != null">
        #{grantTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        #{updateUser,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="io.frame.dao.entity.SpecialRecordExample" resultType="int">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from b_special_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update b_special_record
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.userId != null">
        userId = #{record.userId,jdbcType=BIGINT},
      </if>
      <if test="record.userName != null">
        userName = #{record.userName,jdbcType=VARCHAR},
      </if>
      <if test="record.userMobile != null">
        userMobile = #{record.userMobile,jdbcType=VARCHAR},
      </if>
      <if test="record.userLevel != null">
        userLevel = #{record.userLevel,jdbcType=INTEGER},
      </if>
      <if test="record.parentId != null">
        parentId = #{record.parentId,jdbcType=BIGINT},
      </if>
      <if test="record.groupUserIds != null">
        groupUserIds = #{record.groupUserIds,jdbcType=VARCHAR},
      </if>
      <if test="record.money != null">
        money = #{record.money,jdbcType=DECIMAL},
      </if>
      <if test="record.totalsNum != null">
        totalsNum = #{record.totalsNum,jdbcType=INTEGER},
      </if>
      <if test="record.recommendNum != null">
        recommendNum = #{record.recommendNum,jdbcType=INTEGER},
      </if>
      <if test="record.teamNum != null">
        teamNum = #{record.teamNum,jdbcType=INTEGER},
      </if>
      <if test="record.teamAchievement != null">
        teamAchievement = #{record.teamAchievement,jdbcType=DECIMAL},
      </if>
      <if test="record.isGrant != null">
        isGrant = #{record.isGrant,jdbcType=INTEGER},
      </if>
      <if test="record.generateTime != null">
        generateTime = #{record.generateTime,jdbcType=DATE},
      </if>
      <if test="record.createTime != null">
        createTime = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.grantTime != null">
        grantTime = #{record.grantTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        updateTime = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateUser != null">
        updateUser = #{record.updateUser,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update b_special_record
    set id = #{record.id,jdbcType=BIGINT},
      userId = #{record.userId,jdbcType=BIGINT},
      userName = #{record.userName,jdbcType=VARCHAR},
      userMobile = #{record.userMobile,jdbcType=VARCHAR},
      userLevel = #{record.userLevel,jdbcType=INTEGER},
      parentId = #{record.parentId,jdbcType=BIGINT},
      groupUserIds = #{record.groupUserIds,jdbcType=VARCHAR},
      money = #{record.money,jdbcType=DECIMAL},
      totalsNum = #{record.totalsNum,jdbcType=INTEGER},
      recommendNum = #{record.recommendNum,jdbcType=INTEGER},
      teamNum = #{record.teamNum,jdbcType=INTEGER},
      teamAchievement = #{record.teamAchievement,jdbcType=DECIMAL},
      isGrant = #{record.isGrant,jdbcType=INTEGER},
      generateTime = #{record.generateTime,jdbcType=DATE},
      createTime = #{record.createTime,jdbcType=TIMESTAMP},
      grantTime = #{record.grantTime,jdbcType=TIMESTAMP},
      updateTime = #{record.updateTime,jdbcType=TIMESTAMP},
      updateUser = #{record.updateUser,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleSelectiveSync" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update  b_special_record
    <set>
    <if test="record.userLevel != null">
       userLevel = (case when userLevel is null then #{record.userLevel,jdbcType=INTEGER} else userLevel + #{record.userLevel,jdbcType=INTEGER} end ),
    </if>
    <if test="record.money != null">
       money = (case when money is null then #{record.money,jdbcType=DECIMAL} else money + #{record.money,jdbcType=DECIMAL} end ),
    </if>
    <if test="record.totalsNum != null">
       totalsNum = (case when totalsNum is null then #{record.totalsNum,jdbcType=INTEGER} else totalsNum + #{record.totalsNum,jdbcType=INTEGER} end ),
    </if>
    <if test="record.recommendNum != null">
       recommendNum = (case when recommendNum is null then #{record.recommendNum,jdbcType=INTEGER} else recommendNum + #{record.recommendNum,jdbcType=INTEGER} end ),
    </if>
    <if test="record.teamNum != null">
       teamNum = (case when teamNum is null then #{record.teamNum,jdbcType=INTEGER} else teamNum + #{record.teamNum,jdbcType=INTEGER} end ),
    </if>
    <if test="record.teamAchievement != null">
       teamAchievement = (case when teamAchievement is null then #{record.teamAchievement,jdbcType=DECIMAL} else teamAchievement + #{record.teamAchievement,jdbcType=DECIMAL} end ),
    </if>
    <if test="record.isGrant != null">
       isGrant = (case when isGrant is null then #{record.isGrant,jdbcType=INTEGER} else isGrant + #{record.isGrant,jdbcType=INTEGER} end ),
    </if>
    </set>
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="io.frame.dao.entity.SpecialRecord">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update b_special_record
    <set>
      <if test="userId != null">
        userId = #{userId,jdbcType=BIGINT},
      </if>
      <if test="userName != null">
        userName = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userMobile != null">
        userMobile = #{userMobile,jdbcType=VARCHAR},
      </if>
      <if test="userLevel != null">
        userLevel = #{userLevel,jdbcType=INTEGER},
      </if>
      <if test="parentId != null">
        parentId = #{parentId,jdbcType=BIGINT},
      </if>
      <if test="groupUserIds != null">
        groupUserIds = #{groupUserIds,jdbcType=VARCHAR},
      </if>
      <if test="money != null">
        money = #{money,jdbcType=DECIMAL},
      </if>
      <if test="totalsNum != null">
        totalsNum = #{totalsNum,jdbcType=INTEGER},
      </if>
      <if test="recommendNum != null">
        recommendNum = #{recommendNum,jdbcType=INTEGER},
      </if>
      <if test="teamNum != null">
        teamNum = #{teamNum,jdbcType=INTEGER},
      </if>
      <if test="teamAchievement != null">
        teamAchievement = #{teamAchievement,jdbcType=DECIMAL},
      </if>
      <if test="isGrant != null">
        isGrant = #{isGrant,jdbcType=INTEGER},
      </if>
      <if test="generateTime != null">
        generateTime = #{generateTime,jdbcType=DATE},
      </if>
      <if test="createTime != null">
        createTime = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="grantTime != null">
        grantTime = #{grantTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        updateTime = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        updateUser = #{updateUser,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="io.frame.dao.entity.SpecialRecord">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update b_special_record
    set userId = #{userId,jdbcType=BIGINT},
      userName = #{userName,jdbcType=VARCHAR},
      userMobile = #{userMobile,jdbcType=VARCHAR},
      userLevel = #{userLevel,jdbcType=INTEGER},
      parentId = #{parentId,jdbcType=BIGINT},
      groupUserIds = #{groupUserIds,jdbcType=VARCHAR},
      money = #{money,jdbcType=DECIMAL},
      totalsNum = #{totalsNum,jdbcType=INTEGER},
      recommendNum = #{recommendNum,jdbcType=INTEGER},
      teamNum = #{teamNum,jdbcType=INTEGER},
      teamAchievement = #{teamAchievement,jdbcType=DECIMAL},
      isGrant = #{isGrant,jdbcType=INTEGER},
      generateTime = #{generateTime,jdbcType=DATE},
      createTime = #{createTime,jdbcType=TIMESTAMP},
      grantTime = #{grantTime,jdbcType=TIMESTAMP},
      updateTime = #{updateTime,jdbcType=TIMESTAMP},
      updateUser = #{updateUser,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeySelectiveSync" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update  b_special_record
    <set>
    <if test="userLevel != null">
       userLevel = (case when userLevel is null then #{userLevel,jdbcType=INTEGER} else userLevel + #{userLevel,jdbcType=INTEGER} end ),
    </if>
    <if test="money != null">
       money = (case when money is null then #{money,jdbcType=DECIMAL} else money + #{money,jdbcType=DECIMAL} end ),
    </if>
    <if test="totalsNum != null">
       totalsNum = (case when totalsNum is null then #{totalsNum,jdbcType=INTEGER} else totalsNum + #{totalsNum,jdbcType=INTEGER} end ),
    </if>
    <if test="recommendNum != null">
       recommendNum = (case when recommendNum is null then #{recommendNum,jdbcType=INTEGER} else recommendNum + #{recommendNum,jdbcType=INTEGER} end ),
    </if>
    <if test="teamNum != null">
       teamNum = (case when teamNum is null then #{teamNum,jdbcType=INTEGER} else teamNum + #{teamNum,jdbcType=INTEGER} end ),
    </if>
    <if test="teamAchievement != null">
       teamAchievement = (case when teamAchievement is null then #{teamAchievement,jdbcType=DECIMAL} else teamAchievement + #{teamAchievement,jdbcType=DECIMAL} end ),
    </if>
    <if test="isGrant != null">
       isGrant = (case when isGrant is null then #{isGrant,jdbcType=INTEGER} else isGrant + #{isGrant,jdbcType=INTEGER} end ),
    </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <insert id="insertBatch" parameterType="java.util.List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into b_special_record
    (userId, userName, userMobile, userLevel, parentId, groupUserIds, money, totalsNum, 
      recommendNum, teamNum, teamAchievement, isGrant, generateTime, createTime, grantTime, 
      updateTime, updateUser)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.userId,jdbcType=BIGINT}, #{item.userName,jdbcType=VARCHAR}, #{item.userMobile,jdbcType=VARCHAR}, 
        #{item.userLevel,jdbcType=INTEGER}, #{item.parentId,jdbcType=BIGINT}, #{item.groupUserIds,jdbcType=VARCHAR}, 
        #{item.money,jdbcType=DECIMAL}, #{item.totalsNum,jdbcType=INTEGER}, #{item.recommendNum,jdbcType=INTEGER}, 
        #{item.teamNum,jdbcType=INTEGER}, #{item.teamAchievement,jdbcType=DECIMAL}, #{item.isGrant,jdbcType=INTEGER}, 
        #{item.generateTime,jdbcType=DATE}, #{item.createTime,jdbcType=TIMESTAMP}, #{item.grantTime,jdbcType=TIMESTAMP}, 
        #{item.updateTime,jdbcType=TIMESTAMP}, #{item.updateUser,jdbcType=VARCHAR})
    </foreach>
  </insert>
  <insert id="insertBatchSelective" parameterType="java.util.List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into b_special_record (
    <foreach collection="showField" item="one" separator=",">
      ${one}
    </foreach>
    )
    values
    <foreach collection="list" item="item" separator=",">
      (
      <foreach collection="showField" item="column" separator=",">
        <if test="'userId' == column">
          #{item.userId,jdbcType=BIGINT}
        </if>
        <if test="'userName' == column">
          #{item.userName,jdbcType=VARCHAR}
        </if>
        <if test="'userMobile' == column">
          #{item.userMobile,jdbcType=VARCHAR}
        </if>
        <if test="'userLevel' == column">
          #{item.userLevel,jdbcType=INTEGER}
        </if>
        <if test="'parentId' == column">
          #{item.parentId,jdbcType=BIGINT}
        </if>
        <if test="'groupUserIds' == column">
          #{item.groupUserIds,jdbcType=VARCHAR}
        </if>
        <if test="'money' == column">
          #{item.money,jdbcType=DECIMAL}
        </if>
        <if test="'totalsNum' == column">
          #{item.totalsNum,jdbcType=INTEGER}
        </if>
        <if test="'recommendNum' == column">
          #{item.recommendNum,jdbcType=INTEGER}
        </if>
        <if test="'teamNum' == column">
          #{item.teamNum,jdbcType=INTEGER}
        </if>
        <if test="'teamAchievement' == column">
          #{item.teamAchievement,jdbcType=DECIMAL}
        </if>
        <if test="'isGrant' == column">
          #{item.isGrant,jdbcType=INTEGER}
        </if>
        <if test="'generateTime' == column">
          #{item.generateTime,jdbcType=DATE}
        </if>
        <if test="'createTime' == column">
          #{item.createTime,jdbcType=TIMESTAMP}
        </if>
        <if test="'grantTime' == column">
          #{item.grantTime,jdbcType=TIMESTAMP}
        </if>
        <if test="'updateTime' == column">
          #{item.updateTime,jdbcType=TIMESTAMP}
        </if>
        <if test="'updateUser' == column">
          #{item.updateUser,jdbcType=VARCHAR}
        </if>
      </foreach>
      )
    </foreach>
  </insert>
  <select id="selectOneByExample" parameterType="io.frame.dao.entity.SpecialRecordExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <include refid="Base_Column_List" />
    from b_special_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    limit 1
  </select>
  <select id="selectOneByExampleShowField" parameterType="map" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <foreach collection="showField" item="column" separator=",">
      ${column}
    </foreach>
    from b_special_record
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
    <if test="example.orderByClause != null">
      order by ${example.orderByClause}
    </if>
    limit 1
  </select>
  <insert id="upsert" keyColumn="id" keyProperty="id" parameterType="io.frame.dao.entity.SpecialRecord" useGeneratedKeys="true">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into b_special_record
    (id, userId, userName, userMobile, userLevel, parentId, groupUserIds, money, totalsNum, 
      recommendNum, teamNum, teamAchievement, isGrant, generateTime, createTime, grantTime, 
      updateTime, updateUser)
    values
    (#{id,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, #{userName,jdbcType=VARCHAR}, 
      #{userMobile,jdbcType=VARCHAR}, #{userLevel,jdbcType=INTEGER}, #{parentId,jdbcType=BIGINT}, 
      #{groupUserIds,jdbcType=VARCHAR}, #{money,jdbcType=DECIMAL}, #{totalsNum,jdbcType=INTEGER}, 
      #{recommendNum,jdbcType=INTEGER}, #{teamNum,jdbcType=INTEGER}, #{teamAchievement,jdbcType=DECIMAL}, 
      #{isGrant,jdbcType=INTEGER}, #{generateTime,jdbcType=DATE}, #{createTime,jdbcType=TIMESTAMP}, 
      #{grantTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{updateUser,jdbcType=VARCHAR}
      )
    on duplicate key update 
    id =  #{id,jdbcType=BIGINT},
    userId =  #{userId,jdbcType=BIGINT},
    userName =  #{userName,jdbcType=VARCHAR},
    userMobile =  #{userMobile,jdbcType=VARCHAR},
    userLevel =  #{userLevel,jdbcType=INTEGER},
    parentId =  #{parentId,jdbcType=BIGINT},
    groupUserIds =  #{groupUserIds,jdbcType=VARCHAR},
    money = (case when money is null then #{money,jdbcType=DECIMAL} else money + #{money,jdbcType=DECIMAL} end ),
    totalsNum =  #{totalsNum,jdbcType=INTEGER},
    recommendNum =  #{recommendNum,jdbcType=INTEGER},
    teamNum =  #{teamNum,jdbcType=INTEGER},
    teamAchievement = (case when teamAchievement is null then #{teamAchievement,jdbcType=DECIMAL} else teamAchievement + #{teamAchievement,jdbcType=DECIMAL} end ),
    isGrant =  #{isGrant,jdbcType=INTEGER},
    generateTime =  #{generateTime,jdbcType=DATE},
    createTime =  #{createTime,jdbcType=TIMESTAMP},
    grantTime =  #{grantTime,jdbcType=TIMESTAMP},
    updateTime =  #{updateTime,jdbcType=TIMESTAMP},
    updateUser =  #{updateUser,jdbcType=VARCHAR}
  </insert>
  <insert id="upsertSelective" keyColumn="id" keyProperty="id" parameterType="io.frame.dao.entity.SpecialRecord" useGeneratedKeys="true">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into b_special_record
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userId != null">
        userId,
      </if>
      <if test="userName != null">
        userName,
      </if>
      <if test="userMobile != null">
        userMobile,
      </if>
      <if test="userLevel != null">
        userLevel,
      </if>
      <if test="parentId != null">
        parentId,
      </if>
      <if test="groupUserIds != null">
        groupUserIds,
      </if>
      <if test="money != null">
        money,
      </if>
      <if test="totalsNum != null">
        totalsNum,
      </if>
      <if test="recommendNum != null">
        recommendNum,
      </if>
      <if test="teamNum != null">
        teamNum,
      </if>
      <if test="teamAchievement != null">
        teamAchievement,
      </if>
      <if test="isGrant != null">
        isGrant,
      </if>
      <if test="generateTime != null">
        generateTime,
      </if>
      <if test="createTime != null">
        createTime,
      </if>
      <if test="grantTime != null">
        grantTime,
      </if>
      <if test="updateTime != null">
        updateTime,
      </if>
      <if test="updateUser != null">
        updateUser,
      </if>
    </trim>
    values
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userMobile != null">
        #{userMobile,jdbcType=VARCHAR},
      </if>
      <if test="userLevel != null">
        #{userLevel,jdbcType=INTEGER},
      </if>
      <if test="parentId != null">
        #{parentId,jdbcType=BIGINT},
      </if>
      <if test="groupUserIds != null">
        #{groupUserIds,jdbcType=VARCHAR},
      </if>
      <if test="money != null">
        #{money,jdbcType=DECIMAL},
      </if>
      <if test="totalsNum != null">
        #{totalsNum,jdbcType=INTEGER},
      </if>
      <if test="recommendNum != null">
        #{recommendNum,jdbcType=INTEGER},
      </if>
      <if test="teamNum != null">
        #{teamNum,jdbcType=INTEGER},
      </if>
      <if test="teamAchievement != null">
        #{teamAchievement,jdbcType=DECIMAL},
      </if>
      <if test="isGrant != null">
        #{isGrant,jdbcType=INTEGER},
      </if>
      <if test="generateTime != null">
        #{generateTime,jdbcType=DATE},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="grantTime != null">
        #{grantTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        #{updateUser,jdbcType=VARCHAR},
      </if>
    </trim>
    on duplicate key update 
    <trim suffixOverrides=",">
      <if test="id != null">
        id =  #{id,jdbcType=BIGINT},
      </if>
      <if test="userId != null">
        userId =  #{userId,jdbcType=BIGINT},
      </if>
      <if test="userName != null">
        userName =  #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userMobile != null">
        userMobile =  #{userMobile,jdbcType=VARCHAR},
      </if>
      <if test="userLevel != null">
        userLevel =  #{userLevel,jdbcType=INTEGER},
      </if>
      <if test="parentId != null">
        parentId =  #{parentId,jdbcType=BIGINT},
      </if>
      <if test="groupUserIds != null">
        groupUserIds =  #{groupUserIds,jdbcType=VARCHAR},
      </if>
      <if test="money != null">
        money = (case when money is null then #{money,jdbcType=DECIMAL} else money + #{money,jdbcType=DECIMAL} end ),
      </if>
      <if test="totalsNum != null">
        totalsNum =  #{totalsNum,jdbcType=INTEGER},
      </if>
      <if test="recommendNum != null">
        recommendNum =  #{recommendNum,jdbcType=INTEGER},
      </if>
      <if test="teamNum != null">
        teamNum =  #{teamNum,jdbcType=INTEGER},
      </if>
      <if test="teamAchievement != null">
        teamAchievement = (case when teamAchievement is null then #{teamAchievement,jdbcType=DECIMAL} else teamAchievement + #{teamAchievement,jdbcType=DECIMAL} end ),
      </if>
      <if test="isGrant != null">
        isGrant =  #{isGrant,jdbcType=INTEGER},
      </if>
      <if test="generateTime != null">
        generateTime =  #{generateTime,jdbcType=DATE},
      </if>
      <if test="createTime != null">
        createTime =  #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="grantTime != null">
        grantTime =  #{grantTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        updateTime =  #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        updateUser =  #{updateUser,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
</mapper>