package io.frame.dao.entity;

import java.util.ArrayList;
import java.util.List;

public class SysDeptExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table s_sys_dept
     *
     * @mbggenerated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table s_sys_dept
     *
     * @mbggenerated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table s_sys_dept
     *
     * @mbggenerated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table s_sys_dept
     *
     * @mbggenerated
     */
    public SysDeptExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table s_sys_dept
     *
     * @mbggenerated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table s_sys_dept
     *
     * @mbggenerated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table s_sys_dept
     *
     * @mbggenerated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table s_sys_dept
     *
     * @mbggenerated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table s_sys_dept
     *
     * @mbggenerated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table s_sys_dept
     *
     * @mbggenerated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table s_sys_dept
     *
     * @mbggenerated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table s_sys_dept
     *
     * @mbggenerated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table s_sys_dept
     *
     * @mbggenerated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table s_sys_dept
     *
     * @mbggenerated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table s_sys_dept
     *
     * @mbggenerated
     */
    public void setOrderByClauseIgnoreNull(String orderByClause) {
        String tmp = orderByClause.toLowerCase().replace("null", "").replace("asc", "").replace("desc", "").trim();
        if (orderByClause != null && tmp.length() > 0) {
            this.orderByClause = orderByClause;}
        }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table s_sys_dept
     *
     * @mbggenerated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andDeptIdIsNull() {
            addCriterion("deptId is null");
            return (Criteria) this;
        }

        public Criteria andDeptIdIsNotNull() {
            addCriterion("deptId is not null");
            return (Criteria) this;
        }

        public Criteria andDeptIdEqualTo(Long value) {
            addCriterion("deptId =", value, "deptId");
            return (Criteria) this;
        }

        public Criteria andDeptIdNotEqualTo(Long value) {
            addCriterion("deptId <>", value, "deptId");
            return (Criteria) this;
        }

        public Criteria andDeptIdGreaterThan(Long value) {
            addCriterion("deptId >", value, "deptId");
            return (Criteria) this;
        }

        public Criteria andDeptIdGreaterThanOrEqualTo(Long value) {
            addCriterion("deptId >=", value, "deptId");
            return (Criteria) this;
        }

        public Criteria andDeptIdLessThan(Long value) {
            addCriterion("deptId <", value, "deptId");
            return (Criteria) this;
        }

        public Criteria andDeptIdLessThanOrEqualTo(Long value) {
            addCriterion("deptId <=", value, "deptId");
            return (Criteria) this;
        }

        public Criteria andDeptIdIn(List<Long> values) {
            addCriterion("deptId in", values, "deptId");
            return (Criteria) this;
        }

        public Criteria andDeptIdNotIn(List<Long> values) {
            addCriterion("deptId not in", values, "deptId");
            return (Criteria) this;
        }

        public Criteria andDeptIdBetween(Long value1, Long value2) {
            addCriterion("deptId between", value1, value2, "deptId");
            return (Criteria) this;
        }

        public Criteria andDeptIdNotBetween(Long value1, Long value2) {
            addCriterion("deptId not between", value1, value2, "deptId");
            return (Criteria) this;
        }

        public Criteria andParentIdIsNull() {
            addCriterion("parentId is null");
            return (Criteria) this;
        }

        public Criteria andParentIdIsNotNull() {
            addCriterion("parentId is not null");
            return (Criteria) this;
        }

        public Criteria andParentIdEqualTo(Long value) {
            addCriterion("parentId =", value, "parentId");
            return (Criteria) this;
        }

        public Criteria andParentIdNotEqualTo(Long value) {
            addCriterion("parentId <>", value, "parentId");
            return (Criteria) this;
        }

        public Criteria andParentIdGreaterThan(Long value) {
            addCriterion("parentId >", value, "parentId");
            return (Criteria) this;
        }

        public Criteria andParentIdGreaterThanOrEqualTo(Long value) {
            addCriterion("parentId >=", value, "parentId");
            return (Criteria) this;
        }

        public Criteria andParentIdLessThan(Long value) {
            addCriterion("parentId <", value, "parentId");
            return (Criteria) this;
        }

        public Criteria andParentIdLessThanOrEqualTo(Long value) {
            addCriterion("parentId <=", value, "parentId");
            return (Criteria) this;
        }

        public Criteria andParentIdIn(List<Long> values) {
            addCriterion("parentId in", values, "parentId");
            return (Criteria) this;
        }

        public Criteria andParentIdNotIn(List<Long> values) {
            addCriterion("parentId not in", values, "parentId");
            return (Criteria) this;
        }

        public Criteria andParentIdBetween(Long value1, Long value2) {
            addCriterion("parentId between", value1, value2, "parentId");
            return (Criteria) this;
        }

        public Criteria andParentIdNotBetween(Long value1, Long value2) {
            addCriterion("parentId not between", value1, value2, "parentId");
            return (Criteria) this;
        }

        public Criteria andNameIsNull() {
            addCriterion("name is null");
            return (Criteria) this;
        }

        public Criteria andNameIsNotNull() {
            addCriterion("name is not null");
            return (Criteria) this;
        }

        public Criteria andNameEqualTo(String value) {
            addCriterion("name =", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotEqualTo(String value) {
            addCriterion("name <>", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameGreaterThan(String value) {
            addCriterion("name >", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameGreaterThanOrEqualTo(String value) {
            addCriterion("name >=", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameLessThan(String value) {
            addCriterion("name <", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameLessThanOrEqualTo(String value) {
            addCriterion("name <=", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameLike(String value) {
            addCriterion("name like", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotLike(String value) {
            addCriterion("name not like", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameIn(List<String> values) {
            addCriterion("name in", values, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotIn(List<String> values) {
            addCriterion("name not in", values, "name");
            return (Criteria) this;
        }

        public Criteria andNameBetween(String value1, String value2) {
            addCriterion("name between", value1, value2, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotBetween(String value1, String value2) {
            addCriterion("name not between", value1, value2, "name");
            return (Criteria) this;
        }

        public Criteria andOrderNumIsNull() {
            addCriterion("orderNum is null");
            return (Criteria) this;
        }

        public Criteria andOrderNumIsNotNull() {
            addCriterion("orderNum is not null");
            return (Criteria) this;
        }

        public Criteria andOrderNumEqualTo(Integer value) {
            addCriterion("orderNum =", value, "orderNum");
            return (Criteria) this;
        }

        public Criteria andOrderNumNotEqualTo(Integer value) {
            addCriterion("orderNum <>", value, "orderNum");
            return (Criteria) this;
        }

        public Criteria andOrderNumGreaterThan(Integer value) {
            addCriterion("orderNum >", value, "orderNum");
            return (Criteria) this;
        }

        public Criteria andOrderNumGreaterThanOrEqualTo(Integer value) {
            addCriterion("orderNum >=", value, "orderNum");
            return (Criteria) this;
        }

        public Criteria andOrderNumLessThan(Integer value) {
            addCriterion("orderNum <", value, "orderNum");
            return (Criteria) this;
        }

        public Criteria andOrderNumLessThanOrEqualTo(Integer value) {
            addCriterion("orderNum <=", value, "orderNum");
            return (Criteria) this;
        }

        public Criteria andOrderNumIn(List<Integer> values) {
            addCriterion("orderNum in", values, "orderNum");
            return (Criteria) this;
        }

        public Criteria andOrderNumNotIn(List<Integer> values) {
            addCriterion("orderNum not in", values, "orderNum");
            return (Criteria) this;
        }

        public Criteria andOrderNumBetween(Integer value1, Integer value2) {
            addCriterion("orderNum between", value1, value2, "orderNum");
            return (Criteria) this;
        }

        public Criteria andOrderNumNotBetween(Integer value1, Integer value2) {
            addCriterion("orderNum not between", value1, value2, "orderNum");
            return (Criteria) this;
        }

        public Criteria andDeleteFlagIsNull() {
            addCriterion("deleteFlag is null");
            return (Criteria) this;
        }

        public Criteria andDeleteFlagIsNotNull() {
            addCriterion("deleteFlag is not null");
            return (Criteria) this;
        }

        public Criteria andDeleteFlagEqualTo(Integer value) {
            addCriterion("deleteFlag =", value, "deleteFlag");
            return (Criteria) this;
        }

        public Criteria andDeleteFlagNotEqualTo(Integer value) {
            addCriterion("deleteFlag <>", value, "deleteFlag");
            return (Criteria) this;
        }

        public Criteria andDeleteFlagGreaterThan(Integer value) {
            addCriterion("deleteFlag >", value, "deleteFlag");
            return (Criteria) this;
        }

        public Criteria andDeleteFlagGreaterThanOrEqualTo(Integer value) {
            addCriterion("deleteFlag >=", value, "deleteFlag");
            return (Criteria) this;
        }

        public Criteria andDeleteFlagLessThan(Integer value) {
            addCriterion("deleteFlag <", value, "deleteFlag");
            return (Criteria) this;
        }

        public Criteria andDeleteFlagLessThanOrEqualTo(Integer value) {
            addCriterion("deleteFlag <=", value, "deleteFlag");
            return (Criteria) this;
        }

        public Criteria andDeleteFlagIn(List<Integer> values) {
            addCriterion("deleteFlag in", values, "deleteFlag");
            return (Criteria) this;
        }

        public Criteria andDeleteFlagNotIn(List<Integer> values) {
            addCriterion("deleteFlag not in", values, "deleteFlag");
            return (Criteria) this;
        }

        public Criteria andDeleteFlagBetween(Integer value1, Integer value2) {
            addCriterion("deleteFlag between", value1, value2, "deleteFlag");
            return (Criteria) this;
        }

        public Criteria andDeleteFlagNotBetween(Integer value1, Integer value2) {
            addCriterion("deleteFlag not between", value1, value2, "deleteFlag");
            return (Criteria) this;
        }

        public Criteria andNameLikeInsensitive(String value) {
            addCriterion("upper(name) like", value.toUpperCase(), "name");
            return (Criteria) this;
        }

        protected void addCriterionIgnoreNull(String condition, Object value, String property) {
            if (value != null) {
                if (value instanceof String) {
                    if (condition.toLowerCase().endsWith("like")) {
                        if (((String) value).replaceAll("%", "").length() > 0) {
                            criteria.add(new Criterion(condition, value));
                        }
                    } else if (((String) value).length() > 0) {
                        criteria.add(new Criterion(condition, value));
                    }
                } else if (value instanceof List<?>) {
                    if (((List<?>) value).size() > 0) {
                        criteria.add(new Criterion(condition, value));
                    }
                } else {
                    criteria.add(new Criterion(condition, value));
                }
            }
        }

        public Criteria andDeptIdEqualToIgnoreNull(Long value) {
            addCriterionIgnoreNull("deptId =", value, "deptId");
            return (Criteria) this;
        }

        public Criteria andDeptIdNotEqualToIgnoreNull(Long value) {
            addCriterionIgnoreNull("deptId <>", value, "deptId");
            return (Criteria) this;
        }

        public Criteria andDeptIdGreaterThanIgnoreNull(Long value) {
            addCriterionIgnoreNull("deptId >", value, "deptId");
            return (Criteria) this;
        }

        public Criteria andDeptIdGreaterThanOrEqualToIgnoreNull(Long value) {
            addCriterionIgnoreNull("deptId >=", value, "deptId");
            return (Criteria) this;
        }

        public Criteria andDeptIdLessThanIgnoreNull(Long value) {
            addCriterionIgnoreNull("deptId <", value, "deptId");
            return (Criteria) this;
        }

        public Criteria andDeptIdLessThanOrEqualToIgnoreNull(Long value) {
            addCriterionIgnoreNull("deptId <=", value, "deptId");
            return (Criteria) this;
        }

        public Criteria andDeptIdInIgnoreNull(List<Long> value) {
            addCriterionIgnoreNull("deptId in", value, "deptId");
            return (Criteria) this;
        }

        public Criteria andDeptIdNotInIgnoreNull(List<Long> value) {
            addCriterionIgnoreNull("deptId not in", value, "deptId");
            return (Criteria) this;
        }

        public Criteria andParentIdEqualToIgnoreNull(Long value) {
            addCriterionIgnoreNull("parentId =", value, "parentId");
            return (Criteria) this;
        }

        public Criteria andParentIdNotEqualToIgnoreNull(Long value) {
            addCriterionIgnoreNull("parentId <>", value, "parentId");
            return (Criteria) this;
        }

        public Criteria andParentIdGreaterThanIgnoreNull(Long value) {
            addCriterionIgnoreNull("parentId >", value, "parentId");
            return (Criteria) this;
        }

        public Criteria andParentIdGreaterThanOrEqualToIgnoreNull(Long value) {
            addCriterionIgnoreNull("parentId >=", value, "parentId");
            return (Criteria) this;
        }

        public Criteria andParentIdLessThanIgnoreNull(Long value) {
            addCriterionIgnoreNull("parentId <", value, "parentId");
            return (Criteria) this;
        }

        public Criteria andParentIdLessThanOrEqualToIgnoreNull(Long value) {
            addCriterionIgnoreNull("parentId <=", value, "parentId");
            return (Criteria) this;
        }

        public Criteria andParentIdInIgnoreNull(List<Long> value) {
            addCriterionIgnoreNull("parentId in", value, "parentId");
            return (Criteria) this;
        }

        public Criteria andParentIdNotInIgnoreNull(List<Long> value) {
            addCriterionIgnoreNull("parentId not in", value, "parentId");
            return (Criteria) this;
        }

        public Criteria andNameEqualToIgnoreNull(String value) {
            addCriterionIgnoreNull("name =", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotEqualToIgnoreNull(String value) {
            addCriterionIgnoreNull("name <>", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameGreaterThanIgnoreNull(String value) {
            addCriterionIgnoreNull("name >", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameGreaterThanOrEqualToIgnoreNull(String value) {
            addCriterionIgnoreNull("name >=", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameLessThanIgnoreNull(String value) {
            addCriterionIgnoreNull("name <", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameLessThanOrEqualToIgnoreNull(String value) {
            addCriterionIgnoreNull("name <=", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameLikeIgnoreNull(String value) {
            addCriterionIgnoreNull("name like", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotLikeIgnoreNull(String value) {
            addCriterionIgnoreNull("name not like", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameInIgnoreNull(List<String> value) {
            addCriterionIgnoreNull("name in", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotInIgnoreNull(List<String> value) {
            addCriterionIgnoreNull("name not in", value, "name");
            return (Criteria) this;
        }

        public Criteria andOrderNumEqualToIgnoreNull(Integer value) {
            addCriterionIgnoreNull("orderNum =", value, "orderNum");
            return (Criteria) this;
        }

        public Criteria andOrderNumNotEqualToIgnoreNull(Integer value) {
            addCriterionIgnoreNull("orderNum <>", value, "orderNum");
            return (Criteria) this;
        }

        public Criteria andOrderNumGreaterThanIgnoreNull(Integer value) {
            addCriterionIgnoreNull("orderNum >", value, "orderNum");
            return (Criteria) this;
        }

        public Criteria andOrderNumGreaterThanOrEqualToIgnoreNull(Integer value) {
            addCriterionIgnoreNull("orderNum >=", value, "orderNum");
            return (Criteria) this;
        }

        public Criteria andOrderNumLessThanIgnoreNull(Integer value) {
            addCriterionIgnoreNull("orderNum <", value, "orderNum");
            return (Criteria) this;
        }

        public Criteria andOrderNumLessThanOrEqualToIgnoreNull(Integer value) {
            addCriterionIgnoreNull("orderNum <=", value, "orderNum");
            return (Criteria) this;
        }

        public Criteria andOrderNumInIgnoreNull(List<Integer> value) {
            addCriterionIgnoreNull("orderNum in", value, "orderNum");
            return (Criteria) this;
        }

        public Criteria andOrderNumNotInIgnoreNull(List<Integer> value) {
            addCriterionIgnoreNull("orderNum not in", value, "orderNum");
            return (Criteria) this;
        }

        public Criteria andDeleteFlagEqualToIgnoreNull(Integer value) {
            addCriterionIgnoreNull("deleteFlag =", value, "deleteFlag");
            return (Criteria) this;
        }

        public Criteria andDeleteFlagNotEqualToIgnoreNull(Integer value) {
            addCriterionIgnoreNull("deleteFlag <>", value, "deleteFlag");
            return (Criteria) this;
        }

        public Criteria andDeleteFlagGreaterThanIgnoreNull(Integer value) {
            addCriterionIgnoreNull("deleteFlag >", value, "deleteFlag");
            return (Criteria) this;
        }

        public Criteria andDeleteFlagGreaterThanOrEqualToIgnoreNull(Integer value) {
            addCriterionIgnoreNull("deleteFlag >=", value, "deleteFlag");
            return (Criteria) this;
        }

        public Criteria andDeleteFlagLessThanIgnoreNull(Integer value) {
            addCriterionIgnoreNull("deleteFlag <", value, "deleteFlag");
            return (Criteria) this;
        }

        public Criteria andDeleteFlagLessThanOrEqualToIgnoreNull(Integer value) {
            addCriterionIgnoreNull("deleteFlag <=", value, "deleteFlag");
            return (Criteria) this;
        }

        public Criteria andDeleteFlagInIgnoreNull(List<Integer> value) {
            addCriterionIgnoreNull("deleteFlag in", value, "deleteFlag");
            return (Criteria) this;
        }

        public Criteria andDeleteFlagNotInIgnoreNull(List<Integer> value) {
            addCriterionIgnoreNull("deleteFlag not in", value, "deleteFlag");
            return (Criteria) this;
        }

        public Criteria andNameLikeInsensitiveIgnoreNull(String value) {
            addCriterionIgnoreNull("upper(name) like", value.toUpperCase(), "name");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table s_sys_dept
     *
     * @mbggenerated
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }

        public Criteria andDeptIdLikeInsensitive(String value) {
            addCriterion("upper(deptId) like", value.toUpperCase(), "deptId");
            return this;
        }

        public Criteria andParentIdLikeInsensitive(String value) {
            addCriterion("upper(parentId) like", value.toUpperCase(), "parentId");
            return this;
        }

        public Criteria andNameLikeInsensitive(String value) {
            addCriterion("upper(name) like", value.toUpperCase(), "name");
            return this;
        }

        public Criteria andOrderNumLikeInsensitive(String value) {
            addCriterion("upper(orderNum) like", value.toUpperCase(), "orderNum");
            return this;
        }

        public Criteria andDeleteFlagLikeInsensitive(String value) {
            addCriterion("upper(deleteFlag) like", value.toUpperCase(), "deleteFlag");
            return this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table s_sys_dept
     *
     * @mbggenerated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}