<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="io.frame.dao.mapper.ConfigMapper">
  <resultMap id="BaseResultMap" type="io.frame.dao.entity.Config">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="configId" jdbcType="BIGINT" property="configId" />
    <result column="configKey" jdbcType="VARCHAR" property="configKey" />
    <result column="configVal" jdbcType="VARCHAR" property="configVal" />
    <result column="configName" jdbcType="VARCHAR" property="configName" />
    <result column="configType" jdbcType="VARCHAR" property="configType" />
    <result column="createTime" jdbcType="TIMESTAMP" property="createTime" />
    <result column="createUser" jdbcType="VARCHAR" property="createUser" />
    <result column="updateTime" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="updateUser" jdbcType="VARCHAR" property="updateUser" />
    <result column="configStatus" jdbcType="INTEGER" property="configStatus" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    configId, configKey, configVal, configName, configType, createTime, createUser, updateTime, 
    updateUser, configStatus, remark
  </sql>
  <select id="selectByExample" parameterType="io.frame.dao.entity.ConfigExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from s_config
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExampleShowField" parameterType="map" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="example!=null and example.distinct">
      distinct
    </if>
    <foreach collection="showField" item="column" separator=",">
      ${column}
    </foreach>
    from s_config
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
    <if test="example.orderByClause != null">
      order by ${example.orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from s_config
    where configId = #{configId,jdbcType=BIGINT}
  </select>
  <select id="selectByPrimaryKeyShowField" parameterType="map" resultType="io.frame.dao.entity.Config">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <foreach collection="showField" item="column" separator=",">
      ${column}
    </foreach>
    from s_config
    where configId = #{configId,jdbcType=BIGINT}
    limit 1
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from s_config
    where configId = #{configId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="io.frame.dao.entity.ConfigExample">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from s_config
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="io.frame.dao.entity.Config">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into s_config (configId, configKey, configVal, 
      configName, configType, createTime, 
      createUser, updateTime, updateUser, 
      configStatus, remark)
    values (#{configId,jdbcType=BIGINT}, #{configKey,jdbcType=VARCHAR}, #{configVal,jdbcType=VARCHAR}, 
      #{configName,jdbcType=VARCHAR}, #{configType,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{createUser,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}, #{updateUser,jdbcType=VARCHAR}, 
      #{configStatus,jdbcType=INTEGER}, #{remark,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="io.frame.dao.entity.Config">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into s_config
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="configId != null">
        configId,
      </if>
      <if test="configKey != null">
        configKey,
      </if>
      <if test="configVal != null">
        configVal,
      </if>
      <if test="configName != null">
        configName,
      </if>
      <if test="configType != null">
        configType,
      </if>
      <if test="createTime != null">
        createTime,
      </if>
      <if test="createUser != null">
        createUser,
      </if>
      <if test="updateTime != null">
        updateTime,
      </if>
      <if test="updateUser != null">
        updateUser,
      </if>
      <if test="configStatus != null">
        configStatus,
      </if>
      <if test="remark != null">
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="configId != null">
        #{configId,jdbcType=BIGINT},
      </if>
      <if test="configKey != null">
        #{configKey,jdbcType=VARCHAR},
      </if>
      <if test="configVal != null">
        #{configVal,jdbcType=VARCHAR},
      </if>
      <if test="configName != null">
        #{configName,jdbcType=VARCHAR},
      </if>
      <if test="configType != null">
        #{configType,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null">
        #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="configStatus != null">
        #{configStatus,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="io.frame.dao.entity.ConfigExample" resultType="int">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from s_config
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update s_config
    <set>
      <if test="record.configId != null">
        configId = #{record.configId,jdbcType=BIGINT},
      </if>
      <if test="record.configKey != null">
        configKey = #{record.configKey,jdbcType=VARCHAR},
      </if>
      <if test="record.configVal != null">
        configVal = #{record.configVal,jdbcType=VARCHAR},
      </if>
      <if test="record.configName != null">
        configName = #{record.configName,jdbcType=VARCHAR},
      </if>
      <if test="record.configType != null">
        configType = #{record.configType,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        createTime = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createUser != null">
        createUser = #{record.createUser,jdbcType=VARCHAR},
      </if>
      <if test="record.updateTime != null">
        updateTime = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateUser != null">
        updateUser = #{record.updateUser,jdbcType=VARCHAR},
      </if>
      <if test="record.configStatus != null">
        configStatus = #{record.configStatus,jdbcType=INTEGER},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update s_config
    set configId = #{record.configId,jdbcType=BIGINT},
      configKey = #{record.configKey,jdbcType=VARCHAR},
      configVal = #{record.configVal,jdbcType=VARCHAR},
      configName = #{record.configName,jdbcType=VARCHAR},
      configType = #{record.configType,jdbcType=VARCHAR},
      createTime = #{record.createTime,jdbcType=TIMESTAMP},
      createUser = #{record.createUser,jdbcType=VARCHAR},
      updateTime = #{record.updateTime,jdbcType=TIMESTAMP},
      updateUser = #{record.updateUser,jdbcType=VARCHAR},
      configStatus = #{record.configStatus,jdbcType=INTEGER},
      remark = #{record.remark,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleSelectiveSync" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update  s_config
    <set>
    <if test="record.configStatus != null">
       configStatus = (case when configStatus is null then #{record.configStatus,jdbcType=INTEGER} else configStatus + #{record.configStatus,jdbcType=INTEGER} end ),
    </if>
    </set>
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="io.frame.dao.entity.Config">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update s_config
    <set>
      <if test="configKey != null">
        configKey = #{configKey,jdbcType=VARCHAR},
      </if>
      <if test="configVal != null">
        configVal = #{configVal,jdbcType=VARCHAR},
      </if>
      <if test="configName != null">
        configName = #{configName,jdbcType=VARCHAR},
      </if>
      <if test="configType != null">
        configType = #{configType,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        createTime = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null">
        createUser = #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        updateTime = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        updateUser = #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="configStatus != null">
        configStatus = #{configStatus,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where configId = #{configId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="io.frame.dao.entity.Config">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update s_config
    set configKey = #{configKey,jdbcType=VARCHAR},
      configVal = #{configVal,jdbcType=VARCHAR},
      configName = #{configName,jdbcType=VARCHAR},
      configType = #{configType,jdbcType=VARCHAR},
      createTime = #{createTime,jdbcType=TIMESTAMP},
      createUser = #{createUser,jdbcType=VARCHAR},
      updateTime = #{updateTime,jdbcType=TIMESTAMP},
      updateUser = #{updateUser,jdbcType=VARCHAR},
      configStatus = #{configStatus,jdbcType=INTEGER},
      remark = #{remark,jdbcType=VARCHAR}
    where configId = #{configId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeySelectiveSync" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update  s_config
    <set>
    <if test="configStatus != null">
       configStatus = (case when configStatus is null then #{configStatus,jdbcType=INTEGER} else configStatus + #{configStatus,jdbcType=INTEGER} end ),
    </if>
    </set>
    where configId = #{configId,jdbcType=BIGINT}
  </update>
  <insert id="insertBatch" parameterType="java.util.List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into s_config
    (configId, configKey, configVal, configName, configType, createTime, createUser, 
      updateTime, updateUser, configStatus, remark)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.configId,jdbcType=BIGINT}, #{item.configKey,jdbcType=VARCHAR}, #{item.configVal,jdbcType=VARCHAR}, 
        #{item.configName,jdbcType=VARCHAR}, #{item.configType,jdbcType=VARCHAR}, #{item.createTime,jdbcType=TIMESTAMP}, 
        #{item.createUser,jdbcType=VARCHAR}, #{item.updateTime,jdbcType=TIMESTAMP}, #{item.updateUser,jdbcType=VARCHAR}, 
        #{item.configStatus,jdbcType=INTEGER}, #{item.remark,jdbcType=VARCHAR})
    </foreach>
  </insert>
  <insert id="insertBatchSelective" parameterType="java.util.List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into s_config (
    <foreach collection="showField" item="one" separator=",">
      ${one}
    </foreach>
    )
    values
    <foreach collection="list" item="item" separator=",">
      (
      <foreach collection="showField" item="column" separator=",">
        <if test="'configId' == column">
          #{item.configId,jdbcType=BIGINT}
        </if>
        <if test="'configKey' == column">
          #{item.configKey,jdbcType=VARCHAR}
        </if>
        <if test="'configVal' == column">
          #{item.configVal,jdbcType=VARCHAR}
        </if>
        <if test="'configName' == column">
          #{item.configName,jdbcType=VARCHAR}
        </if>
        <if test="'configType' == column">
          #{item.configType,jdbcType=VARCHAR}
        </if>
        <if test="'createTime' == column">
          #{item.createTime,jdbcType=TIMESTAMP}
        </if>
        <if test="'createUser' == column">
          #{item.createUser,jdbcType=VARCHAR}
        </if>
        <if test="'updateTime' == column">
          #{item.updateTime,jdbcType=TIMESTAMP}
        </if>
        <if test="'updateUser' == column">
          #{item.updateUser,jdbcType=VARCHAR}
        </if>
        <if test="'configStatus' == column">
          #{item.configStatus,jdbcType=INTEGER}
        </if>
        <if test="'remark' == column">
          #{item.remark,jdbcType=VARCHAR}
        </if>
      </foreach>
      )
    </foreach>
  </insert>
  <select id="selectOneByExample" parameterType="io.frame.dao.entity.ConfigExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <include refid="Base_Column_List" />
    from s_config
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    limit 1
  </select>
  <select id="selectOneByExampleShowField" parameterType="map" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <foreach collection="showField" item="column" separator=",">
      ${column}
    </foreach>
    from s_config
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
    <if test="example.orderByClause != null">
      order by ${example.orderByClause}
    </if>
    limit 1
  </select>
  <insert id="upsert" parameterType="io.frame.dao.entity.Config">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into s_config
    (configId, configKey, configVal, configName, configType, createTime, createUser, 
      updateTime, updateUser, configStatus, remark)
    values
    (#{configId,jdbcType=BIGINT}, #{configKey,jdbcType=VARCHAR}, #{configVal,jdbcType=VARCHAR}, 
      #{configName,jdbcType=VARCHAR}, #{configType,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{createUser,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}, #{updateUser,jdbcType=VARCHAR}, 
      #{configStatus,jdbcType=INTEGER}, #{remark,jdbcType=VARCHAR})
    on duplicate key update 
    configId =  #{configId,jdbcType=BIGINT},
    configKey =  #{configKey,jdbcType=VARCHAR},
    configVal =  #{configVal,jdbcType=VARCHAR},
    configName =  #{configName,jdbcType=VARCHAR},
    configType =  #{configType,jdbcType=VARCHAR},
    createTime =  #{createTime,jdbcType=TIMESTAMP},
    createUser =  #{createUser,jdbcType=VARCHAR},
    updateTime =  #{updateTime,jdbcType=TIMESTAMP},
    updateUser =  #{updateUser,jdbcType=VARCHAR},
    configStatus =  #{configStatus,jdbcType=INTEGER},
    remark =  #{remark,jdbcType=VARCHAR}
  </insert>
  <insert id="upsertSelective" parameterType="io.frame.dao.entity.Config">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into s_config
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="configId != null">
        configId,
      </if>
      <if test="configKey != null">
        configKey,
      </if>
      <if test="configVal != null">
        configVal,
      </if>
      <if test="configName != null">
        configName,
      </if>
      <if test="configType != null">
        configType,
      </if>
      <if test="createTime != null">
        createTime,
      </if>
      <if test="createUser != null">
        createUser,
      </if>
      <if test="updateTime != null">
        updateTime,
      </if>
      <if test="updateUser != null">
        updateUser,
      </if>
      <if test="configStatus != null">
        configStatus,
      </if>
      <if test="remark != null">
        remark,
      </if>
    </trim>
    values
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="configId != null">
        #{configId,jdbcType=BIGINT},
      </if>
      <if test="configKey != null">
        #{configKey,jdbcType=VARCHAR},
      </if>
      <if test="configVal != null">
        #{configVal,jdbcType=VARCHAR},
      </if>
      <if test="configName != null">
        #{configName,jdbcType=VARCHAR},
      </if>
      <if test="configType != null">
        #{configType,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null">
        #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="configStatus != null">
        #{configStatus,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
    on duplicate key update 
    <trim suffixOverrides=",">
      <if test="configId != null">
        configId =  #{configId,jdbcType=BIGINT},
      </if>
      <if test="configKey != null">
        configKey =  #{configKey,jdbcType=VARCHAR},
      </if>
      <if test="configVal != null">
        configVal =  #{configVal,jdbcType=VARCHAR},
      </if>
      <if test="configName != null">
        configName =  #{configName,jdbcType=VARCHAR},
      </if>
      <if test="configType != null">
        configType =  #{configType,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        createTime =  #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null">
        createUser =  #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        updateTime =  #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        updateUser =  #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="configStatus != null">
        configStatus =  #{configStatus,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        remark =  #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
</mapper>