<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="io.frame.dao.mapper.RechargeMapper">
  <resultMap id="BaseResultMap" type="io.frame.dao.entity.Recharge">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="rechargeId" jdbcType="BIGINT" property="rechargeId" />
    <result column="userId" jdbcType="BIGINT" property="userId" />
    <result column="userMobile" jdbcType="VARCHAR" property="userMobile" />
    <result column="userName" jdbcType="VARCHAR" property="userName" />
    <result column="parentId" jdbcType="BIGINT" property="parentId" />
    <result column="groupUserIds" jdbcType="VARCHAR" property="groupUserIds" />
    <result column="rechargeMoney" jdbcType="DECIMAL" property="rechargeMoney" />
    <result column="rechargeFee" jdbcType="DECIMAL" property="rechargeFee" />
    <result column="alipayName" jdbcType="VARCHAR" property="alipayName" />
    <result column="alipayMobile" jdbcType="VARCHAR" property="alipayMobile" />
    <result column="rechargeCode" jdbcType="VARCHAR" property="rechargeCode" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="frontRemark" jdbcType="VARCHAR" property="frontRemark" />
    <result column="backRemark" jdbcType="VARCHAR" property="backRemark" />
    <result column="createTime" jdbcType="TIMESTAMP" property="createTime" />
    <result column="createUser" jdbcType="VARCHAR" property="createUser" />
    <result column="updateTime" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="updateUser" jdbcType="VARCHAR" property="updateUser" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    rechargeId, userId, userMobile, userName, parentId, groupUserIds, rechargeMoney, 
    rechargeFee, alipayName, alipayMobile, rechargeCode, status, frontRemark, backRemark, 
    createTime, createUser, updateTime, updateUser
  </sql>
  <select id="selectByExample" parameterType="io.frame.dao.entity.RechargeExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from u_recharge
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExampleShowField" parameterType="map" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="example!=null and example.distinct">
      distinct
    </if>
    <foreach collection="showField" item="column" separator=",">
      ${column}
    </foreach>
    from u_recharge
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
    <if test="example.orderByClause != null">
      order by ${example.orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from u_recharge
    where rechargeId = #{rechargeId,jdbcType=BIGINT}
  </select>
  <select id="selectByPrimaryKeyShowField" parameterType="map" resultType="io.frame.dao.entity.Recharge">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <foreach collection="showField" item="column" separator=",">
      ${column}
    </foreach>
    from u_recharge
    where rechargeId = #{rechargeId,jdbcType=BIGINT}
    limit 1
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from u_recharge
    where rechargeId = #{rechargeId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="io.frame.dao.entity.RechargeExample">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from u_recharge
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="io.frame.dao.entity.Recharge">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into u_recharge (rechargeId, userId, userMobile, 
      userName, parentId, groupUserIds, 
      rechargeMoney, rechargeFee, alipayName, 
      alipayMobile, rechargeCode, status, 
      frontRemark, backRemark, createTime, 
      createUser, updateTime, updateUser
      )
    values (#{rechargeId,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, #{userMobile,jdbcType=VARCHAR}, 
      #{userName,jdbcType=VARCHAR}, #{parentId,jdbcType=BIGINT}, #{groupUserIds,jdbcType=VARCHAR}, 
      #{rechargeMoney,jdbcType=DECIMAL}, #{rechargeFee,jdbcType=DECIMAL}, #{alipayName,jdbcType=VARCHAR}, 
      #{alipayMobile,jdbcType=VARCHAR}, #{rechargeCode,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}, 
      #{frontRemark,jdbcType=VARCHAR}, #{backRemark,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{createUser,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}, #{updateUser,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="io.frame.dao.entity.Recharge">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into u_recharge
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="rechargeId != null">
        rechargeId,
      </if>
      <if test="userId != null">
        userId,
      </if>
      <if test="userMobile != null">
        userMobile,
      </if>
      <if test="userName != null">
        userName,
      </if>
      <if test="parentId != null">
        parentId,
      </if>
      <if test="groupUserIds != null">
        groupUserIds,
      </if>
      <if test="rechargeMoney != null">
        rechargeMoney,
      </if>
      <if test="rechargeFee != null">
        rechargeFee,
      </if>
      <if test="alipayName != null">
        alipayName,
      </if>
      <if test="alipayMobile != null">
        alipayMobile,
      </if>
      <if test="rechargeCode != null">
        rechargeCode,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="frontRemark != null">
        frontRemark,
      </if>
      <if test="backRemark != null">
        backRemark,
      </if>
      <if test="createTime != null">
        createTime,
      </if>
      <if test="createUser != null">
        createUser,
      </if>
      <if test="updateTime != null">
        updateTime,
      </if>
      <if test="updateUser != null">
        updateUser,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="rechargeId != null">
        #{rechargeId,jdbcType=BIGINT},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="userMobile != null">
        #{userMobile,jdbcType=VARCHAR},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null">
        #{parentId,jdbcType=BIGINT},
      </if>
      <if test="groupUserIds != null">
        #{groupUserIds,jdbcType=VARCHAR},
      </if>
      <if test="rechargeMoney != null">
        #{rechargeMoney,jdbcType=DECIMAL},
      </if>
      <if test="rechargeFee != null">
        #{rechargeFee,jdbcType=DECIMAL},
      </if>
      <if test="alipayName != null">
        #{alipayName,jdbcType=VARCHAR},
      </if>
      <if test="alipayMobile != null">
        #{alipayMobile,jdbcType=VARCHAR},
      </if>
      <if test="rechargeCode != null">
        #{rechargeCode,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="frontRemark != null">
        #{frontRemark,jdbcType=VARCHAR},
      </if>
      <if test="backRemark != null">
        #{backRemark,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null">
        #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        #{updateUser,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="io.frame.dao.entity.RechargeExample" resultType="int">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from u_recharge
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update u_recharge
    <set>
      <if test="record.rechargeId != null">
        rechargeId = #{record.rechargeId,jdbcType=BIGINT},
      </if>
      <if test="record.userId != null">
        userId = #{record.userId,jdbcType=BIGINT},
      </if>
      <if test="record.userMobile != null">
        userMobile = #{record.userMobile,jdbcType=VARCHAR},
      </if>
      <if test="record.userName != null">
        userName = #{record.userName,jdbcType=VARCHAR},
      </if>
      <if test="record.parentId != null">
        parentId = #{record.parentId,jdbcType=BIGINT},
      </if>
      <if test="record.groupUserIds != null">
        groupUserIds = #{record.groupUserIds,jdbcType=VARCHAR},
      </if>
      <if test="record.rechargeMoney != null">
        rechargeMoney = #{record.rechargeMoney,jdbcType=DECIMAL},
      </if>
      <if test="record.rechargeFee != null">
        rechargeFee = #{record.rechargeFee,jdbcType=DECIMAL},
      </if>
      <if test="record.alipayName != null">
        alipayName = #{record.alipayName,jdbcType=VARCHAR},
      </if>
      <if test="record.alipayMobile != null">
        alipayMobile = #{record.alipayMobile,jdbcType=VARCHAR},
      </if>
      <if test="record.rechargeCode != null">
        rechargeCode = #{record.rechargeCode,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.frontRemark != null">
        frontRemark = #{record.frontRemark,jdbcType=VARCHAR},
      </if>
      <if test="record.backRemark != null">
        backRemark = #{record.backRemark,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        createTime = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createUser != null">
        createUser = #{record.createUser,jdbcType=VARCHAR},
      </if>
      <if test="record.updateTime != null">
        updateTime = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateUser != null">
        updateUser = #{record.updateUser,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update u_recharge
    set rechargeId = #{record.rechargeId,jdbcType=BIGINT},
      userId = #{record.userId,jdbcType=BIGINT},
      userMobile = #{record.userMobile,jdbcType=VARCHAR},
      userName = #{record.userName,jdbcType=VARCHAR},
      parentId = #{record.parentId,jdbcType=BIGINT},
      groupUserIds = #{record.groupUserIds,jdbcType=VARCHAR},
      rechargeMoney = #{record.rechargeMoney,jdbcType=DECIMAL},
      rechargeFee = #{record.rechargeFee,jdbcType=DECIMAL},
      alipayName = #{record.alipayName,jdbcType=VARCHAR},
      alipayMobile = #{record.alipayMobile,jdbcType=VARCHAR},
      rechargeCode = #{record.rechargeCode,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=INTEGER},
      frontRemark = #{record.frontRemark,jdbcType=VARCHAR},
      backRemark = #{record.backRemark,jdbcType=VARCHAR},
      createTime = #{record.createTime,jdbcType=TIMESTAMP},
      createUser = #{record.createUser,jdbcType=VARCHAR},
      updateTime = #{record.updateTime,jdbcType=TIMESTAMP},
      updateUser = #{record.updateUser,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleSelectiveSync" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update  u_recharge
    <set>
    <if test="record.rechargeMoney != null">
       rechargeMoney = (case when rechargeMoney is null then #{record.rechargeMoney,jdbcType=DECIMAL} else rechargeMoney + #{record.rechargeMoney,jdbcType=DECIMAL} end ),
    </if>
    <if test="record.rechargeFee != null">
       rechargeFee = (case when rechargeFee is null then #{record.rechargeFee,jdbcType=DECIMAL} else rechargeFee + #{record.rechargeFee,jdbcType=DECIMAL} end ),
    </if>
    <if test="record.status != null">
       status = (case when status is null then #{record.status,jdbcType=INTEGER} else status + #{record.status,jdbcType=INTEGER} end ),
    </if>
    </set>
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="io.frame.dao.entity.Recharge">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update u_recharge
    <set>
      <if test="userId != null">
        userId = #{userId,jdbcType=BIGINT},
      </if>
      <if test="userMobile != null">
        userMobile = #{userMobile,jdbcType=VARCHAR},
      </if>
      <if test="userName != null">
        userName = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null">
        parentId = #{parentId,jdbcType=BIGINT},
      </if>
      <if test="groupUserIds != null">
        groupUserIds = #{groupUserIds,jdbcType=VARCHAR},
      </if>
      <if test="rechargeMoney != null">
        rechargeMoney = #{rechargeMoney,jdbcType=DECIMAL},
      </if>
      <if test="rechargeFee != null">
        rechargeFee = #{rechargeFee,jdbcType=DECIMAL},
      </if>
      <if test="alipayName != null">
        alipayName = #{alipayName,jdbcType=VARCHAR},
      </if>
      <if test="alipayMobile != null">
        alipayMobile = #{alipayMobile,jdbcType=VARCHAR},
      </if>
      <if test="rechargeCode != null">
        rechargeCode = #{rechargeCode,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="frontRemark != null">
        frontRemark = #{frontRemark,jdbcType=VARCHAR},
      </if>
      <if test="backRemark != null">
        backRemark = #{backRemark,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        createTime = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null">
        createUser = #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        updateTime = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        updateUser = #{updateUser,jdbcType=VARCHAR},
      </if>
    </set>
    where rechargeId = #{rechargeId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="io.frame.dao.entity.Recharge">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update u_recharge
    set userId = #{userId,jdbcType=BIGINT},
      userMobile = #{userMobile,jdbcType=VARCHAR},
      userName = #{userName,jdbcType=VARCHAR},
      parentId = #{parentId,jdbcType=BIGINT},
      groupUserIds = #{groupUserIds,jdbcType=VARCHAR},
      rechargeMoney = #{rechargeMoney,jdbcType=DECIMAL},
      rechargeFee = #{rechargeFee,jdbcType=DECIMAL},
      alipayName = #{alipayName,jdbcType=VARCHAR},
      alipayMobile = #{alipayMobile,jdbcType=VARCHAR},
      rechargeCode = #{rechargeCode,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      frontRemark = #{frontRemark,jdbcType=VARCHAR},
      backRemark = #{backRemark,jdbcType=VARCHAR},
      createTime = #{createTime,jdbcType=TIMESTAMP},
      createUser = #{createUser,jdbcType=VARCHAR},
      updateTime = #{updateTime,jdbcType=TIMESTAMP},
      updateUser = #{updateUser,jdbcType=VARCHAR}
    where rechargeId = #{rechargeId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeySelectiveSync" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update  u_recharge
    <set>
    <if test="rechargeMoney != null">
       rechargeMoney = (case when rechargeMoney is null then #{rechargeMoney,jdbcType=DECIMAL} else rechargeMoney + #{rechargeMoney,jdbcType=DECIMAL} end ),
    </if>
    <if test="rechargeFee != null">
       rechargeFee = (case when rechargeFee is null then #{rechargeFee,jdbcType=DECIMAL} else rechargeFee + #{rechargeFee,jdbcType=DECIMAL} end ),
    </if>
    <if test="status != null">
       status = (case when status is null then #{status,jdbcType=INTEGER} else status + #{status,jdbcType=INTEGER} end ),
    </if>
    </set>
    where rechargeId = #{rechargeId,jdbcType=BIGINT}
  </update>
  <insert id="insertBatch" parameterType="java.util.List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into u_recharge
    (rechargeId, userId, userMobile, userName, parentId, groupUserIds, rechargeMoney, 
      rechargeFee, alipayName, alipayMobile, rechargeCode, status, frontRemark, backRemark, 
      createTime, createUser, updateTime, updateUser)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.rechargeId,jdbcType=BIGINT}, #{item.userId,jdbcType=BIGINT}, #{item.userMobile,jdbcType=VARCHAR}, 
        #{item.userName,jdbcType=VARCHAR}, #{item.parentId,jdbcType=BIGINT}, #{item.groupUserIds,jdbcType=VARCHAR}, 
        #{item.rechargeMoney,jdbcType=DECIMAL}, #{item.rechargeFee,jdbcType=DECIMAL}, #{item.alipayName,jdbcType=VARCHAR}, 
        #{item.alipayMobile,jdbcType=VARCHAR}, #{item.rechargeCode,jdbcType=VARCHAR}, #{item.status,jdbcType=INTEGER}, 
        #{item.frontRemark,jdbcType=VARCHAR}, #{item.backRemark,jdbcType=VARCHAR}, #{item.createTime,jdbcType=TIMESTAMP}, 
        #{item.createUser,jdbcType=VARCHAR}, #{item.updateTime,jdbcType=TIMESTAMP}, #{item.updateUser,jdbcType=VARCHAR}
        )
    </foreach>
  </insert>
  <insert id="insertBatchSelective" parameterType="java.util.List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into u_recharge (
    <foreach collection="showField" item="one" separator=",">
      ${one}
    </foreach>
    )
    values
    <foreach collection="list" item="item" separator=",">
      (
      <foreach collection="showField" item="column" separator=",">
        <if test="'rechargeId' == column">
          #{item.rechargeId,jdbcType=BIGINT}
        </if>
        <if test="'userId' == column">
          #{item.userId,jdbcType=BIGINT}
        </if>
        <if test="'userMobile' == column">
          #{item.userMobile,jdbcType=VARCHAR}
        </if>
        <if test="'userName' == column">
          #{item.userName,jdbcType=VARCHAR}
        </if>
        <if test="'parentId' == column">
          #{item.parentId,jdbcType=BIGINT}
        </if>
        <if test="'groupUserIds' == column">
          #{item.groupUserIds,jdbcType=VARCHAR}
        </if>
        <if test="'rechargeMoney' == column">
          #{item.rechargeMoney,jdbcType=DECIMAL}
        </if>
        <if test="'rechargeFee' == column">
          #{item.rechargeFee,jdbcType=DECIMAL}
        </if>
        <if test="'alipayName' == column">
          #{item.alipayName,jdbcType=VARCHAR}
        </if>
        <if test="'alipayMobile' == column">
          #{item.alipayMobile,jdbcType=VARCHAR}
        </if>
        <if test="'rechargeCode' == column">
          #{item.rechargeCode,jdbcType=VARCHAR}
        </if>
        <if test="'status' == column">
          #{item.status,jdbcType=INTEGER}
        </if>
        <if test="'frontRemark' == column">
          #{item.frontRemark,jdbcType=VARCHAR}
        </if>
        <if test="'backRemark' == column">
          #{item.backRemark,jdbcType=VARCHAR}
        </if>
        <if test="'createTime' == column">
          #{item.createTime,jdbcType=TIMESTAMP}
        </if>
        <if test="'createUser' == column">
          #{item.createUser,jdbcType=VARCHAR}
        </if>
        <if test="'updateTime' == column">
          #{item.updateTime,jdbcType=TIMESTAMP}
        </if>
        <if test="'updateUser' == column">
          #{item.updateUser,jdbcType=VARCHAR}
        </if>
      </foreach>
      )
    </foreach>
  </insert>
  <select id="selectOneByExample" parameterType="io.frame.dao.entity.RechargeExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <include refid="Base_Column_List" />
    from u_recharge
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    limit 1
  </select>
  <select id="selectOneByExampleShowField" parameterType="map" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <foreach collection="showField" item="column" separator=",">
      ${column}
    </foreach>
    from u_recharge
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
    <if test="example.orderByClause != null">
      order by ${example.orderByClause}
    </if>
    limit 1
  </select>
  <insert id="upsert" parameterType="io.frame.dao.entity.Recharge">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into u_recharge
    (rechargeId, userId, userMobile, userName, parentId, groupUserIds, rechargeMoney, 
      rechargeFee, alipayName, alipayMobile, rechargeCode, status, frontRemark, backRemark, 
      createTime, createUser, updateTime, updateUser)
    values
    (#{rechargeId,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, #{userMobile,jdbcType=VARCHAR}, 
      #{userName,jdbcType=VARCHAR}, #{parentId,jdbcType=BIGINT}, #{groupUserIds,jdbcType=VARCHAR}, 
      #{rechargeMoney,jdbcType=DECIMAL}, #{rechargeFee,jdbcType=DECIMAL}, #{alipayName,jdbcType=VARCHAR}, 
      #{alipayMobile,jdbcType=VARCHAR}, #{rechargeCode,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}, 
      #{frontRemark,jdbcType=VARCHAR}, #{backRemark,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{createUser,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}, #{updateUser,jdbcType=VARCHAR}
      )
    on duplicate key update 
    rechargeId =  #{rechargeId,jdbcType=BIGINT},
    userId =  #{userId,jdbcType=BIGINT},
    userMobile =  #{userMobile,jdbcType=VARCHAR},
    userName =  #{userName,jdbcType=VARCHAR},
    parentId =  #{parentId,jdbcType=BIGINT},
    groupUserIds =  #{groupUserIds,jdbcType=VARCHAR},
    rechargeMoney = (case when rechargeMoney is null then #{rechargeMoney,jdbcType=DECIMAL} else rechargeMoney + #{rechargeMoney,jdbcType=DECIMAL} end ),
    rechargeFee = (case when rechargeFee is null then #{rechargeFee,jdbcType=DECIMAL} else rechargeFee + #{rechargeFee,jdbcType=DECIMAL} end ),
    alipayName =  #{alipayName,jdbcType=VARCHAR},
    alipayMobile =  #{alipayMobile,jdbcType=VARCHAR},
    rechargeCode =  #{rechargeCode,jdbcType=VARCHAR},
    status =  #{status,jdbcType=INTEGER},
    frontRemark =  #{frontRemark,jdbcType=VARCHAR},
    backRemark =  #{backRemark,jdbcType=VARCHAR},
    createTime =  #{createTime,jdbcType=TIMESTAMP},
    createUser =  #{createUser,jdbcType=VARCHAR},
    updateTime =  #{updateTime,jdbcType=TIMESTAMP},
    updateUser =  #{updateUser,jdbcType=VARCHAR}
  </insert>
  <insert id="upsertSelective" parameterType="io.frame.dao.entity.Recharge">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into u_recharge
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="rechargeId != null">
        rechargeId,
      </if>
      <if test="userId != null">
        userId,
      </if>
      <if test="userMobile != null">
        userMobile,
      </if>
      <if test="userName != null">
        userName,
      </if>
      <if test="parentId != null">
        parentId,
      </if>
      <if test="groupUserIds != null">
        groupUserIds,
      </if>
      <if test="rechargeMoney != null">
        rechargeMoney,
      </if>
      <if test="rechargeFee != null">
        rechargeFee,
      </if>
      <if test="alipayName != null">
        alipayName,
      </if>
      <if test="alipayMobile != null">
        alipayMobile,
      </if>
      <if test="rechargeCode != null">
        rechargeCode,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="frontRemark != null">
        frontRemark,
      </if>
      <if test="backRemark != null">
        backRemark,
      </if>
      <if test="createTime != null">
        createTime,
      </if>
      <if test="createUser != null">
        createUser,
      </if>
      <if test="updateTime != null">
        updateTime,
      </if>
      <if test="updateUser != null">
        updateUser,
      </if>
    </trim>
    values
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="rechargeId != null">
        #{rechargeId,jdbcType=BIGINT},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="userMobile != null">
        #{userMobile,jdbcType=VARCHAR},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null">
        #{parentId,jdbcType=BIGINT},
      </if>
      <if test="groupUserIds != null">
        #{groupUserIds,jdbcType=VARCHAR},
      </if>
      <if test="rechargeMoney != null">
        #{rechargeMoney,jdbcType=DECIMAL},
      </if>
      <if test="rechargeFee != null">
        #{rechargeFee,jdbcType=DECIMAL},
      </if>
      <if test="alipayName != null">
        #{alipayName,jdbcType=VARCHAR},
      </if>
      <if test="alipayMobile != null">
        #{alipayMobile,jdbcType=VARCHAR},
      </if>
      <if test="rechargeCode != null">
        #{rechargeCode,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="frontRemark != null">
        #{frontRemark,jdbcType=VARCHAR},
      </if>
      <if test="backRemark != null">
        #{backRemark,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null">
        #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        #{updateUser,jdbcType=VARCHAR},
      </if>
    </trim>
    on duplicate key update 
    <trim suffixOverrides=",">
      <if test="rechargeId != null">
        rechargeId =  #{rechargeId,jdbcType=BIGINT},
      </if>
      <if test="userId != null">
        userId =  #{userId,jdbcType=BIGINT},
      </if>
      <if test="userMobile != null">
        userMobile =  #{userMobile,jdbcType=VARCHAR},
      </if>
      <if test="userName != null">
        userName =  #{userName,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null">
        parentId =  #{parentId,jdbcType=BIGINT},
      </if>
      <if test="groupUserIds != null">
        groupUserIds =  #{groupUserIds,jdbcType=VARCHAR},
      </if>
      <if test="rechargeMoney != null">
        rechargeMoney = (case when rechargeMoney is null then #{rechargeMoney,jdbcType=DECIMAL} else rechargeMoney + #{rechargeMoney,jdbcType=DECIMAL} end ),
      </if>
      <if test="rechargeFee != null">
        rechargeFee = (case when rechargeFee is null then #{rechargeFee,jdbcType=DECIMAL} else rechargeFee + #{rechargeFee,jdbcType=DECIMAL} end ),
      </if>
      <if test="alipayName != null">
        alipayName =  #{alipayName,jdbcType=VARCHAR},
      </if>
      <if test="alipayMobile != null">
        alipayMobile =  #{alipayMobile,jdbcType=VARCHAR},
      </if>
      <if test="rechargeCode != null">
        rechargeCode =  #{rechargeCode,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status =  #{status,jdbcType=INTEGER},
      </if>
      <if test="frontRemark != null">
        frontRemark =  #{frontRemark,jdbcType=VARCHAR},
      </if>
      <if test="backRemark != null">
        backRemark =  #{backRemark,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        createTime =  #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null">
        createUser =  #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        updateTime =  #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        updateUser =  #{updateUser,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
</mapper>