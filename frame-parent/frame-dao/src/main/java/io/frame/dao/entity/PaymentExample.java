package io.frame.dao.entity;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class PaymentExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table s_payment
     *
     * @mbggenerated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table s_payment
     *
     * @mbggenerated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table s_payment
     *
     * @mbggenerated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table s_payment
     *
     * @mbggenerated
     */
    public PaymentExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table s_payment
     *
     * @mbggenerated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table s_payment
     *
     * @mbggenerated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table s_payment
     *
     * @mbggenerated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table s_payment
     *
     * @mbggenerated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table s_payment
     *
     * @mbggenerated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table s_payment
     *
     * @mbggenerated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table s_payment
     *
     * @mbggenerated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table s_payment
     *
     * @mbggenerated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table s_payment
     *
     * @mbggenerated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table s_payment
     *
     * @mbggenerated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table s_payment
     *
     * @mbggenerated
     */
    public void setOrderByClauseIgnoreNull(String orderByClause) {
        String tmp = orderByClause.toLowerCase().replace("null", "").replace("asc", "").replace("desc", "").trim();
        if (orderByClause != null && tmp.length() > 0) {
            this.orderByClause = orderByClause;}
        }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table s_payment
     *
     * @mbggenerated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andPaymentIdIsNull() {
            addCriterion("paymentId is null");
            return (Criteria) this;
        }

        public Criteria andPaymentIdIsNotNull() {
            addCriterion("paymentId is not null");
            return (Criteria) this;
        }

        public Criteria andPaymentIdEqualTo(Long value) {
            addCriterion("paymentId =", value, "paymentId");
            return (Criteria) this;
        }

        public Criteria andPaymentIdNotEqualTo(Long value) {
            addCriterion("paymentId <>", value, "paymentId");
            return (Criteria) this;
        }

        public Criteria andPaymentIdGreaterThan(Long value) {
            addCriterion("paymentId >", value, "paymentId");
            return (Criteria) this;
        }

        public Criteria andPaymentIdGreaterThanOrEqualTo(Long value) {
            addCriterion("paymentId >=", value, "paymentId");
            return (Criteria) this;
        }

        public Criteria andPaymentIdLessThan(Long value) {
            addCriterion("paymentId <", value, "paymentId");
            return (Criteria) this;
        }

        public Criteria andPaymentIdLessThanOrEqualTo(Long value) {
            addCriterion("paymentId <=", value, "paymentId");
            return (Criteria) this;
        }

        public Criteria andPaymentIdIn(List<Long> values) {
            addCriterion("paymentId in", values, "paymentId");
            return (Criteria) this;
        }

        public Criteria andPaymentIdNotIn(List<Long> values) {
            addCriterion("paymentId not in", values, "paymentId");
            return (Criteria) this;
        }

        public Criteria andPaymentIdBetween(Long value1, Long value2) {
            addCriterion("paymentId between", value1, value2, "paymentId");
            return (Criteria) this;
        }

        public Criteria andPaymentIdNotBetween(Long value1, Long value2) {
            addCriterion("paymentId not between", value1, value2, "paymentId");
            return (Criteria) this;
        }

        public Criteria andPaymentKeyIsNull() {
            addCriterion("paymentKey is null");
            return (Criteria) this;
        }

        public Criteria andPaymentKeyIsNotNull() {
            addCriterion("paymentKey is not null");
            return (Criteria) this;
        }

        public Criteria andPaymentKeyEqualTo(String value) {
            addCriterion("paymentKey =", value, "paymentKey");
            return (Criteria) this;
        }

        public Criteria andPaymentKeyNotEqualTo(String value) {
            addCriterion("paymentKey <>", value, "paymentKey");
            return (Criteria) this;
        }

        public Criteria andPaymentKeyGreaterThan(String value) {
            addCriterion("paymentKey >", value, "paymentKey");
            return (Criteria) this;
        }

        public Criteria andPaymentKeyGreaterThanOrEqualTo(String value) {
            addCriterion("paymentKey >=", value, "paymentKey");
            return (Criteria) this;
        }

        public Criteria andPaymentKeyLessThan(String value) {
            addCriterion("paymentKey <", value, "paymentKey");
            return (Criteria) this;
        }

        public Criteria andPaymentKeyLessThanOrEqualTo(String value) {
            addCriterion("paymentKey <=", value, "paymentKey");
            return (Criteria) this;
        }

        public Criteria andPaymentKeyLike(String value) {
            addCriterion("paymentKey like", value, "paymentKey");
            return (Criteria) this;
        }

        public Criteria andPaymentKeyNotLike(String value) {
            addCriterion("paymentKey not like", value, "paymentKey");
            return (Criteria) this;
        }

        public Criteria andPaymentKeyIn(List<String> values) {
            addCriterion("paymentKey in", values, "paymentKey");
            return (Criteria) this;
        }

        public Criteria andPaymentKeyNotIn(List<String> values) {
            addCriterion("paymentKey not in", values, "paymentKey");
            return (Criteria) this;
        }

        public Criteria andPaymentKeyBetween(String value1, String value2) {
            addCriterion("paymentKey between", value1, value2, "paymentKey");
            return (Criteria) this;
        }

        public Criteria andPaymentKeyNotBetween(String value1, String value2) {
            addCriterion("paymentKey not between", value1, value2, "paymentKey");
            return (Criteria) this;
        }

        public Criteria andPaymentNameIsNull() {
            addCriterion("paymentName is null");
            return (Criteria) this;
        }

        public Criteria andPaymentNameIsNotNull() {
            addCriterion("paymentName is not null");
            return (Criteria) this;
        }

        public Criteria andPaymentNameEqualTo(String value) {
            addCriterion("paymentName =", value, "paymentName");
            return (Criteria) this;
        }

        public Criteria andPaymentNameNotEqualTo(String value) {
            addCriterion("paymentName <>", value, "paymentName");
            return (Criteria) this;
        }

        public Criteria andPaymentNameGreaterThan(String value) {
            addCriterion("paymentName >", value, "paymentName");
            return (Criteria) this;
        }

        public Criteria andPaymentNameGreaterThanOrEqualTo(String value) {
            addCriterion("paymentName >=", value, "paymentName");
            return (Criteria) this;
        }

        public Criteria andPaymentNameLessThan(String value) {
            addCriterion("paymentName <", value, "paymentName");
            return (Criteria) this;
        }

        public Criteria andPaymentNameLessThanOrEqualTo(String value) {
            addCriterion("paymentName <=", value, "paymentName");
            return (Criteria) this;
        }

        public Criteria andPaymentNameLike(String value) {
            addCriterion("paymentName like", value, "paymentName");
            return (Criteria) this;
        }

        public Criteria andPaymentNameNotLike(String value) {
            addCriterion("paymentName not like", value, "paymentName");
            return (Criteria) this;
        }

        public Criteria andPaymentNameIn(List<String> values) {
            addCriterion("paymentName in", values, "paymentName");
            return (Criteria) this;
        }

        public Criteria andPaymentNameNotIn(List<String> values) {
            addCriterion("paymentName not in", values, "paymentName");
            return (Criteria) this;
        }

        public Criteria andPaymentNameBetween(String value1, String value2) {
            addCriterion("paymentName between", value1, value2, "paymentName");
            return (Criteria) this;
        }

        public Criteria andPaymentNameNotBetween(String value1, String value2) {
            addCriterion("paymentName not between", value1, value2, "paymentName");
            return (Criteria) this;
        }

        public Criteria andStatusIsNull() {
            addCriterion("status is null");
            return (Criteria) this;
        }

        public Criteria andStatusIsNotNull() {
            addCriterion("status is not null");
            return (Criteria) this;
        }

        public Criteria andStatusEqualTo(Integer value) {
            addCriterion("status =", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusNotEqualTo(Integer value) {
            addCriterion("status <>", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusGreaterThan(Integer value) {
            addCriterion("status >", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusGreaterThanOrEqualTo(Integer value) {
            addCriterion("status >=", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusLessThan(Integer value) {
            addCriterion("status <", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusLessThanOrEqualTo(Integer value) {
            addCriterion("status <=", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusIn(List<Integer> values) {
            addCriterion("status in", values, "status");
            return (Criteria) this;
        }

        public Criteria andStatusNotIn(List<Integer> values) {
            addCriterion("status not in", values, "status");
            return (Criteria) this;
        }

        public Criteria andStatusBetween(Integer value1, Integer value2) {
            addCriterion("status between", value1, value2, "status");
            return (Criteria) this;
        }

        public Criteria andStatusNotBetween(Integer value1, Integer value2) {
            addCriterion("status not between", value1, value2, "status");
            return (Criteria) this;
        }

        public Criteria andSortIsNull() {
            addCriterion("sort is null");
            return (Criteria) this;
        }

        public Criteria andSortIsNotNull() {
            addCriterion("sort is not null");
            return (Criteria) this;
        }

        public Criteria andSortEqualTo(Integer value) {
            addCriterion("sort =", value, "sort");
            return (Criteria) this;
        }

        public Criteria andSortNotEqualTo(Integer value) {
            addCriterion("sort <>", value, "sort");
            return (Criteria) this;
        }

        public Criteria andSortGreaterThan(Integer value) {
            addCriterion("sort >", value, "sort");
            return (Criteria) this;
        }

        public Criteria andSortGreaterThanOrEqualTo(Integer value) {
            addCriterion("sort >=", value, "sort");
            return (Criteria) this;
        }

        public Criteria andSortLessThan(Integer value) {
            addCriterion("sort <", value, "sort");
            return (Criteria) this;
        }

        public Criteria andSortLessThanOrEqualTo(Integer value) {
            addCriterion("sort <=", value, "sort");
            return (Criteria) this;
        }

        public Criteria andSortIn(List<Integer> values) {
            addCriterion("sort in", values, "sort");
            return (Criteria) this;
        }

        public Criteria andSortNotIn(List<Integer> values) {
            addCriterion("sort not in", values, "sort");
            return (Criteria) this;
        }

        public Criteria andSortBetween(Integer value1, Integer value2) {
            addCriterion("sort between", value1, value2, "sort");
            return (Criteria) this;
        }

        public Criteria andSortNotBetween(Integer value1, Integer value2) {
            addCriterion("sort not between", value1, value2, "sort");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIsNull() {
            addCriterion("createTime is null");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIsNotNull() {
            addCriterion("createTime is not null");
            return (Criteria) this;
        }

        public Criteria andCreateTimeEqualTo(Date value) {
            addCriterion("createTime =", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotEqualTo(Date value) {
            addCriterion("createTime <>", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeGreaterThan(Date value) {
            addCriterion("createTime >", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeGreaterThanOrEqualTo(Date value) {
            addCriterion("createTime >=", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeLessThan(Date value) {
            addCriterion("createTime <", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeLessThanOrEqualTo(Date value) {
            addCriterion("createTime <=", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIn(List<Date> values) {
            addCriterion("createTime in", values, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotIn(List<Date> values) {
            addCriterion("createTime not in", values, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeBetween(Date value1, Date value2) {
            addCriterion("createTime between", value1, value2, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotBetween(Date value1, Date value2) {
            addCriterion("createTime not between", value1, value2, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateUserIsNull() {
            addCriterion("createUser is null");
            return (Criteria) this;
        }

        public Criteria andCreateUserIsNotNull() {
            addCriterion("createUser is not null");
            return (Criteria) this;
        }

        public Criteria andCreateUserEqualTo(String value) {
            addCriterion("createUser =", value, "createUser");
            return (Criteria) this;
        }

        public Criteria andCreateUserNotEqualTo(String value) {
            addCriterion("createUser <>", value, "createUser");
            return (Criteria) this;
        }

        public Criteria andCreateUserGreaterThan(String value) {
            addCriterion("createUser >", value, "createUser");
            return (Criteria) this;
        }

        public Criteria andCreateUserGreaterThanOrEqualTo(String value) {
            addCriterion("createUser >=", value, "createUser");
            return (Criteria) this;
        }

        public Criteria andCreateUserLessThan(String value) {
            addCriterion("createUser <", value, "createUser");
            return (Criteria) this;
        }

        public Criteria andCreateUserLessThanOrEqualTo(String value) {
            addCriterion("createUser <=", value, "createUser");
            return (Criteria) this;
        }

        public Criteria andCreateUserLike(String value) {
            addCriterion("createUser like", value, "createUser");
            return (Criteria) this;
        }

        public Criteria andCreateUserNotLike(String value) {
            addCriterion("createUser not like", value, "createUser");
            return (Criteria) this;
        }

        public Criteria andCreateUserIn(List<String> values) {
            addCriterion("createUser in", values, "createUser");
            return (Criteria) this;
        }

        public Criteria andCreateUserNotIn(List<String> values) {
            addCriterion("createUser not in", values, "createUser");
            return (Criteria) this;
        }

        public Criteria andCreateUserBetween(String value1, String value2) {
            addCriterion("createUser between", value1, value2, "createUser");
            return (Criteria) this;
        }

        public Criteria andCreateUserNotBetween(String value1, String value2) {
            addCriterion("createUser not between", value1, value2, "createUser");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeIsNull() {
            addCriterion("updateTime is null");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeIsNotNull() {
            addCriterion("updateTime is not null");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeEqualTo(Date value) {
            addCriterion("updateTime =", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeNotEqualTo(Date value) {
            addCriterion("updateTime <>", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeGreaterThan(Date value) {
            addCriterion("updateTime >", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeGreaterThanOrEqualTo(Date value) {
            addCriterion("updateTime >=", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeLessThan(Date value) {
            addCriterion("updateTime <", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeLessThanOrEqualTo(Date value) {
            addCriterion("updateTime <=", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeIn(List<Date> values) {
            addCriterion("updateTime in", values, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeNotIn(List<Date> values) {
            addCriterion("updateTime not in", values, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeBetween(Date value1, Date value2) {
            addCriterion("updateTime between", value1, value2, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeNotBetween(Date value1, Date value2) {
            addCriterion("updateTime not between", value1, value2, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateUserIsNull() {
            addCriterion("updateUser is null");
            return (Criteria) this;
        }

        public Criteria andUpdateUserIsNotNull() {
            addCriterion("updateUser is not null");
            return (Criteria) this;
        }

        public Criteria andUpdateUserEqualTo(String value) {
            addCriterion("updateUser =", value, "updateUser");
            return (Criteria) this;
        }

        public Criteria andUpdateUserNotEqualTo(String value) {
            addCriterion("updateUser <>", value, "updateUser");
            return (Criteria) this;
        }

        public Criteria andUpdateUserGreaterThan(String value) {
            addCriterion("updateUser >", value, "updateUser");
            return (Criteria) this;
        }

        public Criteria andUpdateUserGreaterThanOrEqualTo(String value) {
            addCriterion("updateUser >=", value, "updateUser");
            return (Criteria) this;
        }

        public Criteria andUpdateUserLessThan(String value) {
            addCriterion("updateUser <", value, "updateUser");
            return (Criteria) this;
        }

        public Criteria andUpdateUserLessThanOrEqualTo(String value) {
            addCriterion("updateUser <=", value, "updateUser");
            return (Criteria) this;
        }

        public Criteria andUpdateUserLike(String value) {
            addCriterion("updateUser like", value, "updateUser");
            return (Criteria) this;
        }

        public Criteria andUpdateUserNotLike(String value) {
            addCriterion("updateUser not like", value, "updateUser");
            return (Criteria) this;
        }

        public Criteria andUpdateUserIn(List<String> values) {
            addCriterion("updateUser in", values, "updateUser");
            return (Criteria) this;
        }

        public Criteria andUpdateUserNotIn(List<String> values) {
            addCriterion("updateUser not in", values, "updateUser");
            return (Criteria) this;
        }

        public Criteria andUpdateUserBetween(String value1, String value2) {
            addCriterion("updateUser between", value1, value2, "updateUser");
            return (Criteria) this;
        }

        public Criteria andUpdateUserNotBetween(String value1, String value2) {
            addCriterion("updateUser not between", value1, value2, "updateUser");
            return (Criteria) this;
        }

        public Criteria andPaymentKeyLikeInsensitive(String value) {
            addCriterion("upper(paymentKey) like", value.toUpperCase(), "paymentKey");
            return (Criteria) this;
        }

        public Criteria andPaymentNameLikeInsensitive(String value) {
            addCriterion("upper(paymentName) like", value.toUpperCase(), "paymentName");
            return (Criteria) this;
        }

        public Criteria andCreateUserLikeInsensitive(String value) {
            addCriterion("upper(createUser) like", value.toUpperCase(), "createUser");
            return (Criteria) this;
        }

        public Criteria andUpdateUserLikeInsensitive(String value) {
            addCriterion("upper(updateUser) like", value.toUpperCase(), "updateUser");
            return (Criteria) this;
        }

        protected void addCriterionIgnoreNull(String condition, Object value, String property) {
            if (value != null) {
                if (value instanceof String) {
                    if (condition.toLowerCase().endsWith("like")) {
                        if (((String) value).replaceAll("%", "").length() > 0) {
                            criteria.add(new Criterion(condition, value));
                        }
                    } else if (((String) value).length() > 0) {
                        criteria.add(new Criterion(condition, value));
                    }
                } else if (value instanceof List<?>) {
                    if (((List<?>) value).size() > 0) {
                        criteria.add(new Criterion(condition, value));
                    }
                } else {
                    criteria.add(new Criterion(condition, value));
                }
            }
        }

        public Criteria andPaymentIdEqualToIgnoreNull(Long value) {
            addCriterionIgnoreNull("paymentId =", value, "paymentId");
            return (Criteria) this;
        }

        public Criteria andPaymentIdNotEqualToIgnoreNull(Long value) {
            addCriterionIgnoreNull("paymentId <>", value, "paymentId");
            return (Criteria) this;
        }

        public Criteria andPaymentIdGreaterThanIgnoreNull(Long value) {
            addCriterionIgnoreNull("paymentId >", value, "paymentId");
            return (Criteria) this;
        }

        public Criteria andPaymentIdGreaterThanOrEqualToIgnoreNull(Long value) {
            addCriterionIgnoreNull("paymentId >=", value, "paymentId");
            return (Criteria) this;
        }

        public Criteria andPaymentIdLessThanIgnoreNull(Long value) {
            addCriterionIgnoreNull("paymentId <", value, "paymentId");
            return (Criteria) this;
        }

        public Criteria andPaymentIdLessThanOrEqualToIgnoreNull(Long value) {
            addCriterionIgnoreNull("paymentId <=", value, "paymentId");
            return (Criteria) this;
        }

        public Criteria andPaymentIdInIgnoreNull(List<Long> value) {
            addCriterionIgnoreNull("paymentId in", value, "paymentId");
            return (Criteria) this;
        }

        public Criteria andPaymentIdNotInIgnoreNull(List<Long> value) {
            addCriterionIgnoreNull("paymentId not in", value, "paymentId");
            return (Criteria) this;
        }

        public Criteria andPaymentKeyEqualToIgnoreNull(String value) {
            addCriterionIgnoreNull("paymentKey =", value, "paymentKey");
            return (Criteria) this;
        }

        public Criteria andPaymentKeyNotEqualToIgnoreNull(String value) {
            addCriterionIgnoreNull("paymentKey <>", value, "paymentKey");
            return (Criteria) this;
        }

        public Criteria andPaymentKeyGreaterThanIgnoreNull(String value) {
            addCriterionIgnoreNull("paymentKey >", value, "paymentKey");
            return (Criteria) this;
        }

        public Criteria andPaymentKeyGreaterThanOrEqualToIgnoreNull(String value) {
            addCriterionIgnoreNull("paymentKey >=", value, "paymentKey");
            return (Criteria) this;
        }

        public Criteria andPaymentKeyLessThanIgnoreNull(String value) {
            addCriterionIgnoreNull("paymentKey <", value, "paymentKey");
            return (Criteria) this;
        }

        public Criteria andPaymentKeyLessThanOrEqualToIgnoreNull(String value) {
            addCriterionIgnoreNull("paymentKey <=", value, "paymentKey");
            return (Criteria) this;
        }

        public Criteria andPaymentKeyLikeIgnoreNull(String value) {
            addCriterionIgnoreNull("paymentKey like", value, "paymentKey");
            return (Criteria) this;
        }

        public Criteria andPaymentKeyNotLikeIgnoreNull(String value) {
            addCriterionIgnoreNull("paymentKey not like", value, "paymentKey");
            return (Criteria) this;
        }

        public Criteria andPaymentKeyInIgnoreNull(List<String> value) {
            addCriterionIgnoreNull("paymentKey in", value, "paymentKey");
            return (Criteria) this;
        }

        public Criteria andPaymentKeyNotInIgnoreNull(List<String> value) {
            addCriterionIgnoreNull("paymentKey not in", value, "paymentKey");
            return (Criteria) this;
        }

        public Criteria andPaymentNameEqualToIgnoreNull(String value) {
            addCriterionIgnoreNull("paymentName =", value, "paymentName");
            return (Criteria) this;
        }

        public Criteria andPaymentNameNotEqualToIgnoreNull(String value) {
            addCriterionIgnoreNull("paymentName <>", value, "paymentName");
            return (Criteria) this;
        }

        public Criteria andPaymentNameGreaterThanIgnoreNull(String value) {
            addCriterionIgnoreNull("paymentName >", value, "paymentName");
            return (Criteria) this;
        }

        public Criteria andPaymentNameGreaterThanOrEqualToIgnoreNull(String value) {
            addCriterionIgnoreNull("paymentName >=", value, "paymentName");
            return (Criteria) this;
        }

        public Criteria andPaymentNameLessThanIgnoreNull(String value) {
            addCriterionIgnoreNull("paymentName <", value, "paymentName");
            return (Criteria) this;
        }

        public Criteria andPaymentNameLessThanOrEqualToIgnoreNull(String value) {
            addCriterionIgnoreNull("paymentName <=", value, "paymentName");
            return (Criteria) this;
        }

        public Criteria andPaymentNameLikeIgnoreNull(String value) {
            addCriterionIgnoreNull("paymentName like", value, "paymentName");
            return (Criteria) this;
        }

        public Criteria andPaymentNameNotLikeIgnoreNull(String value) {
            addCriterionIgnoreNull("paymentName not like", value, "paymentName");
            return (Criteria) this;
        }

        public Criteria andPaymentNameInIgnoreNull(List<String> value) {
            addCriterionIgnoreNull("paymentName in", value, "paymentName");
            return (Criteria) this;
        }

        public Criteria andPaymentNameNotInIgnoreNull(List<String> value) {
            addCriterionIgnoreNull("paymentName not in", value, "paymentName");
            return (Criteria) this;
        }

        public Criteria andStatusEqualToIgnoreNull(Integer value) {
            addCriterionIgnoreNull("status =", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusNotEqualToIgnoreNull(Integer value) {
            addCriterionIgnoreNull("status <>", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusGreaterThanIgnoreNull(Integer value) {
            addCriterionIgnoreNull("status >", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusGreaterThanOrEqualToIgnoreNull(Integer value) {
            addCriterionIgnoreNull("status >=", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusLessThanIgnoreNull(Integer value) {
            addCriterionIgnoreNull("status <", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusLessThanOrEqualToIgnoreNull(Integer value) {
            addCriterionIgnoreNull("status <=", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusInIgnoreNull(List<Integer> value) {
            addCriterionIgnoreNull("status in", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusNotInIgnoreNull(List<Integer> value) {
            addCriterionIgnoreNull("status not in", value, "status");
            return (Criteria) this;
        }

        public Criteria andSortEqualToIgnoreNull(Integer value) {
            addCriterionIgnoreNull("sort =", value, "sort");
            return (Criteria) this;
        }

        public Criteria andSortNotEqualToIgnoreNull(Integer value) {
            addCriterionIgnoreNull("sort <>", value, "sort");
            return (Criteria) this;
        }

        public Criteria andSortGreaterThanIgnoreNull(Integer value) {
            addCriterionIgnoreNull("sort >", value, "sort");
            return (Criteria) this;
        }

        public Criteria andSortGreaterThanOrEqualToIgnoreNull(Integer value) {
            addCriterionIgnoreNull("sort >=", value, "sort");
            return (Criteria) this;
        }

        public Criteria andSortLessThanIgnoreNull(Integer value) {
            addCriterionIgnoreNull("sort <", value, "sort");
            return (Criteria) this;
        }

        public Criteria andSortLessThanOrEqualToIgnoreNull(Integer value) {
            addCriterionIgnoreNull("sort <=", value, "sort");
            return (Criteria) this;
        }

        public Criteria andSortInIgnoreNull(List<Integer> value) {
            addCriterionIgnoreNull("sort in", value, "sort");
            return (Criteria) this;
        }

        public Criteria andSortNotInIgnoreNull(List<Integer> value) {
            addCriterionIgnoreNull("sort not in", value, "sort");
            return (Criteria) this;
        }

        public Criteria andCreateTimeEqualToIgnoreNull(Date value) {
            addCriterionIgnoreNull("createTime =", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotEqualToIgnoreNull(Date value) {
            addCriterionIgnoreNull("createTime <>", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeGreaterThanIgnoreNull(Date value) {
            addCriterionIgnoreNull("createTime >", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeGreaterThanOrEqualToIgnoreNull(Date value) {
            addCriterionIgnoreNull("createTime >=", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeLessThanIgnoreNull(Date value) {
            addCriterionIgnoreNull("createTime <", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeLessThanOrEqualToIgnoreNull(Date value) {
            addCriterionIgnoreNull("createTime <=", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeInIgnoreNull(List<Date> value) {
            addCriterionIgnoreNull("createTime in", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotInIgnoreNull(List<Date> value) {
            addCriterionIgnoreNull("createTime not in", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateUserEqualToIgnoreNull(String value) {
            addCriterionIgnoreNull("createUser =", value, "createUser");
            return (Criteria) this;
        }

        public Criteria andCreateUserNotEqualToIgnoreNull(String value) {
            addCriterionIgnoreNull("createUser <>", value, "createUser");
            return (Criteria) this;
        }

        public Criteria andCreateUserGreaterThanIgnoreNull(String value) {
            addCriterionIgnoreNull("createUser >", value, "createUser");
            return (Criteria) this;
        }

        public Criteria andCreateUserGreaterThanOrEqualToIgnoreNull(String value) {
            addCriterionIgnoreNull("createUser >=", value, "createUser");
            return (Criteria) this;
        }

        public Criteria andCreateUserLessThanIgnoreNull(String value) {
            addCriterionIgnoreNull("createUser <", value, "createUser");
            return (Criteria) this;
        }

        public Criteria andCreateUserLessThanOrEqualToIgnoreNull(String value) {
            addCriterionIgnoreNull("createUser <=", value, "createUser");
            return (Criteria) this;
        }

        public Criteria andCreateUserLikeIgnoreNull(String value) {
            addCriterionIgnoreNull("createUser like", value, "createUser");
            return (Criteria) this;
        }

        public Criteria andCreateUserNotLikeIgnoreNull(String value) {
            addCriterionIgnoreNull("createUser not like", value, "createUser");
            return (Criteria) this;
        }

        public Criteria andCreateUserInIgnoreNull(List<String> value) {
            addCriterionIgnoreNull("createUser in", value, "createUser");
            return (Criteria) this;
        }

        public Criteria andCreateUserNotInIgnoreNull(List<String> value) {
            addCriterionIgnoreNull("createUser not in", value, "createUser");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeEqualToIgnoreNull(Date value) {
            addCriterionIgnoreNull("updateTime =", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeNotEqualToIgnoreNull(Date value) {
            addCriterionIgnoreNull("updateTime <>", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeGreaterThanIgnoreNull(Date value) {
            addCriterionIgnoreNull("updateTime >", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeGreaterThanOrEqualToIgnoreNull(Date value) {
            addCriterionIgnoreNull("updateTime >=", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeLessThanIgnoreNull(Date value) {
            addCriterionIgnoreNull("updateTime <", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeLessThanOrEqualToIgnoreNull(Date value) {
            addCriterionIgnoreNull("updateTime <=", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeInIgnoreNull(List<Date> value) {
            addCriterionIgnoreNull("updateTime in", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeNotInIgnoreNull(List<Date> value) {
            addCriterionIgnoreNull("updateTime not in", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateUserEqualToIgnoreNull(String value) {
            addCriterionIgnoreNull("updateUser =", value, "updateUser");
            return (Criteria) this;
        }

        public Criteria andUpdateUserNotEqualToIgnoreNull(String value) {
            addCriterionIgnoreNull("updateUser <>", value, "updateUser");
            return (Criteria) this;
        }

        public Criteria andUpdateUserGreaterThanIgnoreNull(String value) {
            addCriterionIgnoreNull("updateUser >", value, "updateUser");
            return (Criteria) this;
        }

        public Criteria andUpdateUserGreaterThanOrEqualToIgnoreNull(String value) {
            addCriterionIgnoreNull("updateUser >=", value, "updateUser");
            return (Criteria) this;
        }

        public Criteria andUpdateUserLessThanIgnoreNull(String value) {
            addCriterionIgnoreNull("updateUser <", value, "updateUser");
            return (Criteria) this;
        }

        public Criteria andUpdateUserLessThanOrEqualToIgnoreNull(String value) {
            addCriterionIgnoreNull("updateUser <=", value, "updateUser");
            return (Criteria) this;
        }

        public Criteria andUpdateUserLikeIgnoreNull(String value) {
            addCriterionIgnoreNull("updateUser like", value, "updateUser");
            return (Criteria) this;
        }

        public Criteria andUpdateUserNotLikeIgnoreNull(String value) {
            addCriterionIgnoreNull("updateUser not like", value, "updateUser");
            return (Criteria) this;
        }

        public Criteria andUpdateUserInIgnoreNull(List<String> value) {
            addCriterionIgnoreNull("updateUser in", value, "updateUser");
            return (Criteria) this;
        }

        public Criteria andUpdateUserNotInIgnoreNull(List<String> value) {
            addCriterionIgnoreNull("updateUser not in", value, "updateUser");
            return (Criteria) this;
        }

        public Criteria andPaymentKeyLikeInsensitiveIgnoreNull(String value) {
            addCriterionIgnoreNull("upper(paymentKey) like", value.toUpperCase(), "paymentKey");
            return (Criteria) this;
        }

        public Criteria andPaymentNameLikeInsensitiveIgnoreNull(String value) {
            addCriterionIgnoreNull("upper(paymentName) like", value.toUpperCase(), "paymentName");
            return (Criteria) this;
        }

        public Criteria andCreateUserLikeInsensitiveIgnoreNull(String value) {
            addCriterionIgnoreNull("upper(createUser) like", value.toUpperCase(), "createUser");
            return (Criteria) this;
        }

        public Criteria andUpdateUserLikeInsensitiveIgnoreNull(String value) {
            addCriterionIgnoreNull("upper(updateUser) like", value.toUpperCase(), "updateUser");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table s_payment
     *
     * @mbggenerated
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }

        public Criteria andPaymentIdLikeInsensitive(String value) {
            addCriterion("upper(paymentId) like", value.toUpperCase(), "paymentId");
            return this;
        }

        public Criteria andPaymentKeyLikeInsensitive(String value) {
            addCriterion("upper(paymentKey) like", value.toUpperCase(), "paymentKey");
            return this;
        }

        public Criteria andPaymentNameLikeInsensitive(String value) {
            addCriterion("upper(paymentName) like", value.toUpperCase(), "paymentName");
            return this;
        }

        public Criteria andStatusLikeInsensitive(String value) {
            addCriterion("upper(status) like", value.toUpperCase(), "status");
            return this;
        }

        public Criteria andSortLikeInsensitive(String value) {
            addCriterion("upper(sort) like", value.toUpperCase(), "sort");
            return this;
        }

        public Criteria andCreateTimeLikeInsensitive(String value) {
            addCriterion("upper(createTime) like", value.toUpperCase(), "createTime");
            return this;
        }

        public Criteria andCreateUserLikeInsensitive(String value) {
            addCriterion("upper(createUser) like", value.toUpperCase(), "createUser");
            return this;
        }

        public Criteria andUpdateTimeLikeInsensitive(String value) {
            addCriterion("upper(updateTime) like", value.toUpperCase(), "updateTime");
            return this;
        }

        public Criteria andUpdateUserLikeInsensitive(String value) {
            addCriterion("upper(updateUser) like", value.toUpperCase(), "updateUser");
            return this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table s_payment
     *
     * @mbggenerated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}