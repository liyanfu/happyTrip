package io.frame.dao.entity;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class RecommendExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table u_recommend
     *
     * @mbggenerated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table u_recommend
     *
     * @mbggenerated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table u_recommend
     *
     * @mbggenerated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table u_recommend
     *
     * @mbggenerated
     */
    public RecommendExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table u_recommend
     *
     * @mbggenerated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table u_recommend
     *
     * @mbggenerated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table u_recommend
     *
     * @mbggenerated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table u_recommend
     *
     * @mbggenerated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table u_recommend
     *
     * @mbggenerated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table u_recommend
     *
     * @mbggenerated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table u_recommend
     *
     * @mbggenerated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table u_recommend
     *
     * @mbggenerated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table u_recommend
     *
     * @mbggenerated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table u_recommend
     *
     * @mbggenerated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table u_recommend
     *
     * @mbggenerated
     */
    public void setOrderByClauseIgnoreNull(String orderByClause) {
        String tmp = orderByClause.toLowerCase().replace("null", "").replace("asc", "").replace("desc", "").trim();
        if (orderByClause != null && tmp.length() > 0) {
            this.orderByClause = orderByClause;}
        }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table u_recommend
     *
     * @mbggenerated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        protected void addCriterionForJDBCDate(String condition, Date value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value.getTime()), property);
        }

        protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                dateList.add(new java.sql.Date(iter.next().getTime()));
            }
            addCriterion(condition, dateList, property);
        }

        protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
        }

        public Criteria andRecommendIdIsNull() {
            addCriterion("recommendId is null");
            return (Criteria) this;
        }

        public Criteria andRecommendIdIsNotNull() {
            addCriterion("recommendId is not null");
            return (Criteria) this;
        }

        public Criteria andRecommendIdEqualTo(Long value) {
            addCriterion("recommendId =", value, "recommendId");
            return (Criteria) this;
        }

        public Criteria andRecommendIdNotEqualTo(Long value) {
            addCriterion("recommendId <>", value, "recommendId");
            return (Criteria) this;
        }

        public Criteria andRecommendIdGreaterThan(Long value) {
            addCriterion("recommendId >", value, "recommendId");
            return (Criteria) this;
        }

        public Criteria andRecommendIdGreaterThanOrEqualTo(Long value) {
            addCriterion("recommendId >=", value, "recommendId");
            return (Criteria) this;
        }

        public Criteria andRecommendIdLessThan(Long value) {
            addCriterion("recommendId <", value, "recommendId");
            return (Criteria) this;
        }

        public Criteria andRecommendIdLessThanOrEqualTo(Long value) {
            addCriterion("recommendId <=", value, "recommendId");
            return (Criteria) this;
        }

        public Criteria andRecommendIdIn(List<Long> values) {
            addCriterion("recommendId in", values, "recommendId");
            return (Criteria) this;
        }

        public Criteria andRecommendIdNotIn(List<Long> values) {
            addCriterion("recommendId not in", values, "recommendId");
            return (Criteria) this;
        }

        public Criteria andRecommendIdBetween(Long value1, Long value2) {
            addCriterion("recommendId between", value1, value2, "recommendId");
            return (Criteria) this;
        }

        public Criteria andRecommendIdNotBetween(Long value1, Long value2) {
            addCriterion("recommendId not between", value1, value2, "recommendId");
            return (Criteria) this;
        }

        public Criteria andUserIdIsNull() {
            addCriterion("userId is null");
            return (Criteria) this;
        }

        public Criteria andUserIdIsNotNull() {
            addCriterion("userId is not null");
            return (Criteria) this;
        }

        public Criteria andUserIdEqualTo(Long value) {
            addCriterion("userId =", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotEqualTo(Long value) {
            addCriterion("userId <>", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdGreaterThan(Long value) {
            addCriterion("userId >", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdGreaterThanOrEqualTo(Long value) {
            addCriterion("userId >=", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdLessThan(Long value) {
            addCriterion("userId <", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdLessThanOrEqualTo(Long value) {
            addCriterion("userId <=", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdIn(List<Long> values) {
            addCriterion("userId in", values, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotIn(List<Long> values) {
            addCriterion("userId not in", values, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdBetween(Long value1, Long value2) {
            addCriterion("userId between", value1, value2, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotBetween(Long value1, Long value2) {
            addCriterion("userId not between", value1, value2, "userId");
            return (Criteria) this;
        }

        public Criteria andUserNameIsNull() {
            addCriterion("userName is null");
            return (Criteria) this;
        }

        public Criteria andUserNameIsNotNull() {
            addCriterion("userName is not null");
            return (Criteria) this;
        }

        public Criteria andUserNameEqualTo(String value) {
            addCriterion("userName =", value, "userName");
            return (Criteria) this;
        }

        public Criteria andUserNameNotEqualTo(String value) {
            addCriterion("userName <>", value, "userName");
            return (Criteria) this;
        }

        public Criteria andUserNameGreaterThan(String value) {
            addCriterion("userName >", value, "userName");
            return (Criteria) this;
        }

        public Criteria andUserNameGreaterThanOrEqualTo(String value) {
            addCriterion("userName >=", value, "userName");
            return (Criteria) this;
        }

        public Criteria andUserNameLessThan(String value) {
            addCriterion("userName <", value, "userName");
            return (Criteria) this;
        }

        public Criteria andUserNameLessThanOrEqualTo(String value) {
            addCriterion("userName <=", value, "userName");
            return (Criteria) this;
        }

        public Criteria andUserNameLike(String value) {
            addCriterion("userName like", value, "userName");
            return (Criteria) this;
        }

        public Criteria andUserNameNotLike(String value) {
            addCriterion("userName not like", value, "userName");
            return (Criteria) this;
        }

        public Criteria andUserNameIn(List<String> values) {
            addCriterion("userName in", values, "userName");
            return (Criteria) this;
        }

        public Criteria andUserNameNotIn(List<String> values) {
            addCriterion("userName not in", values, "userName");
            return (Criteria) this;
        }

        public Criteria andUserNameBetween(String value1, String value2) {
            addCriterion("userName between", value1, value2, "userName");
            return (Criteria) this;
        }

        public Criteria andUserNameNotBetween(String value1, String value2) {
            addCriterion("userName not between", value1, value2, "userName");
            return (Criteria) this;
        }

        public Criteria andParentIdIsNull() {
            addCriterion("parentId is null");
            return (Criteria) this;
        }

        public Criteria andParentIdIsNotNull() {
            addCriterion("parentId is not null");
            return (Criteria) this;
        }

        public Criteria andParentIdEqualTo(Long value) {
            addCriterion("parentId =", value, "parentId");
            return (Criteria) this;
        }

        public Criteria andParentIdNotEqualTo(Long value) {
            addCriterion("parentId <>", value, "parentId");
            return (Criteria) this;
        }

        public Criteria andParentIdGreaterThan(Long value) {
            addCriterion("parentId >", value, "parentId");
            return (Criteria) this;
        }

        public Criteria andParentIdGreaterThanOrEqualTo(Long value) {
            addCriterion("parentId >=", value, "parentId");
            return (Criteria) this;
        }

        public Criteria andParentIdLessThan(Long value) {
            addCriterion("parentId <", value, "parentId");
            return (Criteria) this;
        }

        public Criteria andParentIdLessThanOrEqualTo(Long value) {
            addCriterion("parentId <=", value, "parentId");
            return (Criteria) this;
        }

        public Criteria andParentIdIn(List<Long> values) {
            addCriterion("parentId in", values, "parentId");
            return (Criteria) this;
        }

        public Criteria andParentIdNotIn(List<Long> values) {
            addCriterion("parentId not in", values, "parentId");
            return (Criteria) this;
        }

        public Criteria andParentIdBetween(Long value1, Long value2) {
            addCriterion("parentId between", value1, value2, "parentId");
            return (Criteria) this;
        }

        public Criteria andParentIdNotBetween(Long value1, Long value2) {
            addCriterion("parentId not between", value1, value2, "parentId");
            return (Criteria) this;
        }

        public Criteria andGroupUserIdsIsNull() {
            addCriterion("groupUserIds is null");
            return (Criteria) this;
        }

        public Criteria andGroupUserIdsIsNotNull() {
            addCriterion("groupUserIds is not null");
            return (Criteria) this;
        }

        public Criteria andGroupUserIdsEqualTo(String value) {
            addCriterion("groupUserIds =", value, "groupUserIds");
            return (Criteria) this;
        }

        public Criteria andGroupUserIdsNotEqualTo(String value) {
            addCriterion("groupUserIds <>", value, "groupUserIds");
            return (Criteria) this;
        }

        public Criteria andGroupUserIdsGreaterThan(String value) {
            addCriterion("groupUserIds >", value, "groupUserIds");
            return (Criteria) this;
        }

        public Criteria andGroupUserIdsGreaterThanOrEqualTo(String value) {
            addCriterion("groupUserIds >=", value, "groupUserIds");
            return (Criteria) this;
        }

        public Criteria andGroupUserIdsLessThan(String value) {
            addCriterion("groupUserIds <", value, "groupUserIds");
            return (Criteria) this;
        }

        public Criteria andGroupUserIdsLessThanOrEqualTo(String value) {
            addCriterion("groupUserIds <=", value, "groupUserIds");
            return (Criteria) this;
        }

        public Criteria andGroupUserIdsLike(String value) {
            addCriterion("groupUserIds like", value, "groupUserIds");
            return (Criteria) this;
        }

        public Criteria andGroupUserIdsNotLike(String value) {
            addCriterion("groupUserIds not like", value, "groupUserIds");
            return (Criteria) this;
        }

        public Criteria andGroupUserIdsIn(List<String> values) {
            addCriterion("groupUserIds in", values, "groupUserIds");
            return (Criteria) this;
        }

        public Criteria andGroupUserIdsNotIn(List<String> values) {
            addCriterion("groupUserIds not in", values, "groupUserIds");
            return (Criteria) this;
        }

        public Criteria andGroupUserIdsBetween(String value1, String value2) {
            addCriterion("groupUserIds between", value1, value2, "groupUserIds");
            return (Criteria) this;
        }

        public Criteria andGroupUserIdsNotBetween(String value1, String value2) {
            addCriterion("groupUserIds not between", value1, value2, "groupUserIds");
            return (Criteria) this;
        }

        public Criteria andRecommendNumberIsNull() {
            addCriterion("recommendNumber is null");
            return (Criteria) this;
        }

        public Criteria andRecommendNumberIsNotNull() {
            addCriterion("recommendNumber is not null");
            return (Criteria) this;
        }

        public Criteria andRecommendNumberEqualTo(Integer value) {
            addCriterion("recommendNumber =", value, "recommendNumber");
            return (Criteria) this;
        }

        public Criteria andRecommendNumberNotEqualTo(Integer value) {
            addCriterion("recommendNumber <>", value, "recommendNumber");
            return (Criteria) this;
        }

        public Criteria andRecommendNumberGreaterThan(Integer value) {
            addCriterion("recommendNumber >", value, "recommendNumber");
            return (Criteria) this;
        }

        public Criteria andRecommendNumberGreaterThanOrEqualTo(Integer value) {
            addCriterion("recommendNumber >=", value, "recommendNumber");
            return (Criteria) this;
        }

        public Criteria andRecommendNumberLessThan(Integer value) {
            addCriterion("recommendNumber <", value, "recommendNumber");
            return (Criteria) this;
        }

        public Criteria andRecommendNumberLessThanOrEqualTo(Integer value) {
            addCriterion("recommendNumber <=", value, "recommendNumber");
            return (Criteria) this;
        }

        public Criteria andRecommendNumberIn(List<Integer> values) {
            addCriterion("recommendNumber in", values, "recommendNumber");
            return (Criteria) this;
        }

        public Criteria andRecommendNumberNotIn(List<Integer> values) {
            addCriterion("recommendNumber not in", values, "recommendNumber");
            return (Criteria) this;
        }

        public Criteria andRecommendNumberBetween(Integer value1, Integer value2) {
            addCriterion("recommendNumber between", value1, value2, "recommendNumber");
            return (Criteria) this;
        }

        public Criteria andRecommendNumberNotBetween(Integer value1, Integer value2) {
            addCriterion("recommendNumber not between", value1, value2, "recommendNumber");
            return (Criteria) this;
        }

        public Criteria andTeamAchievementIsNull() {
            addCriterion("teamAchievement is null");
            return (Criteria) this;
        }

        public Criteria andTeamAchievementIsNotNull() {
            addCriterion("teamAchievement is not null");
            return (Criteria) this;
        }

        public Criteria andTeamAchievementEqualTo(BigDecimal value) {
            addCriterion("teamAchievement =", value, "teamAchievement");
            return (Criteria) this;
        }

        public Criteria andTeamAchievementNotEqualTo(BigDecimal value) {
            addCriterion("teamAchievement <>", value, "teamAchievement");
            return (Criteria) this;
        }

        public Criteria andTeamAchievementGreaterThan(BigDecimal value) {
            addCriterion("teamAchievement >", value, "teamAchievement");
            return (Criteria) this;
        }

        public Criteria andTeamAchievementGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("teamAchievement >=", value, "teamAchievement");
            return (Criteria) this;
        }

        public Criteria andTeamAchievementLessThan(BigDecimal value) {
            addCriterion("teamAchievement <", value, "teamAchievement");
            return (Criteria) this;
        }

        public Criteria andTeamAchievementLessThanOrEqualTo(BigDecimal value) {
            addCriterion("teamAchievement <=", value, "teamAchievement");
            return (Criteria) this;
        }

        public Criteria andTeamAchievementIn(List<BigDecimal> values) {
            addCriterion("teamAchievement in", values, "teamAchievement");
            return (Criteria) this;
        }

        public Criteria andTeamAchievementNotIn(List<BigDecimal> values) {
            addCriterion("teamAchievement not in", values, "teamAchievement");
            return (Criteria) this;
        }

        public Criteria andTeamAchievementBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("teamAchievement between", value1, value2, "teamAchievement");
            return (Criteria) this;
        }

        public Criteria andTeamAchievementNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("teamAchievement not between", value1, value2, "teamAchievement");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIsNull() {
            addCriterion("createTime is null");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIsNotNull() {
            addCriterion("createTime is not null");
            return (Criteria) this;
        }

        public Criteria andCreateTimeEqualTo(Date value) {
            addCriterionForJDBCDate("createTime =", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotEqualTo(Date value) {
            addCriterionForJDBCDate("createTime <>", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeGreaterThan(Date value) {
            addCriterionForJDBCDate("createTime >", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("createTime >=", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeLessThan(Date value) {
            addCriterionForJDBCDate("createTime <", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("createTime <=", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIn(List<Date> values) {
            addCriterionForJDBCDate("createTime in", values, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotIn(List<Date> values) {
            addCriterionForJDBCDate("createTime not in", values, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("createTime between", value1, value2, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("createTime not between", value1, value2, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateUserIsNull() {
            addCriterion("createUser is null");
            return (Criteria) this;
        }

        public Criteria andCreateUserIsNotNull() {
            addCriterion("createUser is not null");
            return (Criteria) this;
        }

        public Criteria andCreateUserEqualTo(String value) {
            addCriterion("createUser =", value, "createUser");
            return (Criteria) this;
        }

        public Criteria andCreateUserNotEqualTo(String value) {
            addCriterion("createUser <>", value, "createUser");
            return (Criteria) this;
        }

        public Criteria andCreateUserGreaterThan(String value) {
            addCriterion("createUser >", value, "createUser");
            return (Criteria) this;
        }

        public Criteria andCreateUserGreaterThanOrEqualTo(String value) {
            addCriterion("createUser >=", value, "createUser");
            return (Criteria) this;
        }

        public Criteria andCreateUserLessThan(String value) {
            addCriterion("createUser <", value, "createUser");
            return (Criteria) this;
        }

        public Criteria andCreateUserLessThanOrEqualTo(String value) {
            addCriterion("createUser <=", value, "createUser");
            return (Criteria) this;
        }

        public Criteria andCreateUserLike(String value) {
            addCriterion("createUser like", value, "createUser");
            return (Criteria) this;
        }

        public Criteria andCreateUserNotLike(String value) {
            addCriterion("createUser not like", value, "createUser");
            return (Criteria) this;
        }

        public Criteria andCreateUserIn(List<String> values) {
            addCriterion("createUser in", values, "createUser");
            return (Criteria) this;
        }

        public Criteria andCreateUserNotIn(List<String> values) {
            addCriterion("createUser not in", values, "createUser");
            return (Criteria) this;
        }

        public Criteria andCreateUserBetween(String value1, String value2) {
            addCriterion("createUser between", value1, value2, "createUser");
            return (Criteria) this;
        }

        public Criteria andCreateUserNotBetween(String value1, String value2) {
            addCriterion("createUser not between", value1, value2, "createUser");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeIsNull() {
            addCriterion("updateTime is null");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeIsNotNull() {
            addCriterion("updateTime is not null");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeEqualTo(Date value) {
            addCriterion("updateTime =", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeNotEqualTo(Date value) {
            addCriterion("updateTime <>", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeGreaterThan(Date value) {
            addCriterion("updateTime >", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeGreaterThanOrEqualTo(Date value) {
            addCriterion("updateTime >=", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeLessThan(Date value) {
            addCriterion("updateTime <", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeLessThanOrEqualTo(Date value) {
            addCriterion("updateTime <=", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeIn(List<Date> values) {
            addCriterion("updateTime in", values, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeNotIn(List<Date> values) {
            addCriterion("updateTime not in", values, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeBetween(Date value1, Date value2) {
            addCriterion("updateTime between", value1, value2, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeNotBetween(Date value1, Date value2) {
            addCriterion("updateTime not between", value1, value2, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateUserIsNull() {
            addCriterion("updateUser is null");
            return (Criteria) this;
        }

        public Criteria andUpdateUserIsNotNull() {
            addCriterion("updateUser is not null");
            return (Criteria) this;
        }

        public Criteria andUpdateUserEqualTo(String value) {
            addCriterion("updateUser =", value, "updateUser");
            return (Criteria) this;
        }

        public Criteria andUpdateUserNotEqualTo(String value) {
            addCriterion("updateUser <>", value, "updateUser");
            return (Criteria) this;
        }

        public Criteria andUpdateUserGreaterThan(String value) {
            addCriterion("updateUser >", value, "updateUser");
            return (Criteria) this;
        }

        public Criteria andUpdateUserGreaterThanOrEqualTo(String value) {
            addCriterion("updateUser >=", value, "updateUser");
            return (Criteria) this;
        }

        public Criteria andUpdateUserLessThan(String value) {
            addCriterion("updateUser <", value, "updateUser");
            return (Criteria) this;
        }

        public Criteria andUpdateUserLessThanOrEqualTo(String value) {
            addCriterion("updateUser <=", value, "updateUser");
            return (Criteria) this;
        }

        public Criteria andUpdateUserLike(String value) {
            addCriterion("updateUser like", value, "updateUser");
            return (Criteria) this;
        }

        public Criteria andUpdateUserNotLike(String value) {
            addCriterion("updateUser not like", value, "updateUser");
            return (Criteria) this;
        }

        public Criteria andUpdateUserIn(List<String> values) {
            addCriterion("updateUser in", values, "updateUser");
            return (Criteria) this;
        }

        public Criteria andUpdateUserNotIn(List<String> values) {
            addCriterion("updateUser not in", values, "updateUser");
            return (Criteria) this;
        }

        public Criteria andUpdateUserBetween(String value1, String value2) {
            addCriterion("updateUser between", value1, value2, "updateUser");
            return (Criteria) this;
        }

        public Criteria andUpdateUserNotBetween(String value1, String value2) {
            addCriterion("updateUser not between", value1, value2, "updateUser");
            return (Criteria) this;
        }

        public Criteria andUserNameLikeInsensitive(String value) {
            addCriterion("upper(userName) like", value.toUpperCase(), "userName");
            return (Criteria) this;
        }

        public Criteria andGroupUserIdsLikeInsensitive(String value) {
            addCriterion("upper(groupUserIds) like", value.toUpperCase(), "groupUserIds");
            return (Criteria) this;
        }

        public Criteria andCreateUserLikeInsensitive(String value) {
            addCriterion("upper(createUser) like", value.toUpperCase(), "createUser");
            return (Criteria) this;
        }

        public Criteria andUpdateUserLikeInsensitive(String value) {
            addCriterion("upper(updateUser) like", value.toUpperCase(), "updateUser");
            return (Criteria) this;
        }

        protected void addCriterionIgnoreNull(String condition, Object value, String property) {
            if (value != null) {
                if (value instanceof String) {
                    if (condition.toLowerCase().endsWith("like")) {
                        if (((String) value).replaceAll("%", "").length() > 0) {
                            criteria.add(new Criterion(condition, value));
                        }
                    } else if (((String) value).length() > 0) {
                        criteria.add(new Criterion(condition, value));
                    }
                } else if (value instanceof List<?>) {
                    if (((List<?>) value).size() > 0) {
                        criteria.add(new Criterion(condition, value));
                    }
                } else {
                    criteria.add(new Criterion(condition, value));
                }
            }
        }

        public Criteria andRecommendIdEqualToIgnoreNull(Long value) {
            addCriterionIgnoreNull("recommendId =", value, "recommendId");
            return (Criteria) this;
        }

        public Criteria andRecommendIdNotEqualToIgnoreNull(Long value) {
            addCriterionIgnoreNull("recommendId <>", value, "recommendId");
            return (Criteria) this;
        }

        public Criteria andRecommendIdGreaterThanIgnoreNull(Long value) {
            addCriterionIgnoreNull("recommendId >", value, "recommendId");
            return (Criteria) this;
        }

        public Criteria andRecommendIdGreaterThanOrEqualToIgnoreNull(Long value) {
            addCriterionIgnoreNull("recommendId >=", value, "recommendId");
            return (Criteria) this;
        }

        public Criteria andRecommendIdLessThanIgnoreNull(Long value) {
            addCriterionIgnoreNull("recommendId <", value, "recommendId");
            return (Criteria) this;
        }

        public Criteria andRecommendIdLessThanOrEqualToIgnoreNull(Long value) {
            addCriterionIgnoreNull("recommendId <=", value, "recommendId");
            return (Criteria) this;
        }

        public Criteria andRecommendIdInIgnoreNull(List<Long> value) {
            addCriterionIgnoreNull("recommendId in", value, "recommendId");
            return (Criteria) this;
        }

        public Criteria andRecommendIdNotInIgnoreNull(List<Long> value) {
            addCriterionIgnoreNull("recommendId not in", value, "recommendId");
            return (Criteria) this;
        }

        public Criteria andUserIdEqualToIgnoreNull(Long value) {
            addCriterionIgnoreNull("userId =", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotEqualToIgnoreNull(Long value) {
            addCriterionIgnoreNull("userId <>", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdGreaterThanIgnoreNull(Long value) {
            addCriterionIgnoreNull("userId >", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdGreaterThanOrEqualToIgnoreNull(Long value) {
            addCriterionIgnoreNull("userId >=", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdLessThanIgnoreNull(Long value) {
            addCriterionIgnoreNull("userId <", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdLessThanOrEqualToIgnoreNull(Long value) {
            addCriterionIgnoreNull("userId <=", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdInIgnoreNull(List<Long> value) {
            addCriterionIgnoreNull("userId in", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotInIgnoreNull(List<Long> value) {
            addCriterionIgnoreNull("userId not in", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserNameEqualToIgnoreNull(String value) {
            addCriterionIgnoreNull("userName =", value, "userName");
            return (Criteria) this;
        }

        public Criteria andUserNameNotEqualToIgnoreNull(String value) {
            addCriterionIgnoreNull("userName <>", value, "userName");
            return (Criteria) this;
        }

        public Criteria andUserNameGreaterThanIgnoreNull(String value) {
            addCriterionIgnoreNull("userName >", value, "userName");
            return (Criteria) this;
        }

        public Criteria andUserNameGreaterThanOrEqualToIgnoreNull(String value) {
            addCriterionIgnoreNull("userName >=", value, "userName");
            return (Criteria) this;
        }

        public Criteria andUserNameLessThanIgnoreNull(String value) {
            addCriterionIgnoreNull("userName <", value, "userName");
            return (Criteria) this;
        }

        public Criteria andUserNameLessThanOrEqualToIgnoreNull(String value) {
            addCriterionIgnoreNull("userName <=", value, "userName");
            return (Criteria) this;
        }

        public Criteria andUserNameLikeIgnoreNull(String value) {
            addCriterionIgnoreNull("userName like", value, "userName");
            return (Criteria) this;
        }

        public Criteria andUserNameNotLikeIgnoreNull(String value) {
            addCriterionIgnoreNull("userName not like", value, "userName");
            return (Criteria) this;
        }

        public Criteria andUserNameInIgnoreNull(List<String> value) {
            addCriterionIgnoreNull("userName in", value, "userName");
            return (Criteria) this;
        }

        public Criteria andUserNameNotInIgnoreNull(List<String> value) {
            addCriterionIgnoreNull("userName not in", value, "userName");
            return (Criteria) this;
        }

        public Criteria andParentIdEqualToIgnoreNull(Long value) {
            addCriterionIgnoreNull("parentId =", value, "parentId");
            return (Criteria) this;
        }

        public Criteria andParentIdNotEqualToIgnoreNull(Long value) {
            addCriterionIgnoreNull("parentId <>", value, "parentId");
            return (Criteria) this;
        }

        public Criteria andParentIdGreaterThanIgnoreNull(Long value) {
            addCriterionIgnoreNull("parentId >", value, "parentId");
            return (Criteria) this;
        }

        public Criteria andParentIdGreaterThanOrEqualToIgnoreNull(Long value) {
            addCriterionIgnoreNull("parentId >=", value, "parentId");
            return (Criteria) this;
        }

        public Criteria andParentIdLessThanIgnoreNull(Long value) {
            addCriterionIgnoreNull("parentId <", value, "parentId");
            return (Criteria) this;
        }

        public Criteria andParentIdLessThanOrEqualToIgnoreNull(Long value) {
            addCriterionIgnoreNull("parentId <=", value, "parentId");
            return (Criteria) this;
        }

        public Criteria andParentIdInIgnoreNull(List<Long> value) {
            addCriterionIgnoreNull("parentId in", value, "parentId");
            return (Criteria) this;
        }

        public Criteria andParentIdNotInIgnoreNull(List<Long> value) {
            addCriterionIgnoreNull("parentId not in", value, "parentId");
            return (Criteria) this;
        }

        public Criteria andGroupUserIdsEqualToIgnoreNull(String value) {
            addCriterionIgnoreNull("groupUserIds =", value, "groupUserIds");
            return (Criteria) this;
        }

        public Criteria andGroupUserIdsNotEqualToIgnoreNull(String value) {
            addCriterionIgnoreNull("groupUserIds <>", value, "groupUserIds");
            return (Criteria) this;
        }

        public Criteria andGroupUserIdsGreaterThanIgnoreNull(String value) {
            addCriterionIgnoreNull("groupUserIds >", value, "groupUserIds");
            return (Criteria) this;
        }

        public Criteria andGroupUserIdsGreaterThanOrEqualToIgnoreNull(String value) {
            addCriterionIgnoreNull("groupUserIds >=", value, "groupUserIds");
            return (Criteria) this;
        }

        public Criteria andGroupUserIdsLessThanIgnoreNull(String value) {
            addCriterionIgnoreNull("groupUserIds <", value, "groupUserIds");
            return (Criteria) this;
        }

        public Criteria andGroupUserIdsLessThanOrEqualToIgnoreNull(String value) {
            addCriterionIgnoreNull("groupUserIds <=", value, "groupUserIds");
            return (Criteria) this;
        }

        public Criteria andGroupUserIdsLikeIgnoreNull(String value) {
            addCriterionIgnoreNull("groupUserIds like", value, "groupUserIds");
            return (Criteria) this;
        }

        public Criteria andGroupUserIdsNotLikeIgnoreNull(String value) {
            addCriterionIgnoreNull("groupUserIds not like", value, "groupUserIds");
            return (Criteria) this;
        }

        public Criteria andGroupUserIdsInIgnoreNull(List<String> value) {
            addCriterionIgnoreNull("groupUserIds in", value, "groupUserIds");
            return (Criteria) this;
        }

        public Criteria andGroupUserIdsNotInIgnoreNull(List<String> value) {
            addCriterionIgnoreNull("groupUserIds not in", value, "groupUserIds");
            return (Criteria) this;
        }

        public Criteria andRecommendNumberEqualToIgnoreNull(Integer value) {
            addCriterionIgnoreNull("recommendNumber =", value, "recommendNumber");
            return (Criteria) this;
        }

        public Criteria andRecommendNumberNotEqualToIgnoreNull(Integer value) {
            addCriterionIgnoreNull("recommendNumber <>", value, "recommendNumber");
            return (Criteria) this;
        }

        public Criteria andRecommendNumberGreaterThanIgnoreNull(Integer value) {
            addCriterionIgnoreNull("recommendNumber >", value, "recommendNumber");
            return (Criteria) this;
        }

        public Criteria andRecommendNumberGreaterThanOrEqualToIgnoreNull(Integer value) {
            addCriterionIgnoreNull("recommendNumber >=", value, "recommendNumber");
            return (Criteria) this;
        }

        public Criteria andRecommendNumberLessThanIgnoreNull(Integer value) {
            addCriterionIgnoreNull("recommendNumber <", value, "recommendNumber");
            return (Criteria) this;
        }

        public Criteria andRecommendNumberLessThanOrEqualToIgnoreNull(Integer value) {
            addCriterionIgnoreNull("recommendNumber <=", value, "recommendNumber");
            return (Criteria) this;
        }

        public Criteria andRecommendNumberInIgnoreNull(List<Integer> value) {
            addCriterionIgnoreNull("recommendNumber in", value, "recommendNumber");
            return (Criteria) this;
        }

        public Criteria andRecommendNumberNotInIgnoreNull(List<Integer> value) {
            addCriterionIgnoreNull("recommendNumber not in", value, "recommendNumber");
            return (Criteria) this;
        }

        public Criteria andTeamAchievementEqualToIgnoreNull(BigDecimal value) {
            addCriterionIgnoreNull("teamAchievement =", value, "teamAchievement");
            return (Criteria) this;
        }

        public Criteria andTeamAchievementNotEqualToIgnoreNull(BigDecimal value) {
            addCriterionIgnoreNull("teamAchievement <>", value, "teamAchievement");
            return (Criteria) this;
        }

        public Criteria andTeamAchievementGreaterThanIgnoreNull(BigDecimal value) {
            addCriterionIgnoreNull("teamAchievement >", value, "teamAchievement");
            return (Criteria) this;
        }

        public Criteria andTeamAchievementGreaterThanOrEqualToIgnoreNull(BigDecimal value) {
            addCriterionIgnoreNull("teamAchievement >=", value, "teamAchievement");
            return (Criteria) this;
        }

        public Criteria andTeamAchievementLessThanIgnoreNull(BigDecimal value) {
            addCriterionIgnoreNull("teamAchievement <", value, "teamAchievement");
            return (Criteria) this;
        }

        public Criteria andTeamAchievementLessThanOrEqualToIgnoreNull(BigDecimal value) {
            addCriterionIgnoreNull("teamAchievement <=", value, "teamAchievement");
            return (Criteria) this;
        }

        public Criteria andTeamAchievementInIgnoreNull(List<BigDecimal> value) {
            addCriterionIgnoreNull("teamAchievement in", value, "teamAchievement");
            return (Criteria) this;
        }

        public Criteria andTeamAchievementNotInIgnoreNull(List<BigDecimal> value) {
            addCriterionIgnoreNull("teamAchievement not in", value, "teamAchievement");
            return (Criteria) this;
        }

        public Criteria andCreateTimeEqualToIgnoreNull(Date value) {
            addCriterionIgnoreNull("createTime =", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotEqualToIgnoreNull(Date value) {
            addCriterionIgnoreNull("createTime <>", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeGreaterThanIgnoreNull(Date value) {
            addCriterionIgnoreNull("createTime >", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeGreaterThanOrEqualToIgnoreNull(Date value) {
            addCriterionIgnoreNull("createTime >=", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeLessThanIgnoreNull(Date value) {
            addCriterionIgnoreNull("createTime <", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeLessThanOrEqualToIgnoreNull(Date value) {
            addCriterionIgnoreNull("createTime <=", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeInIgnoreNull(List<Date> value) {
            addCriterionIgnoreNull("createTime in", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotInIgnoreNull(List<Date> value) {
            addCriterionIgnoreNull("createTime not in", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateUserEqualToIgnoreNull(String value) {
            addCriterionIgnoreNull("createUser =", value, "createUser");
            return (Criteria) this;
        }

        public Criteria andCreateUserNotEqualToIgnoreNull(String value) {
            addCriterionIgnoreNull("createUser <>", value, "createUser");
            return (Criteria) this;
        }

        public Criteria andCreateUserGreaterThanIgnoreNull(String value) {
            addCriterionIgnoreNull("createUser >", value, "createUser");
            return (Criteria) this;
        }

        public Criteria andCreateUserGreaterThanOrEqualToIgnoreNull(String value) {
            addCriterionIgnoreNull("createUser >=", value, "createUser");
            return (Criteria) this;
        }

        public Criteria andCreateUserLessThanIgnoreNull(String value) {
            addCriterionIgnoreNull("createUser <", value, "createUser");
            return (Criteria) this;
        }

        public Criteria andCreateUserLessThanOrEqualToIgnoreNull(String value) {
            addCriterionIgnoreNull("createUser <=", value, "createUser");
            return (Criteria) this;
        }

        public Criteria andCreateUserLikeIgnoreNull(String value) {
            addCriterionIgnoreNull("createUser like", value, "createUser");
            return (Criteria) this;
        }

        public Criteria andCreateUserNotLikeIgnoreNull(String value) {
            addCriterionIgnoreNull("createUser not like", value, "createUser");
            return (Criteria) this;
        }

        public Criteria andCreateUserInIgnoreNull(List<String> value) {
            addCriterionIgnoreNull("createUser in", value, "createUser");
            return (Criteria) this;
        }

        public Criteria andCreateUserNotInIgnoreNull(List<String> value) {
            addCriterionIgnoreNull("createUser not in", value, "createUser");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeEqualToIgnoreNull(Date value) {
            addCriterionIgnoreNull("updateTime =", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeNotEqualToIgnoreNull(Date value) {
            addCriterionIgnoreNull("updateTime <>", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeGreaterThanIgnoreNull(Date value) {
            addCriterionIgnoreNull("updateTime >", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeGreaterThanOrEqualToIgnoreNull(Date value) {
            addCriterionIgnoreNull("updateTime >=", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeLessThanIgnoreNull(Date value) {
            addCriterionIgnoreNull("updateTime <", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeLessThanOrEqualToIgnoreNull(Date value) {
            addCriterionIgnoreNull("updateTime <=", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeInIgnoreNull(List<Date> value) {
            addCriterionIgnoreNull("updateTime in", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeNotInIgnoreNull(List<Date> value) {
            addCriterionIgnoreNull("updateTime not in", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateUserEqualToIgnoreNull(String value) {
            addCriterionIgnoreNull("updateUser =", value, "updateUser");
            return (Criteria) this;
        }

        public Criteria andUpdateUserNotEqualToIgnoreNull(String value) {
            addCriterionIgnoreNull("updateUser <>", value, "updateUser");
            return (Criteria) this;
        }

        public Criteria andUpdateUserGreaterThanIgnoreNull(String value) {
            addCriterionIgnoreNull("updateUser >", value, "updateUser");
            return (Criteria) this;
        }

        public Criteria andUpdateUserGreaterThanOrEqualToIgnoreNull(String value) {
            addCriterionIgnoreNull("updateUser >=", value, "updateUser");
            return (Criteria) this;
        }

        public Criteria andUpdateUserLessThanIgnoreNull(String value) {
            addCriterionIgnoreNull("updateUser <", value, "updateUser");
            return (Criteria) this;
        }

        public Criteria andUpdateUserLessThanOrEqualToIgnoreNull(String value) {
            addCriterionIgnoreNull("updateUser <=", value, "updateUser");
            return (Criteria) this;
        }

        public Criteria andUpdateUserLikeIgnoreNull(String value) {
            addCriterionIgnoreNull("updateUser like", value, "updateUser");
            return (Criteria) this;
        }

        public Criteria andUpdateUserNotLikeIgnoreNull(String value) {
            addCriterionIgnoreNull("updateUser not like", value, "updateUser");
            return (Criteria) this;
        }

        public Criteria andUpdateUserInIgnoreNull(List<String> value) {
            addCriterionIgnoreNull("updateUser in", value, "updateUser");
            return (Criteria) this;
        }

        public Criteria andUpdateUserNotInIgnoreNull(List<String> value) {
            addCriterionIgnoreNull("updateUser not in", value, "updateUser");
            return (Criteria) this;
        }

        public Criteria andUserNameLikeInsensitiveIgnoreNull(String value) {
            addCriterionIgnoreNull("upper(userName) like", value.toUpperCase(), "userName");
            return (Criteria) this;
        }

        public Criteria andGroupUserIdsLikeInsensitiveIgnoreNull(String value) {
            addCriterionIgnoreNull("upper(groupUserIds) like", value.toUpperCase(), "groupUserIds");
            return (Criteria) this;
        }

        public Criteria andCreateUserLikeInsensitiveIgnoreNull(String value) {
            addCriterionIgnoreNull("upper(createUser) like", value.toUpperCase(), "createUser");
            return (Criteria) this;
        }

        public Criteria andUpdateUserLikeInsensitiveIgnoreNull(String value) {
            addCriterionIgnoreNull("upper(updateUser) like", value.toUpperCase(), "updateUser");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table u_recommend
     *
     * @mbggenerated
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }

        public Criteria andRecommendIdLikeInsensitive(String value) {
            addCriterion("upper(recommendId) like", value.toUpperCase(), "recommendId");
            return this;
        }

        public Criteria andUserIdLikeInsensitive(String value) {
            addCriterion("upper(userId) like", value.toUpperCase(), "userId");
            return this;
        }

        public Criteria andUserNameLikeInsensitive(String value) {
            addCriterion("upper(userName) like", value.toUpperCase(), "userName");
            return this;
        }

        public Criteria andParentIdLikeInsensitive(String value) {
            addCriterion("upper(parentId) like", value.toUpperCase(), "parentId");
            return this;
        }

        public Criteria andGroupUserIdsLikeInsensitive(String value) {
            addCriterion("upper(groupUserIds) like", value.toUpperCase(), "groupUserIds");
            return this;
        }

        public Criteria andRecommendNumberLikeInsensitive(String value) {
            addCriterion("upper(recommendNumber) like", value.toUpperCase(), "recommendNumber");
            return this;
        }

        public Criteria andTeamAchievementLikeInsensitive(String value) {
            addCriterion("upper(teamAchievement) like", value.toUpperCase(), "teamAchievement");
            return this;
        }

        public Criteria andCreateTimeLikeInsensitive(String value) {
            addCriterion("upper(createTime) like", value.toUpperCase(), "createTime");
            return this;
        }

        public Criteria andCreateUserLikeInsensitive(String value) {
            addCriterion("upper(createUser) like", value.toUpperCase(), "createUser");
            return this;
        }

        public Criteria andUpdateTimeLikeInsensitive(String value) {
            addCriterion("upper(updateTime) like", value.toUpperCase(), "updateTime");
            return this;
        }

        public Criteria andUpdateUserLikeInsensitive(String value) {
            addCriterion("upper(updateUser) like", value.toUpperCase(), "updateUser");
            return this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table u_recommend
     *
     * @mbggenerated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}