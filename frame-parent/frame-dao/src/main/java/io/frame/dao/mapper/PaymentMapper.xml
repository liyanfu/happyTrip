<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="io.frame.dao.mapper.PaymentMapper">
  <resultMap id="BaseResultMap" type="io.frame.dao.entity.Payment">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="paymentId" jdbcType="BIGINT" property="paymentId" />
    <result column="paymentKey" jdbcType="VARCHAR" property="paymentKey" />
    <result column="paymentName" jdbcType="VARCHAR" property="paymentName" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="sort" jdbcType="INTEGER" property="sort" />
    <result column="createTime" jdbcType="TIMESTAMP" property="createTime" />
    <result column="createUser" jdbcType="VARCHAR" property="createUser" />
    <result column="updateTime" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="updateUser" jdbcType="VARCHAR" property="updateUser" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    paymentId, paymentKey, paymentName, status, sort, createTime, createUser, updateTime, 
    updateUser
  </sql>
  <select id="selectByExample" parameterType="io.frame.dao.entity.PaymentExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from s_payment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExampleShowField" parameterType="map" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="example!=null and example.distinct">
      distinct
    </if>
    <foreach collection="showField" item="column" separator=",">
      ${column}
    </foreach>
    from s_payment
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
    <if test="example.orderByClause != null">
      order by ${example.orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from s_payment
    where paymentId = #{paymentId,jdbcType=BIGINT}
  </select>
  <select id="selectByPrimaryKeyShowField" parameterType="map" resultType="io.frame.dao.entity.Payment">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <foreach collection="showField" item="column" separator=",">
      ${column}
    </foreach>
    from s_payment
    where paymentId = #{paymentId,jdbcType=BIGINT}
    limit 1
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from s_payment
    where paymentId = #{paymentId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="io.frame.dao.entity.PaymentExample">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from s_payment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="io.frame.dao.entity.Payment">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into s_payment (paymentId, paymentKey, paymentName, 
      status, sort, createTime, 
      createUser, updateTime, updateUser
      )
    values (#{paymentId,jdbcType=BIGINT}, #{paymentKey,jdbcType=VARCHAR}, #{paymentName,jdbcType=VARCHAR}, 
      #{status,jdbcType=INTEGER}, #{sort,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, 
      #{createUser,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}, #{updateUser,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="io.frame.dao.entity.Payment">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into s_payment
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="paymentId != null">
        paymentId,
      </if>
      <if test="paymentKey != null">
        paymentKey,
      </if>
      <if test="paymentName != null">
        paymentName,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="sort != null">
        sort,
      </if>
      <if test="createTime != null">
        createTime,
      </if>
      <if test="createUser != null">
        createUser,
      </if>
      <if test="updateTime != null">
        updateTime,
      </if>
      <if test="updateUser != null">
        updateUser,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="paymentId != null">
        #{paymentId,jdbcType=BIGINT},
      </if>
      <if test="paymentKey != null">
        #{paymentKey,jdbcType=VARCHAR},
      </if>
      <if test="paymentName != null">
        #{paymentName,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="sort != null">
        #{sort,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null">
        #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        #{updateUser,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="io.frame.dao.entity.PaymentExample" resultType="int">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from s_payment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update s_payment
    <set>
      <if test="record.paymentId != null">
        paymentId = #{record.paymentId,jdbcType=BIGINT},
      </if>
      <if test="record.paymentKey != null">
        paymentKey = #{record.paymentKey,jdbcType=VARCHAR},
      </if>
      <if test="record.paymentName != null">
        paymentName = #{record.paymentName,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.sort != null">
        sort = #{record.sort,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        createTime = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createUser != null">
        createUser = #{record.createUser,jdbcType=VARCHAR},
      </if>
      <if test="record.updateTime != null">
        updateTime = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateUser != null">
        updateUser = #{record.updateUser,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update s_payment
    set paymentId = #{record.paymentId,jdbcType=BIGINT},
      paymentKey = #{record.paymentKey,jdbcType=VARCHAR},
      paymentName = #{record.paymentName,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=INTEGER},
      sort = #{record.sort,jdbcType=INTEGER},
      createTime = #{record.createTime,jdbcType=TIMESTAMP},
      createUser = #{record.createUser,jdbcType=VARCHAR},
      updateTime = #{record.updateTime,jdbcType=TIMESTAMP},
      updateUser = #{record.updateUser,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleSelectiveSync" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update  s_payment
    <set>
    <if test="record.status != null">
       status = (case when status is null then #{record.status,jdbcType=INTEGER} else status + #{record.status,jdbcType=INTEGER} end ),
    </if>
    <if test="record.sort != null">
       sort = (case when sort is null then #{record.sort,jdbcType=INTEGER} else sort + #{record.sort,jdbcType=INTEGER} end ),
    </if>
    </set>
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="io.frame.dao.entity.Payment">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update s_payment
    <set>
      <if test="paymentKey != null">
        paymentKey = #{paymentKey,jdbcType=VARCHAR},
      </if>
      <if test="paymentName != null">
        paymentName = #{paymentName,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="sort != null">
        sort = #{sort,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        createTime = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null">
        createUser = #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        updateTime = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        updateUser = #{updateUser,jdbcType=VARCHAR},
      </if>
    </set>
    where paymentId = #{paymentId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="io.frame.dao.entity.Payment">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update s_payment
    set paymentKey = #{paymentKey,jdbcType=VARCHAR},
      paymentName = #{paymentName,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      sort = #{sort,jdbcType=INTEGER},
      createTime = #{createTime,jdbcType=TIMESTAMP},
      createUser = #{createUser,jdbcType=VARCHAR},
      updateTime = #{updateTime,jdbcType=TIMESTAMP},
      updateUser = #{updateUser,jdbcType=VARCHAR}
    where paymentId = #{paymentId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeySelectiveSync" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update  s_payment
    <set>
    <if test="status != null">
       status = (case when status is null then #{status,jdbcType=INTEGER} else status + #{status,jdbcType=INTEGER} end ),
    </if>
    <if test="sort != null">
       sort = (case when sort is null then #{sort,jdbcType=INTEGER} else sort + #{sort,jdbcType=INTEGER} end ),
    </if>
    </set>
    where paymentId = #{paymentId,jdbcType=BIGINT}
  </update>
  <insert id="insertBatch" parameterType="java.util.List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into s_payment
    (paymentId, paymentKey, paymentName, status, sort, createTime, createUser, updateTime, 
      updateUser)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.paymentId,jdbcType=BIGINT}, #{item.paymentKey,jdbcType=VARCHAR}, #{item.paymentName,jdbcType=VARCHAR}, 
        #{item.status,jdbcType=INTEGER}, #{item.sort,jdbcType=INTEGER}, #{item.createTime,jdbcType=TIMESTAMP}, 
        #{item.createUser,jdbcType=VARCHAR}, #{item.updateTime,jdbcType=TIMESTAMP}, #{item.updateUser,jdbcType=VARCHAR}
        )
    </foreach>
  </insert>
  <insert id="insertBatchSelective" parameterType="java.util.List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into s_payment (
    <foreach collection="showField" item="one" separator=",">
      ${one}
    </foreach>
    )
    values
    <foreach collection="list" item="item" separator=",">
      (
      <foreach collection="showField" item="column" separator=",">
        <if test="'paymentId' == column">
          #{item.paymentId,jdbcType=BIGINT}
        </if>
        <if test="'paymentKey' == column">
          #{item.paymentKey,jdbcType=VARCHAR}
        </if>
        <if test="'paymentName' == column">
          #{item.paymentName,jdbcType=VARCHAR}
        </if>
        <if test="'status' == column">
          #{item.status,jdbcType=INTEGER}
        </if>
        <if test="'sort' == column">
          #{item.sort,jdbcType=INTEGER}
        </if>
        <if test="'createTime' == column">
          #{item.createTime,jdbcType=TIMESTAMP}
        </if>
        <if test="'createUser' == column">
          #{item.createUser,jdbcType=VARCHAR}
        </if>
        <if test="'updateTime' == column">
          #{item.updateTime,jdbcType=TIMESTAMP}
        </if>
        <if test="'updateUser' == column">
          #{item.updateUser,jdbcType=VARCHAR}
        </if>
      </foreach>
      )
    </foreach>
  </insert>
  <select id="selectOneByExample" parameterType="io.frame.dao.entity.PaymentExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <include refid="Base_Column_List" />
    from s_payment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    limit 1
  </select>
  <select id="selectOneByExampleShowField" parameterType="map" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <foreach collection="showField" item="column" separator=",">
      ${column}
    </foreach>
    from s_payment
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
    <if test="example.orderByClause != null">
      order by ${example.orderByClause}
    </if>
    limit 1
  </select>
  <insert id="upsert" parameterType="io.frame.dao.entity.Payment">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into s_payment
    (paymentId, paymentKey, paymentName, status, sort, createTime, createUser, updateTime, 
      updateUser)
    values
    (#{paymentId,jdbcType=BIGINT}, #{paymentKey,jdbcType=VARCHAR}, #{paymentName,jdbcType=VARCHAR}, 
      #{status,jdbcType=INTEGER}, #{sort,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, 
      #{createUser,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}, #{updateUser,jdbcType=VARCHAR}
      )
    on duplicate key update 
    paymentId =  #{paymentId,jdbcType=BIGINT},
    paymentKey =  #{paymentKey,jdbcType=VARCHAR},
    paymentName =  #{paymentName,jdbcType=VARCHAR},
    status =  #{status,jdbcType=INTEGER},
    sort =  #{sort,jdbcType=INTEGER},
    createTime =  #{createTime,jdbcType=TIMESTAMP},
    createUser =  #{createUser,jdbcType=VARCHAR},
    updateTime =  #{updateTime,jdbcType=TIMESTAMP},
    updateUser =  #{updateUser,jdbcType=VARCHAR}
  </insert>
  <insert id="upsertSelective" parameterType="io.frame.dao.entity.Payment">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into s_payment
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="paymentId != null">
        paymentId,
      </if>
      <if test="paymentKey != null">
        paymentKey,
      </if>
      <if test="paymentName != null">
        paymentName,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="sort != null">
        sort,
      </if>
      <if test="createTime != null">
        createTime,
      </if>
      <if test="createUser != null">
        createUser,
      </if>
      <if test="updateTime != null">
        updateTime,
      </if>
      <if test="updateUser != null">
        updateUser,
      </if>
    </trim>
    values
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="paymentId != null">
        #{paymentId,jdbcType=BIGINT},
      </if>
      <if test="paymentKey != null">
        #{paymentKey,jdbcType=VARCHAR},
      </if>
      <if test="paymentName != null">
        #{paymentName,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="sort != null">
        #{sort,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null">
        #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        #{updateUser,jdbcType=VARCHAR},
      </if>
    </trim>
    on duplicate key update 
    <trim suffixOverrides=",">
      <if test="paymentId != null">
        paymentId =  #{paymentId,jdbcType=BIGINT},
      </if>
      <if test="paymentKey != null">
        paymentKey =  #{paymentKey,jdbcType=VARCHAR},
      </if>
      <if test="paymentName != null">
        paymentName =  #{paymentName,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status =  #{status,jdbcType=INTEGER},
      </if>
      <if test="sort != null">
        sort =  #{sort,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        createTime =  #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null">
        createUser =  #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        updateTime =  #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        updateUser =  #{updateUser,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
</mapper>