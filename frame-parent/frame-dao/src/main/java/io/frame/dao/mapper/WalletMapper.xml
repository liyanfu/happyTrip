<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="io.frame.dao.mapper.WalletMapper">
  <resultMap id="BaseResultMap" type="io.frame.dao.entity.Wallet">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="walletId" jdbcType="BIGINT" property="walletId" />
    <result column="userId" jdbcType="BIGINT" property="userId" />
    <result column="balance" jdbcType="DECIMAL" property="balance" />
    <result column="profitMoney" jdbcType="DECIMAL" property="profitMoney" />
    <result column="createTime" jdbcType="TIMESTAMP" property="createTime" />
    <result column="createUser" jdbcType="VARCHAR" property="createUser" />
    <result column="updateTime" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="updateUser" jdbcType="VARCHAR" property="updateUser" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    walletId, userId, balance, profitMoney, createTime, createUser, updateTime, updateUser
  </sql>
  <select id="selectByExample" parameterType="io.frame.dao.entity.WalletExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from u_wallet
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExampleShowField" parameterType="map" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="example!=null and example.distinct">
      distinct
    </if>
    <foreach collection="showField" item="column" separator=",">
      ${column}
    </foreach>
    from u_wallet
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
    <if test="example.orderByClause != null">
      order by ${example.orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from u_wallet
    where walletId = #{walletId,jdbcType=BIGINT}
  </select>
  <select id="selectByPrimaryKeyShowField" parameterType="map" resultType="io.frame.dao.entity.Wallet">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <foreach collection="showField" item="column" separator=",">
      ${column}
    </foreach>
    from u_wallet
    where walletId = #{walletId,jdbcType=BIGINT}
    limit 1
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from u_wallet
    where walletId = #{walletId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="io.frame.dao.entity.WalletExample">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from u_wallet
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="io.frame.dao.entity.Wallet">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into u_wallet (walletId, userId, balance, 
      profitMoney, createTime, createUser, 
      updateTime, updateUser)
    values (#{walletId,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, #{balance,jdbcType=DECIMAL}, 
      #{profitMoney,jdbcType=DECIMAL}, #{createTime,jdbcType=TIMESTAMP}, #{createUser,jdbcType=VARCHAR}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{updateUser,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="io.frame.dao.entity.Wallet">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into u_wallet
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="walletId != null">
        walletId,
      </if>
      <if test="userId != null">
        userId,
      </if>
      <if test="balance != null">
        balance,
      </if>
      <if test="profitMoney != null">
        profitMoney,
      </if>
      <if test="createTime != null">
        createTime,
      </if>
      <if test="createUser != null">
        createUser,
      </if>
      <if test="updateTime != null">
        updateTime,
      </if>
      <if test="updateUser != null">
        updateUser,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="walletId != null">
        #{walletId,jdbcType=BIGINT},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="balance != null">
        #{balance,jdbcType=DECIMAL},
      </if>
      <if test="profitMoney != null">
        #{profitMoney,jdbcType=DECIMAL},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null">
        #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        #{updateUser,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="io.frame.dao.entity.WalletExample" resultType="int">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from u_wallet
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update u_wallet
    <set>
      <if test="record.walletId != null">
        walletId = #{record.walletId,jdbcType=BIGINT},
      </if>
      <if test="record.userId != null">
        userId = #{record.userId,jdbcType=BIGINT},
      </if>
      <if test="record.balance != null">
        balance = #{record.balance,jdbcType=DECIMAL},
      </if>
      <if test="record.profitMoney != null">
        profitMoney = #{record.profitMoney,jdbcType=DECIMAL},
      </if>
      <if test="record.createTime != null">
        createTime = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createUser != null">
        createUser = #{record.createUser,jdbcType=VARCHAR},
      </if>
      <if test="record.updateTime != null">
        updateTime = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateUser != null">
        updateUser = #{record.updateUser,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update u_wallet
    set walletId = #{record.walletId,jdbcType=BIGINT},
      userId = #{record.userId,jdbcType=BIGINT},
      balance = #{record.balance,jdbcType=DECIMAL},
      profitMoney = #{record.profitMoney,jdbcType=DECIMAL},
      createTime = #{record.createTime,jdbcType=TIMESTAMP},
      createUser = #{record.createUser,jdbcType=VARCHAR},
      updateTime = #{record.updateTime,jdbcType=TIMESTAMP},
      updateUser = #{record.updateUser,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleSelectiveSync" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update  u_wallet
    <set>
    <if test="record.balance != null">
       balance = (case when balance is null then #{record.balance,jdbcType=DECIMAL} else balance + #{record.balance,jdbcType=DECIMAL} end ),
    </if>
    <if test="record.profitMoney != null">
       profitMoney = (case when profitMoney is null then #{record.profitMoney,jdbcType=DECIMAL} else profitMoney + #{record.profitMoney,jdbcType=DECIMAL} end ),
    </if>
    </set>
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="io.frame.dao.entity.Wallet">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update u_wallet
    <set>
      <if test="userId != null">
        userId = #{userId,jdbcType=BIGINT},
      </if>
      <if test="balance != null">
        balance = #{balance,jdbcType=DECIMAL},
      </if>
      <if test="profitMoney != null">
        profitMoney = #{profitMoney,jdbcType=DECIMAL},
      </if>
      <if test="createTime != null">
        createTime = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null">
        createUser = #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        updateTime = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        updateUser = #{updateUser,jdbcType=VARCHAR},
      </if>
    </set>
    where walletId = #{walletId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="io.frame.dao.entity.Wallet">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update u_wallet
    set userId = #{userId,jdbcType=BIGINT},
      balance = #{balance,jdbcType=DECIMAL},
      profitMoney = #{profitMoney,jdbcType=DECIMAL},
      createTime = #{createTime,jdbcType=TIMESTAMP},
      createUser = #{createUser,jdbcType=VARCHAR},
      updateTime = #{updateTime,jdbcType=TIMESTAMP},
      updateUser = #{updateUser,jdbcType=VARCHAR}
    where walletId = #{walletId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeySelectiveSync" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update  u_wallet
    <set>
    <if test="balance != null">
       balance = (case when balance is null then #{balance,jdbcType=DECIMAL} else balance + #{balance,jdbcType=DECIMAL} end ),
    </if>
    <if test="profitMoney != null">
       profitMoney = (case when profitMoney is null then #{profitMoney,jdbcType=DECIMAL} else profitMoney + #{profitMoney,jdbcType=DECIMAL} end ),
    </if>
    </set>
    where walletId = #{walletId,jdbcType=BIGINT}
  </update>
  <insert id="insertBatch" parameterType="java.util.List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into u_wallet
    (walletId, userId, balance, profitMoney, createTime, createUser, updateTime, updateUser
      )
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.walletId,jdbcType=BIGINT}, #{item.userId,jdbcType=BIGINT}, #{item.balance,jdbcType=DECIMAL}, 
        #{item.profitMoney,jdbcType=DECIMAL}, #{item.createTime,jdbcType=TIMESTAMP}, #{item.createUser,jdbcType=VARCHAR}, 
        #{item.updateTime,jdbcType=TIMESTAMP}, #{item.updateUser,jdbcType=VARCHAR})
    </foreach>
  </insert>
  <insert id="insertBatchSelective" parameterType="java.util.List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into u_wallet (
    <foreach collection="showField" item="one" separator=",">
      ${one}
    </foreach>
    )
    values
    <foreach collection="list" item="item" separator=",">
      (
      <foreach collection="showField" item="column" separator=",">
        <if test="'walletId' == column">
          #{item.walletId,jdbcType=BIGINT}
        </if>
        <if test="'userId' == column">
          #{item.userId,jdbcType=BIGINT}
        </if>
        <if test="'balance' == column">
          #{item.balance,jdbcType=DECIMAL}
        </if>
        <if test="'profitMoney' == column">
          #{item.profitMoney,jdbcType=DECIMAL}
        </if>
        <if test="'createTime' == column">
          #{item.createTime,jdbcType=TIMESTAMP}
        </if>
        <if test="'createUser' == column">
          #{item.createUser,jdbcType=VARCHAR}
        </if>
        <if test="'updateTime' == column">
          #{item.updateTime,jdbcType=TIMESTAMP}
        </if>
        <if test="'updateUser' == column">
          #{item.updateUser,jdbcType=VARCHAR}
        </if>
      </foreach>
      )
    </foreach>
  </insert>
  <select id="selectOneByExample" parameterType="io.frame.dao.entity.WalletExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <include refid="Base_Column_List" />
    from u_wallet
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    limit 1
  </select>
  <select id="selectOneByExampleShowField" parameterType="map" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <foreach collection="showField" item="column" separator=",">
      ${column}
    </foreach>
    from u_wallet
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
    <if test="example.orderByClause != null">
      order by ${example.orderByClause}
    </if>
    limit 1
  </select>
  <insert id="upsert" parameterType="io.frame.dao.entity.Wallet">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into u_wallet
    (walletId, userId, balance, profitMoney, createTime, createUser, updateTime, updateUser
      )
    values
    (#{walletId,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, #{balance,jdbcType=DECIMAL}, 
      #{profitMoney,jdbcType=DECIMAL}, #{createTime,jdbcType=TIMESTAMP}, #{createUser,jdbcType=VARCHAR}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{updateUser,jdbcType=VARCHAR})
    on duplicate key update 
    walletId =  #{walletId,jdbcType=BIGINT},
    userId =  #{userId,jdbcType=BIGINT},
    balance = (case when balance is null then #{balance,jdbcType=DECIMAL} else balance + #{balance,jdbcType=DECIMAL} end ),
    profitMoney = (case when profitMoney is null then #{profitMoney,jdbcType=DECIMAL} else profitMoney + #{profitMoney,jdbcType=DECIMAL} end ),
    createTime =  #{createTime,jdbcType=TIMESTAMP},
    createUser =  #{createUser,jdbcType=VARCHAR},
    updateTime =  #{updateTime,jdbcType=TIMESTAMP},
    updateUser =  #{updateUser,jdbcType=VARCHAR}
  </insert>
  <insert id="upsertSelective" parameterType="io.frame.dao.entity.Wallet">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into u_wallet
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="walletId != null">
        walletId,
      </if>
      <if test="userId != null">
        userId,
      </if>
      <if test="balance != null">
        balance,
      </if>
      <if test="profitMoney != null">
        profitMoney,
      </if>
      <if test="createTime != null">
        createTime,
      </if>
      <if test="createUser != null">
        createUser,
      </if>
      <if test="updateTime != null">
        updateTime,
      </if>
      <if test="updateUser != null">
        updateUser,
      </if>
    </trim>
    values
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="walletId != null">
        #{walletId,jdbcType=BIGINT},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="balance != null">
        #{balance,jdbcType=DECIMAL},
      </if>
      <if test="profitMoney != null">
        #{profitMoney,jdbcType=DECIMAL},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null">
        #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        #{updateUser,jdbcType=VARCHAR},
      </if>
    </trim>
    on duplicate key update 
    <trim suffixOverrides=",">
      <if test="walletId != null">
        walletId =  #{walletId,jdbcType=BIGINT},
      </if>
      <if test="userId != null">
        userId =  #{userId,jdbcType=BIGINT},
      </if>
      <if test="balance != null">
        balance = (case when balance is null then #{balance,jdbcType=DECIMAL} else balance + #{balance,jdbcType=DECIMAL} end ),
      </if>
      <if test="profitMoney != null">
        profitMoney = (case when profitMoney is null then #{profitMoney,jdbcType=DECIMAL} else profitMoney + #{profitMoney,jdbcType=DECIMAL} end ),
      </if>
      <if test="createTime != null">
        createTime =  #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null">
        createUser =  #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        updateTime =  #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        updateUser =  #{updateUser,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
</mapper>